	.syntax unified
	.cpu cortex-m4
	.fpu softvfp
	.eabi_attribute 20, 1
	.eabi_attribute 21, 1
	.eabi_attribute 23, 3
	.eabi_attribute 24, 1
	.eabi_attribute 25, 1
	.eabi_attribute 26, 1
	.eabi_attribute 30, 6
	.eabi_attribute 34, 1
	.eabi_attribute 18, 4
	.thumb
	.file	"main.c"
	.text
.Ltext0:
	.global	os_image
	.section	.data.os_image,"aw",%progbits
	.align	2
	.type	os_image, %object
	.size	os_image, 488
os_image:
	.byte	-26
	.byte	1
	.byte	48
	.byte	48
	.byte	70
	.byte	51
	.byte	67
	.byte	68
	.byte	55
	.byte	49
	.byte	57
	.byte	51
	.byte	67
	.byte	68
	.byte	55
	.byte	49
	.byte	57
	.byte	51
	.byte	67
	.byte	68
	.byte	55
	.byte	49
	.byte	57
	.byte	51
	.byte	67
	.byte	68
	.byte	55
	.byte	49
	.byte	57
	.byte	51
	.byte	67
	.byte	68
	.byte	55
	.byte	49
	.byte	57
	.byte	51
	.byte	67
	.byte	68
	.byte	55
	.byte	49
	.byte	57
	.byte	51
	.byte	67
	.byte	68
	.byte	55
	.byte	49
	.byte	57
	.byte	51
	.byte	67
	.byte	68
	.byte	55
	.byte	49
	.byte	57
	.byte	51
	.byte	67
	.byte	68
	.byte	55
	.byte	49
	.byte	57
	.byte	51
	.byte	67
	.byte	68
	.byte	56
	.byte	54
	.byte	57
	.byte	51
	.byte	67
	.byte	68
	.byte	68
	.byte	53
	.byte	57
	.byte	51
	.byte	67
	.byte	66
	.byte	52
	.byte	55
	.byte	67
	.byte	50
	.byte	50
	.byte	57
	.byte	57
	.byte	51
	.byte	67
	.byte	68
	.byte	50
	.byte	65
	.byte	52
	.byte	52
	.byte	67
	.byte	68
	.byte	65
	.byte	65
	.byte	52
	.byte	52
	.byte	50
	.byte	49
	.byte	50
	.byte	70
	.byte	57
	.byte	51
	.byte	48
	.byte	49
	.byte	67
	.byte	56
	.byte	48
	.byte	48
	.byte	51
	.byte	65
	.byte	50
	.byte	55
	.byte	57
	.byte	51
	.byte	69
	.byte	68
	.byte	66
	.byte	49
	.byte	50
	.byte	66
	.byte	67
	.byte	54
	.byte	48
	.byte	50
	.byte	52
	.byte	55
	.byte	51
	.byte	54
	.byte	48
	.byte	48
	.byte	50
	.byte	51
	.byte	49
	.byte	48
	.byte	70
	.byte	66
	.byte	70
	.byte	66
	.byte	67
	.byte	68
	.byte	54
	.byte	53
	.byte	52
	.byte	55
	.byte	67
	.byte	68
	.byte	53
	.byte	53
	.byte	52
	.byte	55
	.byte	67
	.byte	57
	.byte	48
	.byte	54
	.byte	70
	.byte	70
	.byte	48
	.byte	48
	.byte	48
	.byte	48
	.byte	48
	.byte	48
	.byte	48
	.byte	48
	.byte	48
	.byte	48
	.byte	48
	.byte	48
	.byte	48
	.byte	48
	.byte	48
	.byte	48
	.byte	48
	.byte	48
	.byte	48
	.byte	48
	.byte	48
	.byte	48
	.byte	48
	.byte	48
	.byte	48
	.byte	48
	.byte	48
	.byte	48
	.byte	48
	.byte	48
	.byte	48
	.byte	48
	.byte	49
	.byte	48
	.byte	69
	.byte	69
	.byte	67
	.byte	57
	.byte	50
	.byte	69
	.byte	48
	.byte	67
	.byte	51
	.byte	69
	.byte	56
	.byte	48
	.byte	68
	.byte	51
	.byte	49
	.byte	48
	.byte	49
	.byte	69
	.byte	50
	.byte	48
	.byte	48
	.byte	69
	.byte	49
	.byte	48
	.byte	69
	.byte	68
	.byte	53
	.byte	57
	.byte	50
	.byte	54
	.byte	48
	.byte	48
	.byte	48
	.byte	54
	.byte	49
	.byte	48
	.byte	51
	.byte	69
	.byte	70
	.byte	68
	.byte	68
	.byte	51
	.byte	48
	.byte	48
	.byte	51
	.byte	69
	.byte	70
	.byte	67
	.byte	68
	.byte	51
	.byte	48
	.byte	48
	.byte	68
	.byte	66
	.byte	48
	.byte	48
	.byte	65
	.byte	53
	.byte	49
	.byte	55
	.byte	49
	.byte	55
	.byte	53
	.byte	55
	.byte	48
	.byte	48
	.byte	48
	.byte	48
	.byte	48
	.byte	48
	.byte	48
	.byte	48
	.byte	68
	.byte	66
	.byte	48
	.byte	48
	.byte	65
	.byte	53
	.byte	66
	.byte	50
	.byte	49
	.byte	55
	.byte	49
	.byte	55
	.byte	53
	.byte	55
	.byte	48
	.byte	48
	.byte	48
	.byte	48
	.byte	48
	.byte	48
	.byte	68
	.byte	66
	.byte	48
	.byte	48
	.byte	65
	.byte	53
	.byte	49
	.byte	70
	.byte	49
	.byte	70
	.byte	66
	.byte	50
	.byte	53
	.byte	55
	.byte	48
	.byte	48
	.byte	48
	.byte	48
	.byte	48
	.byte	48
	.byte	68
	.byte	66
	.byte	48
	.byte	48
	.byte	65
	.byte	53
	.byte	66
	.byte	50
	.byte	68
	.byte	51
	.byte	49
	.byte	49
	.byte	49
	.byte	48
	.byte	68
	.byte	50
	.byte	50
	.byte	52
	.byte	55
	.byte	67
	.byte	70
	.byte	69
	.byte	48
	.byte	52
	.byte	67
	.byte	50
	.byte	57
	.byte	52
	.byte	57
	.byte	51
	.byte	49
	.byte	67
	.byte	55
	.byte	66
	.byte	70
	.byte	69
	.byte	50
	.byte	67
	.byte	67
	.byte	50
	.byte	56
	.byte	69
	.byte	57
	.byte	51
	.byte	49
	.byte	54
	.byte	48
	.byte	48
	.byte	67
	.byte	57
	.byte	49
	.byte	69
	.byte	70
	.byte	69
	.byte	48
	.byte	69
	.byte	48
	.byte	49
	.byte	51
	.byte	69
	.byte	70
	.byte	70
	.byte	68
	.byte	51
	.byte	48
	.byte	49
	.byte	69
	.byte	68
	.byte	53
	.byte	57
	.byte	68
	.byte	66
	.byte	48
	.byte	49
	.byte	50
	.byte	70
	.byte	52
	.byte	55
	.byte	51
	.byte	69
	.byte	70
	.byte	69
	.byte	68
	.byte	51
	.byte	48
	.byte	48
	.byte	55
	.byte	56
	.byte	70
	.byte	54
	.byte	70
	.byte	67
	.byte	68
	.byte	51
	.byte	48
	.byte	48
	.byte	67
	.byte	66
	.byte	48
	.byte	56
	.byte	67
	.byte	66
	.byte	48
	.byte	56
	.byte	55
	.byte	56
	.byte	70
	.byte	54
	.byte	70
	.byte	67
	.byte	68
	.byte	51
	.byte	48
	.byte	48
	.byte	67
	.byte	66
	.byte	48
	.byte	56
	.byte	67
	.byte	66
	.byte	48
	.byte	56
	.byte	55
	.byte	56
	.byte	70
	.byte	54
	.byte	70
	.byte	67
	.byte	68
	.byte	51
	.byte	48
	.byte	48
	.byte	67
	.byte	66
	.byte	48
	.byte	56
	.byte	67
	.byte	66
	.byte	48
	.byte	56
	.byte	55
	.byte	56
	.byte	70
	.byte	54
	.byte	70
	.byte	67
	.byte	68
	.byte	51
	.byte	48
	.byte	48
	.byte	67
	.byte	66
	.byte	48
	.byte	51
	.byte	55
	.byte	66
	.byte	70
	.byte	69
	.byte	70
	.byte	69
	.byte	67
	.byte	50
	.byte	68
	.byte	57
	.byte	57
	.byte	51
	.byte	51
	.byte	69
	.byte	70
	.byte	67
	.byte	68
	.byte	51
	.byte	48
	.byte	48
	.byte	68
	.byte	66
	.byte	48
	.byte	48
	.byte	67
	.byte	57
	.byte	-44
	.byte	63
	.byte	48
	.byte	48
	.byte	48
	.byte	48
	.byte	63
	.byte	-44
	.section	.rodata.font5x8,"a",%progbits
	.align	2
	.type	font5x8, %object
	.size	font5x8, 480
font5x8:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	95
	.byte	0
	.byte	0
	.byte	0
	.byte	7
	.byte	0
	.byte	7
	.byte	0
	.byte	20
	.byte	127
	.byte	20
	.byte	127
	.byte	20
	.byte	36
	.byte	42
	.byte	127
	.byte	42
	.byte	18
	.byte	35
	.byte	19
	.byte	8
	.byte	100
	.byte	98
	.byte	54
	.byte	73
	.byte	85
	.byte	34
	.byte	80
	.byte	0
	.byte	5
	.byte	3
	.byte	0
	.byte	0
	.byte	0
	.byte	28
	.byte	34
	.byte	65
	.byte	0
	.byte	0
	.byte	65
	.byte	34
	.byte	28
	.byte	0
	.byte	8
	.byte	42
	.byte	28
	.byte	42
	.byte	8
	.byte	8
	.byte	8
	.byte	62
	.byte	8
	.byte	8
	.byte	0
	.byte	80
	.byte	48
	.byte	0
	.byte	0
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	0
	.byte	48
	.byte	48
	.byte	0
	.byte	0
	.byte	32
	.byte	16
	.byte	8
	.byte	4
	.byte	2
	.byte	62
	.byte	81
	.byte	73
	.byte	69
	.byte	62
	.byte	0
	.byte	66
	.byte	127
	.byte	64
	.byte	0
	.byte	66
	.byte	97
	.byte	81
	.byte	73
	.byte	70
	.byte	33
	.byte	65
	.byte	69
	.byte	75
	.byte	49
	.byte	24
	.byte	20
	.byte	18
	.byte	127
	.byte	16
	.byte	39
	.byte	69
	.byte	69
	.byte	69
	.byte	57
	.byte	60
	.byte	74
	.byte	73
	.byte	73
	.byte	48
	.byte	1
	.byte	113
	.byte	9
	.byte	5
	.byte	3
	.byte	54
	.byte	73
	.byte	73
	.byte	73
	.byte	54
	.byte	6
	.byte	73
	.byte	73
	.byte	41
	.byte	30
	.byte	0
	.byte	54
	.byte	54
	.byte	0
	.byte	0
	.byte	0
	.byte	86
	.byte	54
	.byte	0
	.byte	0
	.byte	0
	.byte	8
	.byte	20
	.byte	34
	.byte	65
	.byte	20
	.byte	20
	.byte	20
	.byte	20
	.byte	20
	.byte	65
	.byte	34
	.byte	20
	.byte	8
	.byte	0
	.byte	2
	.byte	1
	.byte	81
	.byte	9
	.byte	6
	.byte	50
	.byte	73
	.byte	121
	.byte	65
	.byte	62
	.byte	126
	.byte	17
	.byte	17
	.byte	17
	.byte	126
	.byte	127
	.byte	73
	.byte	73
	.byte	73
	.byte	54
	.byte	62
	.byte	65
	.byte	65
	.byte	65
	.byte	34
	.byte	127
	.byte	65
	.byte	65
	.byte	34
	.byte	28
	.byte	127
	.byte	73
	.byte	73
	.byte	73
	.byte	65
	.byte	127
	.byte	9
	.byte	9
	.byte	1
	.byte	1
	.byte	62
	.byte	65
	.byte	65
	.byte	81
	.byte	50
	.byte	127
	.byte	8
	.byte	8
	.byte	8
	.byte	127
	.byte	0
	.byte	65
	.byte	127
	.byte	65
	.byte	0
	.byte	32
	.byte	64
	.byte	65
	.byte	63
	.byte	1
	.byte	127
	.byte	8
	.byte	20
	.byte	34
	.byte	65
	.byte	127
	.byte	64
	.byte	64
	.byte	64
	.byte	64
	.byte	127
	.byte	2
	.byte	4
	.byte	2
	.byte	127
	.byte	127
	.byte	4
	.byte	8
	.byte	16
	.byte	127
	.byte	62
	.byte	65
	.byte	65
	.byte	65
	.byte	62
	.byte	127
	.byte	9
	.byte	9
	.byte	9
	.byte	6
	.byte	62
	.byte	65
	.byte	81
	.byte	33
	.byte	94
	.byte	127
	.byte	9
	.byte	25
	.byte	41
	.byte	70
	.byte	70
	.byte	73
	.byte	73
	.byte	73
	.byte	49
	.byte	1
	.byte	1
	.byte	127
	.byte	1
	.byte	1
	.byte	63
	.byte	64
	.byte	64
	.byte	64
	.byte	63
	.byte	31
	.byte	32
	.byte	64
	.byte	32
	.byte	31
	.byte	127
	.byte	32
	.byte	24
	.byte	32
	.byte	127
	.byte	99
	.byte	20
	.byte	8
	.byte	20
	.byte	99
	.byte	3
	.byte	4
	.byte	120
	.byte	4
	.byte	3
	.byte	97
	.byte	81
	.byte	73
	.byte	69
	.byte	67
	.byte	0
	.byte	0
	.byte	127
	.byte	65
	.byte	65
	.byte	2
	.byte	4
	.byte	8
	.byte	16
	.byte	32
	.byte	65
	.byte	65
	.byte	127
	.byte	0
	.byte	0
	.byte	4
	.byte	2
	.byte	1
	.byte	2
	.byte	4
	.byte	64
	.byte	64
	.byte	64
	.byte	64
	.byte	64
	.byte	0
	.byte	1
	.byte	2
	.byte	4
	.byte	0
	.byte	32
	.byte	84
	.byte	84
	.byte	84
	.byte	120
	.byte	127
	.byte	72
	.byte	68
	.byte	68
	.byte	56
	.byte	56
	.byte	68
	.byte	68
	.byte	68
	.byte	32
	.byte	56
	.byte	68
	.byte	68
	.byte	72
	.byte	127
	.byte	56
	.byte	84
	.byte	84
	.byte	84
	.byte	24
	.byte	8
	.byte	126
	.byte	9
	.byte	1
	.byte	2
	.byte	8
	.byte	20
	.byte	84
	.byte	84
	.byte	60
	.byte	127
	.byte	8
	.byte	4
	.byte	4
	.byte	120
	.byte	0
	.byte	68
	.byte	125
	.byte	64
	.byte	0
	.byte	32
	.byte	64
	.byte	68
	.byte	61
	.byte	0
	.byte	0
	.byte	127
	.byte	16
	.byte	40
	.byte	68
	.byte	0
	.byte	65
	.byte	127
	.byte	64
	.byte	0
	.byte	124
	.byte	4
	.byte	24
	.byte	4
	.byte	120
	.byte	124
	.byte	8
	.byte	4
	.byte	4
	.byte	120
	.byte	56
	.byte	68
	.byte	68
	.byte	68
	.byte	56
	.byte	124
	.byte	20
	.byte	20
	.byte	20
	.byte	8
	.byte	8
	.byte	20
	.byte	20
	.byte	24
	.byte	124
	.byte	124
	.byte	8
	.byte	4
	.byte	4
	.byte	8
	.byte	72
	.byte	84
	.byte	84
	.byte	84
	.byte	32
	.byte	4
	.byte	63
	.byte	68
	.byte	64
	.byte	32
	.byte	60
	.byte	64
	.byte	64
	.byte	32
	.byte	124
	.byte	28
	.byte	32
	.byte	64
	.byte	32
	.byte	28
	.byte	60
	.byte	64
	.byte	48
	.byte	64
	.byte	60
	.byte	68
	.byte	40
	.byte	16
	.byte	40
	.byte	68
	.byte	12
	.byte	80
	.byte	80
	.byte	80
	.byte	60
	.byte	68
	.byte	100
	.byte	84
	.byte	76
	.byte	68
	.byte	0
	.byte	8
	.byte	54
	.byte	65
	.byte	0
	.byte	0
	.byte	0
	.byte	127
	.byte	0
	.byte	0
	.byte	0
	.byte	65
	.byte	54
	.byte	8
	.byte	0
	.byte	8
	.byte	8
	.byte	42
	.byte	28
	.byte	8
	.byte	8
	.byte	28
	.byte	42
	.byte	8
	.byte	8
	.global	lastpressed
	.section	.bss.lastpressed,"aw",%nobits
	.align	2
	.type	lastpressed, %object
	.size	lastpressed, 4
lastpressed:
	.space	4
	.global	zoomlevel
	.section	.data.zoomlevel,"aw",%progbits
	.align	2
	.type	zoomlevel, %object
	.size	zoomlevel, 4
zoomlevel:
	.word	60
	.global	speed
	.section	.bss.speed,"aw",%nobits
	.align	2
	.type	speed, %object
	.size	speed, 4
speed:
	.space	4
	.global	lastscore
	.section	.bss.lastscore,"aw",%nobits
	.align	2
	.type	lastscore, %object
	.size	lastscore, 4
lastscore:
	.space	4
	.global	quit
	.section	.bss.quit,"aw",%nobits
	.align	2
	.type	quit, %object
	.size	quit, 4
quit:
	.space	4
	.global	a
	.section	.bss.a,"aw",%nobits
	.align	2
	.type	a, %object
	.size	a, 100
a:
	.space	100
	.global	empty_array
	.section	.bss.empty_array,"aw",%nobits
	.align	2
	.type	empty_array, %object
	.size	empty_array, 2
empty_array:
	.space	2
	.global	it
	.section	.bss.it,"aw",%nobits
	.align	2
	.type	it, %object
	.size	it, 4
it:
	.space	4
	.global	matrix
	.section	.data.matrix,"aw",%progbits
	.align	2
	.type	matrix, %object
	.size	matrix, 144
matrix:
	.word	65297
	.word	16711697
	.word	-16777199
	.word	286331153
	.space	8
	.space	120
	.global	color
	.section	.bss.color,"aw",%nobits
	.align	2
	.type	color, %object
	.size	color, 4
color:
	.space	4
	.global	WS2812_InitStructure
	.section	.bss.WS2812_InitStructure,"aw",%nobits
	.align	2
	.type	WS2812_InitStructure, %object
	.size	WS2812_InitStructure, 8
WS2812_InitStructure:
	.space	8
	.global	password_buffer
	.section	.bss.password_buffer,"aw",%nobits
	.align	2
	.type	password_buffer, %object
	.size	password_buffer, 9
password_buffer:
	.space	9
	.global	password
	.section	.data.password,"aw",%progbits
	.align	2
	.type	password, %object
	.size	password, 9
password:
	.byte	1
	.byte	65
	.space	7
	.global	backup
	.section	.bss.backup,"aw",%nobits
	.align	2
	.type	backup, %object
	.size	backup, 30000
backup:
	.space	30000
	.global	request_backup_command
	.section	.data.request_backup_command,"aw",%progbits
	.align	2
	.type	request_backup_command, %object
	.size	request_backup_command, 17
request_backup_command:
	.byte	3
	.byte	-94
	.byte	11
	.byte	0
	.byte	0
	.byte	0
	.byte	19
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	19
	.byte	0
	.global	prgm_header
	.section	.data.prgm_header,"aw",%progbits
	.align	2
	.type	prgm_header, %object
	.size	prgm_header, 11
prgm_header:
	.byte	-24
	.byte	1
	.byte	5
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.global	key
	.section	.bss.key,"aw",%nobits
	.align	3
	.type	key, %object
	.size	key, 8
key:
	.space	8
	.global	dada
	.section	.bss.dada,"aw",%nobits
	.align	2
	.type	dada, %object
	.size	dada, 10
dada:
	.space	10
	.global	calibrate
	.section	.bss.calibrate,"aw",%nobits
	.align	2
	.type	calibrate, %object
	.size	calibrate, 4
calibrate:
	.space	4
	.global	framebuffer_active
	.section	.bss.framebuffer_active,"aw",%nobits
	.align	2
	.type	framebuffer_active, %object
	.size	framebuffer_active, 768
framebuffer_active:
	.space	768
	.global	framebuffer
	.section	.bss.framebuffer,"aw",%nobits
	.align	2
	.type	framebuffer, %object
	.size	framebuffer, 768
framebuffer:
	.space	768
	.global	gamecounter
	.section	.bss.gamecounter,"aw",%nobits
	.align	1
	.type	gamecounter, %object
	.size	gamecounter, 2
gamecounter:
	.space	2
	.global	pipebuffer
	.section	.bss.pipebuffer,"aw",%nobits
	.align	2
	.type	pipebuffer, %object
	.size	pipebuffer, 24
pipebuffer:
	.space	24
	.global	birdy
	.section	.bss.birdy,"aw",%nobits
	.align	2
	.type	birdy, %object
	.size	birdy, 4
birdy:
	.space	4
	.global	is_bird_dead
	.section	.bss.is_bird_dead,"aw",%nobits
	.align	2
	.type	is_bird_dead, %object
	.size	is_bird_dead, 4
is_bird_dead:
	.space	4
	.global	score
	.section	.data.score,"aw",%progbits
	.align	2
	.type	score, %object
	.size	score, 4
score:
	.word	1
	.global	playermodel
	.section	.bss.playermodel,"aw",%nobits
	.align	2
	.type	playermodel, %object
	.size	playermodel, 4
playermodel:
	.space	4
	.global	bird
	.section	.bss.bird,"aw",%nobits
	.align	2
	.type	bird, %object
	.size	bird, 34
bird:
	.space	34
	.global	bird_1
	.section	.data.bird_1,"aw",%progbits
	.align	2
	.type	bird_1, %object
	.size	bird_1, 34
bird_1:
	.short	224
	.short	272
	.short	268
	.short	778
	.short	1290
	.short	1169
	.short	2145
	.short	2049
	.short	2953
	.short	3157
	.short	2090
	.short	2090
	.short	1450
	.short	554
	.short	490
	.short	44
	.short	16
	.global	bird_2
	.section	.data.bird_2,"aw",%progbits
	.align	2
	.type	bird_2, %object
	.size	bird_2, 34
bird_2:
	.short	28
	.short	226
	.short	290
	.short	546
	.short	1062
	.short	1065
	.short	2065
	.short	2049
	.short	2953
	.short	3157
	.short	2090
	.short	2090
	.short	1450
	.short	554
	.short	490
	.short	44
	.short	16
	.global	bird_sprite_1
	.section	.data.bird_sprite_1,"aw",%progbits
	.align	2
	.type	bird_sprite_1, %object
	.size	bird_sprite_1, 34
bird_sprite_1:
	.short	224
	.short	272
	.short	268
	.short	778
	.short	1290
	.short	1169
	.short	2145
	.short	2049
	.short	2953
	.short	3157
	.short	2090
	.short	2090
	.short	1450
	.short	554
	.short	490
	.short	44
	.short	16
	.global	bird_sprite_2
	.section	.data.bird_sprite_2,"aw",%progbits
	.align	2
	.type	bird_sprite_2, %object
	.size	bird_sprite_2, 34
bird_sprite_2:
	.short	28
	.short	226
	.short	290
	.short	546
	.short	1062
	.short	1065
	.short	2065
	.short	2049
	.short	2953
	.short	3157
	.short	2090
	.short	2090
	.short	1450
	.short	554
	.short	490
	.short	44
	.short	16
	.global	mu_sprite_1
	.section	.data.mu_sprite_1,"aw",%progbits
	.align	2
	.type	mu_sprite_1, %object
	.size	mu_sprite_1, 34
mu_sprite_1:
	.short	0
	.short	0
	.short	0
	.short	8191
	.short	8191
	.short	48
	.short	48
	.short	120
	.short	1016
	.short	8128
	.short	7680
	.space	12
	.global	mu_sprite_2
	.section	.data.mu_sprite_2,"aw",%progbits
	.align	2
	.type	mu_sprite_2, %object
	.size	mu_sprite_2, 34
mu_sprite_2:
	.short	3
	.short	7
	.short	990
	.short	8188
	.short	7792
	.short	48
	.short	48
	.short	120
	.short	1016
	.short	8128
	.short	7680
	.space	12
	.global	key_sequence
	.section	.data.key_sequence,"aw",%progbits
	.align	2
	.type	key_sequence, %object
	.size	key_sequence, 4000
key_sequence:
	.short	16384
	.short	2304
	.short	18176
	.short	-26112
	.short	-21504
	.short	-23040
	.short	1280
	.short	-24832
	.short	-28416
	.short	-24832
	.short	-28416
	.short	-25600
	.short	-25344
	.short	-27648
	.short	-28416
	.short	-26880
	.short	-28416
	.short	-25600
	.short	-25344
	.short	-26112
	.short	-28672
	.short	-26880
	.short	-28416
	.short	-25600
	.short	-25344
	.short	-28160
	.short	-28928
	.short	-26880
	.short	-28416
	.short	-25600
	.short	-25344
	.short	-28160
	.short	-28928
	.short	-26880
	.short	-28416
	.short	-25600
	.short	-25344
	.short	-28160
	.short	-28928
	.short	-26880
	.short	-28416
	.short	-25344
	.short	-25856
	.short	-29184
	.short	-28416
	.short	-25600
	.short	-25856
	.short	-27904
	.short	-24832
	.short	-25600
	.short	-28672
	.short	-28672
	.short	-27136
	.short	-26880
	.short	-28416
	.short	-24832
	.short	-25856
	.short	-25600
	.short	-26880
	.short	-29184
	.short	-27648
	.short	-24832
	.short	-24832
	.short	-29184
	.short	-29184
	.short	-29184
	.short	-29184
	.short	-29184
	.short	-29184
	.short	-29184
	.short	-29184
	.short	-29184
	.short	-29184
	.short	-29184
	.short	-29184
	.short	-29184
	.short	-29184
	.short	-29184
	.short	-29184
	.short	-29184
	.short	-29184
	.short	-29184
	.short	-29184
	.short	-29184
	.short	-29184
	.short	-29184
	.short	-29184
	.short	-29184
	.short	-29184
	.short	-29184
	.short	-29184
	.short	-29184
	.short	-29184
	.short	-29184
	.short	-29184
	.short	-28928
	.short	-29184
	.short	-25088
	.short	-25088
	.short	-25600
	.short	-26880
	.short	-29184
	.short	-25088
	.short	-24832
	.short	-24832
	.short	-25600
	.short	-25344
	.short	-28160
	.short	-28928
	.short	-26880
	.short	-28416
	.short	-25600
	.short	-25344
	.short	-28160
	.short	-28928
	.short	-26880
	.short	-28416
	.short	-29184
	.short	-25344
	.short	-25600
	.short	-28672
	.short	-27904
	.short	-27136
	.short	-26880
	.short	-28416
	.short	-25600
	.short	-26880
	.short	-28672
	.short	-25088
	.short	-29184
	.short	-25600
	.short	-28416
	.short	-25088
	.short	-27136
	.short	-29184
	.short	-25344
	.short	-28416
	.short	-28928
	.short	-29184
	.short	-28928
	.short	-25088
	.short	-28672
	.short	-29184
	.short	-28416
	.short	-25088
	.short	-24832
	.short	-25344
	.short	-25344
	.short	-28416
	.short	-29184
	.short	-29184
	.short	-28416
	.short	-25088
	.short	-24832
	.short	-25600
	.short	-25344
	.short	-28416
	.short	-29184
	.short	-29184
	.short	-29184
	.short	-25088
	.short	-28928
	.short	-29184
	.short	-25088
	.short	-25344
	.short	-27904
	.short	-26880
	.short	-25088
	.short	-28416
	.short	-25088
	.short	-28416
	.short	-29184
	.short	-27648
	.short	-28160
	.short	-29184
	.short	-28928
	.short	-27648
	.short	-29184
	.short	-29184
	.short	-25344
	.short	-25856
	.short	-29184
	.short	-29184
	.short	-26112
	.short	-27904
	.short	-28928
	.short	-27392
	.short	-28928
	.short	-27392
	.short	-27904
	.short	-27392
	.short	-29184
	.short	-29184
	.short	-25344
	.short	-25856
	.short	-29184
	.short	-29184
	.short	-26112
	.short	-27904
	.short	-25856
	.short	-28672
	.short	-28928
	.short	-27392
	.short	-28928
	.short	-27392
	.short	-27904
	.short	-27392
	.short	-25344
	.short	-25856
	.short	-29184
	.short	-29184
	.short	-26112
	.short	-27904
	.short	-28928
	.short	-24832
	.short	-28928
	.short	-24832
	.short	-25856
	.short	-28672
	.short	-27904
	.short	-27392
	.short	-25344
	.short	-25856
	.short	-29184
	.short	-29184
	.short	-26112
	.short	-27904
	.short	-25856
	.short	-28672
	.short	-25344
	.short	-28416
	.short	-28928
	.short	-28928
	.short	-28928
	.short	-29184
	.short	-25088
	.short	-28928
	.short	-28928
	.short	-25600
	.short	-27392
	.short	-25856
	.short	-24832
	.short	-25088
	.short	-28672
	.short	-25600
	.short	-25600
	.short	-28672
	.short	-27648
	.short	-25856
	.short	-26880
	.short	-28416
	.short	-25600
	.short	-26880
	.short	-25600
	.short	-25344
	.short	-27648
	.short	-25344
	.short	-29184
	.short	-28672
	.short	-28160
	.short	-27392
	.short	-28416
	.short	-25088
	.short	-24832
	.short	-25088
	.short	-25344
	.short	-28416
	.short	-29184
	.short	-29184
	.short	-27392
	.short	-27136
	.short	-24832
	.short	-27648
	.short	-24832
	.short	-25600
	.short	-25344
	.short	-28416
	.short	-29184
	.short	-29184
	.short	-25600
	.short	-25856
	.short	-28672
	.short	-27136
	.short	-25600
	.short	-25856
	.short	-28672
	.short	-27136
	.short	-27392
	.short	-27136
	.short	-24832
	.short	-27648
	.short	-24832
	.short	-25600
	.short	-25344
	.short	-28416
	.short	-29184
	.short	-29184
	.short	-25600
	.short	-25856
	.short	-28672
	.short	-27136
	.short	-25600
	.short	-25856
	.short	-28672
	.short	-27136
	.short	-27392
	.short	-27136
	.short	-24832
	.short	-27648
	.short	-24832
	.short	-25600
	.short	-25344
	.short	-28416
	.short	-29184
	.short	-29184
	.short	-29184
	.short	-29184
	.short	-29184
	.short	-29184
	.short	-28416
	.short	-25088
	.short	-24832
	.short	-25600
	.short	-25344
	.short	-28416
	.short	-29184
	.short	-29184
	.short	-25600
	.short	-26880
	.short	1280
	.short	-11520
	.short	1280
	.short	-29184
	.short	-29184
	.short	-29184
	.short	-29184
	.short	1280
	.short	-11520
	.short	16384
	.short	2304
	.space	3320
	.global	activevertice
	.section	.bss.activevertice,"aw",%nobits
	.align	2
	.type	activevertice, %object
	.size	activevertice, 16
activevertice:
	.space	16
	.global	vertice1
	.section	.data.vertice1,"aw",%progbits
	.align	2
	.type	vertice1, %object
	.size	vertice1, 16
vertice1:
	.word	1112014848
	.word	-1035468800
	.word	1112014848
	.space	4
	.global	vertice2
	.section	.data.vertice2,"aw",%progbits
	.align	2
	.type	vertice2, %object
	.size	vertice2, 16
vertice2:
	.word	-1035468800
	.word	-1035468800
	.word	1112014848
	.space	4
	.global	vertice3
	.section	.data.vertice3,"aw",%progbits
	.align	2
	.type	vertice3, %object
	.size	vertice3, 16
vertice3:
	.word	1112014848
	.word	-1035468800
	.word	-1035468800
	.space	4
	.global	vertice4
	.section	.data.vertice4,"aw",%progbits
	.align	2
	.type	vertice4, %object
	.size	vertice4, 16
vertice4:
	.word	-1035468800
	.word	-1035468800
	.word	-1035468800
	.space	4
	.global	vertice5
	.section	.data.vertice5,"aw",%progbits
	.align	2
	.type	vertice5, %object
	.size	vertice5, 16
vertice5:
	.word	0
	.word	1120403456
	.word	0
	.space	4
	.global	vertice6
	.section	.data.vertice6,"aw",%progbits
	.align	2
	.type	vertice6, %object
	.size	vertice6, 16
vertice6:
	.word	1112014848
	.word	-1035468800
	.word	1112014848
	.space	4
	.global	vertice7
	.section	.data.vertice7,"aw",%progbits
	.align	2
	.type	vertice7, %object
	.size	vertice7, 16
vertice7:
	.word	-1035468800
	.word	-1035468800
	.word	1112014848
	.space	4
	.global	vertice8
	.section	.data.vertice8,"aw",%progbits
	.align	2
	.type	vertice8, %object
	.size	vertice8, 16
vertice8:
	.word	1112014848
	.word	-1035468800
	.word	-1035468800
	.space	4
	.global	LINK_InitStructure
	.section	.bss.LINK_InitStructure,"aw",%nobits
	.align	2
	.type	LINK_InitStructure, %object
	.size	LINK_InitStructure, 8
LINK_InitStructure:
	.space	8
	.section	.text.WS2812_init,"ax",%progbits
	.align	2
	.global	WS2812_init
	.thumb
	.thumb_func
	.type	WS2812_init, %function
WS2812_init:
.LFB112:
	.file 1 "/Users/Sean/Documents/CrossWorks Projects/Calchack_F4/main.c"
	.loc 1 319 0
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI0:
	add	r7, sp, #0
.LCFI1:
	.loc 1 320 0
	movs	r0, #4
	movs	r1, #1
	bl	RCC_AHB1PeriphClockCmd
	.loc 1 322 0
	ldr	r3, .L2
	movs	r2, #1
	str	r2, [r3]
	.loc 1 323 0
	ldr	r3, .L2
	movs	r2, #1
	strb	r2, [r3, #4]
	.loc 1 324 0
	ldr	r3, .L2
	movs	r2, #0
	strb	r2, [r3, #6]
	.loc 1 325 0
	ldr	r3, .L2
	movs	r2, #0
	strb	r2, [r3, #5]
	.loc 1 326 0
	ldr	r3, .L2
	movs	r2, #0
	strb	r2, [r3, #7]
	.loc 1 327 0
	ldr	r0, .L2+4
	ldr	r1, .L2
	bl	GPIO_Init
	.loc 1 328 0
	pop	{r7, pc}
.L3:
	.align	2
.L2:
	.word	WS2812_InitStructure
	.word	1073874944
.LFE112:
	.size	WS2812_init, .-WS2812_init
	.section	.text.WS2812_update,"ax",%progbits
	.align	2
	.global	WS2812_update
	.thumb
	.thumb_func
	.type	WS2812_update, %function
WS2812_update:
.LFB113:
	.loc 1 331 0
	@ args = 0, pretend = 0, frame = 32
	@ frame_needed = 1, uses_anonymous_args = 0
	@ link register save eliminated.
	push	{r7}
.LCFI2:
	sub	sp, sp, #36
.LCFI3:
	add	r7, sp, #0
.LCFI4:
.LBB2:
	.loc 1 332 0
	movs	r3, #0
	str	r3, [r7, #28]
	b	.L5
.L20:
.LBB3:
	.loc 1 334 0
	movs	r3, #0
	str	r3, [r7, #24]
	b	.L6
.L19:
	.loc 1 336 0
	ldr	r1, .L23
	ldr	r2, [r7, #28]
	mov	r3, r2
	lsls	r3, r3, #1
	add	r3, r3, r2
	lsls	r3, r3, #1
	ldr	r2, [r7, #24]
	add	r3, r3, r2
	ldr	r2, [r1, r3, lsl #2]
	ldr	r3, .L23+4
	str	r2, [r3]
.LBB4:
	.loc 1 337 0
	movs	r3, #0
	str	r3, [r7, #20]
	b	.L7
.L18:
	.loc 1 339 0
	ldr	r3, .L23+4
	ldr	r3, [r3]
	lsls	r2, r3, #1
	ldr	r3, .L23+4
	str	r2, [r3]
	.loc 1 340 0
	ldr	r3, .L23+4
	ldr	r3, [r3]
	and	r3, r3, #8388608
	cmp	r3, #0
	beq	.L8
	.loc 1 342 0
	ldr	r3, .L23+8
	movs	r2, #1
	strh	r2, [r3, #24]	@ movhi
.LBB5:
	movs	r3, #0
	str	r3, [r7, #16]
	b	.L9
.L10:
	.loc 1 342 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #16]
	adds	r3, r3, #1
	str	r3, [r7, #16]
.L9:
	.loc 1 342 0 discriminator 1
	ldr	r3, [r7, #16]
	cmp	r3, #11
	ble	.L10
.LBE5:
	.loc 1 342 0 discriminator 3
	ldr	r3, .L23+8
	movs	r2, #1
	strh	r2, [r3, #26]	@ movhi
.LBB6:
	movs	r3, #0
	str	r3, [r7, #12]
	b	.L11
.L12:
	.loc 1 342 0 discriminator 2
	ldr	r3, [r7, #12]
	adds	r3, r3, #1
	str	r3, [r7, #12]
.L11:
	.loc 1 342 0 discriminator 1
	ldr	r3, [r7, #12]
	cmp	r3, #5
	ble	.L12
.LBE6:
	b	.L13
.L8:
	.loc 1 346 0 is_stmt 1
	ldr	r3, .L23+8
	movs	r2, #1
	strh	r2, [r3, #24]	@ movhi
.LBB7:
	movs	r3, #0
	str	r3, [r7, #8]
	b	.L14
.L15:
	.loc 1 346 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #8]
	adds	r3, r3, #1
	str	r3, [r7, #8]
.L14:
	.loc 1 346 0 discriminator 1
	ldr	r3, [r7, #8]
	cmp	r3, #5
	ble	.L15
.LBE7:
	.loc 1 346 0 discriminator 3
	ldr	r3, .L23+8
	movs	r2, #1
	strh	r2, [r3, #26]	@ movhi
.LBB8:
	movs	r3, #0
	str	r3, [r7, #4]
	b	.L16
.L17:
	.loc 1 346 0 discriminator 2
	ldr	r3, [r7, #4]
	adds	r3, r3, #1
	str	r3, [r7, #4]
.L16:
	.loc 1 346 0 discriminator 1
	ldr	r3, [r7, #4]
	cmp	r3, #11
	ble	.L17
.L13:
.LBE8:
	.loc 1 337 0 is_stmt 1
	ldr	r3, [r7, #20]
	adds	r3, r3, #1
	str	r3, [r7, #20]
.L7:
	.loc 1 337 0 is_stmt 0 discriminator 1
	ldr	r3, [r7, #20]
	cmp	r3, #23
	ble	.L18
.LBE4:
	.loc 1 334 0 is_stmt 1
	ldr	r3, [r7, #24]
	adds	r3, r3, #1
	str	r3, [r7, #24]
.L6:
	.loc 1 334 0 is_stmt 0 discriminator 1
	ldr	r3, [r7, #24]
	cmp	r3, #5
	ble	.L19
.LBE3:
	.loc 1 332 0 is_stmt 1
	ldr	r3, [r7, #28]
	adds	r3, r3, #1
	str	r3, [r7, #28]
.L5:
	.loc 1 332 0 is_stmt 0 discriminator 1
	ldr	r3, [r7, #28]
	cmp	r3, #5
	ble	.L20
.LBE2:
	.loc 1 351 0 is_stmt 1
	ldr	r3, .L23+8
	movs	r2, #1
	strh	r2, [r3, #26]	@ movhi
.LBB9:
	movs	r3, #0
	str	r3, [r7]
	b	.L21
.L22:
	.loc 1 351 0 is_stmt 0 discriminator 2
	ldr	r3, [r7]
	adds	r3, r3, #1
	str	r3, [r7]
.L21:
	.loc 1 351 0 discriminator 1
	ldr	r2, [r7]
	movw	r3, #11999
	cmp	r2, r3
	ble	.L22
.LBE9:
	.loc 1 352 0 is_stmt 1
	adds	r7, r7, #36
	mov	sp, r7
	@ sp needed
	ldr	r7, [sp], #4
	bx	lr
.L24:
	.align	2
.L23:
	.word	matrix
	.word	color
	.word	1073874944
.LFE113:
	.size	WS2812_update, .-WS2812_update
	.section	.text.delay_us,"ax",%progbits
	.align	2
	.global	delay_us
	.thumb
	.thumb_func
	.type	delay_us, %function
delay_us:
.LFB114:
	.loc 1 356 0
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	@ link register save eliminated.
	push	{r7}
.LCFI5:
	sub	sp, sp, #20
.LCFI6:
	add	r7, sp, #0
.LCFI7:
	str	r0, [r7, #4]
	.loc 1 357 0
	b	.L26
.L29:
.LBB10:
	.loc 1 359 0
	movs	r3, #100
	str	r3, [r7, #12]
	b	.L27
.L28:
	.loc 1 359 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #12]
	subs	r3, r3, #1
	str	r3, [r7, #12]
.L27:
	.loc 1 359 0 discriminator 1
	ldr	r3, [r7, #12]
	cmp	r3, #0
	bne	.L28
.LBE10:
	.loc 1 360 0 is_stmt 1
	ldr	r3, [r7, #4]
	subs	r3, r3, #1
	str	r3, [r7, #4]
.L26:
	.loc 1 357 0 discriminator 1
	ldr	r3, [r7, #4]
	cmp	r3, #0
	bne	.L29
	.loc 1 362 0
	adds	r7, r7, #20
	mov	sp, r7
	@ sp needed
	ldr	r7, [sp], #4
	bx	lr
.LFE114:
	.size	delay_us, .-delay_us
	.section	.text.LINK_init,"ax",%progbits
	.align	2
	.global	LINK_init
	.thumb
	.thumb_func
	.type	LINK_init, %function
LINK_init:
.LFB115:
	.loc 1 366 0
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI8:
	add	r7, sp, #0
.LCFI9:
	.loc 1 367 0
	movs	r0, #16
	movs	r1, #1
	bl	RCC_AHB1PeriphClockCmd
	.loc 1 369 0
	ldr	r3, .L31
	movs	r2, #2
	str	r2, [r3]
	.loc 1 370 0
	ldr	r3, .L31
	movs	r2, #1
	strb	r2, [r3, #4]
	.loc 1 371 0
	ldr	r3, .L31
	movs	r2, #1
	strb	r2, [r3, #6]
	.loc 1 372 0
	ldr	r3, .L31
	movs	r2, #2
	strb	r2, [r3, #5]
	.loc 1 373 0
	ldr	r3, .L31
	movs	r2, #0
	strb	r2, [r3, #7]
	.loc 1 374 0
	ldr	r0, .L31+4
	ldr	r1, .L31
	bl	GPIO_Init
	.loc 1 376 0
	ldr	r3, .L31
	movs	r2, #1
	str	r2, [r3]
	.loc 1 377 0
	ldr	r3, .L31
	movs	r2, #1
	strb	r2, [r3, #4]
	.loc 1 378 0
	ldr	r3, .L31
	movs	r2, #1
	strb	r2, [r3, #6]
	.loc 1 379 0
	ldr	r3, .L31
	movs	r2, #2
	strb	r2, [r3, #5]
	.loc 1 380 0
	ldr	r3, .L31
	movs	r2, #0
	strb	r2, [r3, #7]
	.loc 1 381 0
	ldr	r0, .L31+4
	ldr	r1, .L31
	bl	GPIO_Init
	.loc 1 383 0
	movs	r0, #8
	movs	r1, #1
	bl	RCC_AHB1PeriphClockCmd
	.loc 1 385 0
	ldr	r3, .L31
	mov	r2, #32768
	str	r2, [r3]
	.loc 1 386 0
	ldr	r3, .L31
	movs	r2, #1
	strb	r2, [r3, #4]
	.loc 1 387 0
	ldr	r3, .L31
	movs	r2, #0
	strb	r2, [r3, #6]
	.loc 1 388 0
	ldr	r3, .L31
	movs	r2, #0
	strb	r2, [r3, #5]
	.loc 1 389 0
	ldr	r3, .L31
	movs	r2, #0
	strb	r2, [r3, #7]
	.loc 1 390 0
	ldr	r0, .L31+8
	ldr	r1, .L31
	bl	GPIO_Init
	.loc 1 392 0
	ldr	r3, .L31+4
	movs	r2, #1
	strh	r2, [r3, #24]	@ movhi
	.loc 1 393 0
	ldr	r3, .L31+4
	movs	r2, #2
	strh	r2, [r3, #24]	@ movhi
	.loc 1 395 0
	pop	{r7, pc}
.L32:
	.align	2
.L31:
	.word	LINK_InitStructure
	.word	1073876992
	.word	1073875968
.LFE115:
	.size	LINK_init, .-LINK_init
	.section	.text.LINK_get_bit,"ax",%progbits
	.align	2
	.global	LINK_get_bit
	.thumb
	.thumb_func
	.type	LINK_get_bit, %function
LINK_get_bit:
.LFB116:
	.loc 1 398 0
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI10:
	add	r7, sp, #0
.LCFI11:
	.loc 1 399 0
	nop
.L35:
	.loc 1 399 0 is_stmt 0 discriminator 1
	ldr	r0, .L40
	movs	r1, #1
	bl	GPIO_ReadInputDataBit
	mov	r3, r0
	cmp	r3, #0
	beq	.L34
	.loc 1 399 0 discriminator 2
	ldr	r0, .L40
	movs	r1, #2
	bl	GPIO_ReadInputDataBit
	mov	r3, r0
	cmp	r3, #0
	bne	.L35
.L34:
	.loc 1 401 0 is_stmt 1
	ldr	r0, .L40
	movs	r1, #1
	bl	GPIO_ReadInputDataBit
	mov	r3, r0
	cmp	r3, #0
	bne	.L36
	.loc 1 403 0
	ldr	r3, .L40
	movs	r2, #2
	strh	r2, [r3, #26]	@ movhi
	.loc 1 404 0
	nop
.L37:
	.loc 1 404 0 is_stmt 0 discriminator 1
	ldr	r0, .L40
	movs	r1, #1
	bl	GPIO_ReadInputDataBit
	mov	r3, r0
	cmp	r3, #0
	beq	.L37
	.loc 1 405 0 is_stmt 1
	ldr	r3, .L40
	movs	r2, #2
	strh	r2, [r3, #24]	@ movhi
	.loc 1 406 0
	movs	r0, #50
	bl	delay_us
	.loc 1 407 0
	movs	r3, #0
	b	.L38
.L36:
	.loc 1 411 0
	ldr	r3, .L40
	movs	r2, #1
	strh	r2, [r3, #26]	@ movhi
	.loc 1 412 0
	nop
.L39:
	.loc 1 412 0 is_stmt 0 discriminator 1
	ldr	r0, .L40
	movs	r1, #2
	bl	GPIO_ReadInputDataBit
	mov	r3, r0
	cmp	r3, #0
	beq	.L39
	.loc 1 413 0 is_stmt 1
	ldr	r3, .L40
	movs	r2, #1
	strh	r2, [r3, #24]	@ movhi
	.loc 1 414 0
	movs	r0, #50
	bl	delay_us
	.loc 1 415 0
	movs	r3, #1
.L38:
	.loc 1 417 0
	mov	r0, r3
	pop	{r7, pc}
.L41:
	.align	2
.L40:
	.word	1073876992
.LFE116:
	.size	LINK_get_bit, .-LINK_get_bit
	.section	.text.LINK_get_byte,"ax",%progbits
	.align	2
	.global	LINK_get_byte
	.thumb
	.thumb_func
	.type	LINK_get_byte, %function
LINK_get_byte:
.LFB117:
	.loc 1 420 0
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI12:
	sub	sp, sp, #8
.LCFI13:
	add	r7, sp, #0
.LCFI14:
	.loc 1 421 0
	movs	r3, #0
	strb	r3, [r7, #7]
	.loc 1 422 0
	movs	r3, #0
	strb	r3, [r7, #6]
	.loc 1 423 0
	movs	r3, #0
	str	r3, [r7]
	.loc 1 427 0
	b	.L43
.L49:
	.loc 1 430 0
	ldr	r0, .L50
	movs	r1, #2
	bl	GPIO_ReadInputDataBit
	mov	r3, r0
	cmp	r3, #0
	bne	.L44
	.loc 1 432 0
	movs	r3, #0
	str	r3, [r7]
	.loc 1 433 0
	ldrb	r3, [r7, #7]	@ zero_extendqisi2
	adds	r3, r3, #1
	strb	r3, [r7, #7]
	.loc 1 434 0
	ldrb	r3, [r7, #6]	@ zero_extendqisi2
	lsrs	r3, r3, #1
	uxtb	r3, r3
	orn	r3, r3, #127
	strb	r3, [r7, #6]
	.loc 1 435 0
	ldr	r3, .L50
	movs	r2, #1
	strh	r2, [r3, #26]	@ movhi
	.loc 1 436 0
	nop
.L45:
	.loc 1 436 0 is_stmt 0 discriminator 1
	ldr	r0, .L50
	movs	r1, #2
	bl	GPIO_ReadInputDataBit
	mov	r3, r0
	cmp	r3, #0
	beq	.L45
	.loc 1 437 0 is_stmt 1
	ldr	r3, .L50
	movs	r2, #1
	strh	r2, [r3, #24]	@ movhi
	.loc 1 438 0
	movs	r0, #50
	bl	delay_us
	b	.L43
.L44:
	.loc 1 440 0
	ldr	r0, .L50
	movs	r1, #1
	bl	GPIO_ReadInputDataBit
	mov	r3, r0
	cmp	r3, #0
	bne	.L46
	.loc 1 442 0
	movs	r3, #0
	str	r3, [r7]
	.loc 1 443 0
	ldrb	r3, [r7, #7]	@ zero_extendqisi2
	adds	r3, r3, #1
	strb	r3, [r7, #7]
	.loc 1 444 0
	ldrb	r3, [r7, #6]	@ zero_extendqisi2
	lsrs	r3, r3, #1
	strb	r3, [r7, #6]
	.loc 1 445 0
	ldr	r3, .L50
	movs	r2, #2
	strh	r2, [r3, #26]	@ movhi
	.loc 1 446 0
	nop
.L47:
	.loc 1 446 0 is_stmt 0 discriminator 1
	ldr	r0, .L50
	movs	r1, #1
	bl	GPIO_ReadInputDataBit
	mov	r3, r0
	cmp	r3, #0
	beq	.L47
	.loc 1 447 0 is_stmt 1
	ldr	r3, .L50
	movs	r2, #2
	strh	r2, [r3, #24]	@ movhi
	.loc 1 448 0
	movs	r0, #50
	bl	delay_us
	b	.L43
.L46:
	.loc 1 452 0
	ldr	r3, [r7]
	adds	r3, r3, #1
	str	r3, [r7]
	.loc 1 453 0
	ldr	r3, [r7]
	cmp	r3, #1000
	ble	.L43
	.loc 1 455 0
	mov	r3, #400
	b	.L48
.L43:
	.loc 1 427 0 discriminator 1
	ldrb	r3, [r7, #7]	@ zero_extendqisi2
	cmp	r3, #7
	bls	.L49
	.loc 1 459 0
	mov	r0, #500
	bl	delay_us
	.loc 1 460 0
	ldrb	r3, [r7, #6]	@ zero_extendqisi2
	uxth	r3, r3
.L48:
	.loc 1 461 0
	mov	r0, r3
	adds	r7, r7, #8
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L51:
	.align	2
.L50:
	.word	1073876992
.LFE117:
	.size	LINK_get_byte, .-LINK_get_byte
	.section	.text.LINK_wait_for_byte,"ax",%progbits
	.align	2
	.global	LINK_wait_for_byte
	.thumb
	.thumb_func
	.type	LINK_wait_for_byte, %function
LINK_wait_for_byte:
.LFB118:
	.loc 1 464 0
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI15:
	sub	sp, sp, #8
.LCFI16:
	add	r7, sp, #0
.LCFI17:
	.loc 1 465 0
	mov	r3, #300
	strh	r3, [r7, #6]	@ movhi
	.loc 1 466 0
	b	.L53
.L54:
	.loc 1 468 0
	bl	LINK_get_byte
	mov	r3, r0
	strh	r3, [r7, #6]	@ movhi
.L53:
	.loc 1 466 0 discriminator 1
	ldrh	r3, [r7, #6]
	cmp	r3, #255
	bhi	.L54
	.loc 1 470 0
	ldrh	r3, [r7, #6]	@ movhi
	uxtb	r3, r3
	.loc 1 471 0
	mov	r0, r3
	adds	r7, r7, #8
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.LFE118:
	.size	LINK_wait_for_byte, .-LINK_wait_for_byte
	.section	.text.LINK_send_byte,"ax",%progbits
	.align	2
	.global	LINK_send_byte
	.thumb
	.thumb_func
	.type	LINK_send_byte, %function
LINK_send_byte:
.LFB119:
	.loc 1 474 0
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI18:
	sub	sp, sp, #16
.LCFI19:
	add	r7, sp, #0
.LCFI20:
	mov	r3, r0
	strb	r3, [r7, #7]
	.loc 1 478 0
	movs	r3, #0
	strb	r3, [r7, #15]
	b	.L57
.L64:
	.loc 1 480 0
	ldrb	r3, [r7, #7]	@ zero_extendqisi2
	and	r3, r3, #1
	cmp	r3, #0
	beq	.L58
	.loc 1 482 0
	ldr	r3, .L65
	movs	r2, #2
	strh	r2, [r3, #26]	@ movhi
	.loc 1 483 0
	nop
.L59:
	.loc 1 483 0 is_stmt 0 discriminator 1
	ldr	r0, .L65
	movs	r1, #1
	bl	GPIO_ReadInputDataBit
	mov	r3, r0
	cmp	r3, #0
	bne	.L59
	.loc 1 484 0 is_stmt 1
	ldr	r3, .L65
	movs	r2, #2
	strh	r2, [r3, #24]	@ movhi
	.loc 1 485 0
	nop
.L60:
	.loc 1 485 0 is_stmt 0 discriminator 1
	ldr	r0, .L65
	movs	r1, #1
	bl	GPIO_ReadInputDataBit
	mov	r3, r0
	cmp	r3, #0
	beq	.L60
	b	.L61
.L58:
	.loc 1 487 0 is_stmt 1
	ldr	r3, .L65
	movs	r2, #1
	strh	r2, [r3, #26]	@ movhi
	.loc 1 488 0
	nop
.L62:
	.loc 1 488 0 is_stmt 0 discriminator 1
	ldr	r0, .L65
	movs	r1, #2
	bl	GPIO_ReadInputDataBit
	mov	r3, r0
	cmp	r3, #0
	bne	.L62
	.loc 1 489 0 is_stmt 1
	ldr	r3, .L65
	movs	r2, #1
	strh	r2, [r3, #24]	@ movhi
	.loc 1 490 0
	nop
.L63:
	.loc 1 490 0 is_stmt 0 discriminator 1
	ldr	r0, .L65
	movs	r1, #2
	bl	GPIO_ReadInputDataBit
	mov	r3, r0
	cmp	r3, #0
	beq	.L63
.L61:
	.loc 1 492 0 is_stmt 1
	ldrb	r3, [r7, #7]	@ zero_extendqisi2
	lsrs	r3, r3, #1
	strb	r3, [r7, #7]
	.loc 1 478 0
	ldrb	r3, [r7, #15]	@ zero_extendqisi2
	adds	r3, r3, #1
	strb	r3, [r7, #15]
.L57:
	.loc 1 478 0 is_stmt 0 discriminator 1
	ldrb	r3, [r7, #15]	@ zero_extendqisi2
	cmp	r3, #7
	bls	.L64
	.loc 1 494 0 is_stmt 1
	mov	r0, #500
	bl	delay_us
	.loc 1 495 0
	adds	r7, r7, #16
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L66:
	.align	2
.L65:
	.word	1073876992
.LFE119:
	.size	LINK_send_byte, .-LINK_send_byte
	.section	.text.LINK_send_array,"ax",%progbits
	.align	2
	.global	LINK_send_array
	.thumb
	.thumb_func
	.type	LINK_send_array, %function
LINK_send_array:
.LFB120:
	.loc 1 497 0
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI21:
	sub	sp, sp, #16
.LCFI22:
	add	r7, sp, #0
.LCFI23:
	str	r0, [r7, #4]
	str	r1, [r7]
	.loc 1 498 0
	movs	r3, #0
	str	r3, [r7, #12]
	.loc 1 499 0
	b	.L68
.L69:
	.loc 1 501 0
	ldr	r3, [r7, #12]
	ldr	r2, [r7, #4]
	add	r3, r3, r2
	ldrb	r3, [r3]	@ zero_extendqisi2
	mov	r0, r3
	bl	LINK_send_byte
	.loc 1 502 0
	ldr	r3, [r7, #12]
	adds	r3, r3, #1
	str	r3, [r7, #12]
.L68:
	.loc 1 499 0 discriminator 1
	ldr	r2, [r7, #12]
	ldr	r3, [r7]
	cmp	r2, r3
	blt	.L69
	.loc 1 504 0
	adds	r7, r7, #16
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.LFE120:
	.size	LINK_send_array, .-LINK_send_array
	.section	.text.LINK_send_key,"ax",%progbits
	.align	2
	.global	LINK_send_key
	.thumb
	.thumb_func
	.type	LINK_send_key, %function
LINK_send_key:
.LFB121:
	.loc 1 507 0
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI24:
	sub	sp, sp, #16
.LCFI25:
	add	r7, sp, #0
.LCFI26:
	mov	r3, r0
	strh	r3, [r7, #6]	@ movhi
	.loc 1 508 0
	ldrh	r3, [r7, #6]	@ movhi
	strb	r3, [r7, #15]
	.loc 1 509 0
	ldrh	r3, [r7, #6]
	lsrs	r3, r3, #8
	uxth	r3, r3
	strb	r3, [r7, #14]
	.loc 1 511 0
	movs	r0, #2
	bl	LINK_send_byte
	.loc 1 512 0
	movs	r0, #135
	bl	LINK_send_byte
	.loc 1 513 0
	ldrb	r3, [r7, #15]	@ zero_extendqisi2
	mov	r0, r3
	bl	LINK_send_byte
	.loc 1 514 0
	ldrb	r3, [r7, #14]	@ zero_extendqisi2
	mov	r0, r3
	bl	LINK_send_byte
	.loc 1 515 0
	bl	LINK_wait_for_byte
	.loc 1 516 0
	bl	LINK_wait_for_byte
	.loc 1 517 0
	bl	LINK_wait_for_byte
	.loc 1 518 0
	bl	LINK_wait_for_byte
	.loc 1 519 0
	adds	r7, r7, #16
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.LFE121:
	.size	LINK_send_key, .-LINK_send_key
	.section	.text.LINK_send_key_sequence,"ax",%progbits
	.align	2
	.global	LINK_send_key_sequence
	.thumb
	.thumb_func
	.type	LINK_send_key_sequence, %function
LINK_send_key_sequence:
.LFB122:
	.loc 1 522 0
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI27:
	sub	sp, sp, #16
.LCFI28:
	add	r7, sp, #0
.LCFI29:
	str	r0, [r7, #4]
	mov	r3, r1
	strh	r3, [r7, #2]	@ movhi
.LBB11:
	.loc 1 523 0
	movs	r3, #0
	strh	r3, [r7, #14]	@ movhi
	b	.L72
.L73:
	.loc 1 525 0 discriminator 2
	ldrh	r3, [r7, #14]
	lsls	r3, r3, #1
	ldr	r2, [r7, #4]
	add	r3, r3, r2
	ldrh	r3, [r3]
	mov	r0, r3
	bl	LINK_send_key
	.loc 1 523 0 discriminator 2
	ldrh	r3, [r7, #14]
	adds	r3, r3, #1
	strh	r3, [r7, #14]	@ movhi
.L72:
	.loc 1 523 0 is_stmt 0 discriminator 1
	ldrh	r2, [r7, #14]
	ldrh	r3, [r7, #2]
	cmp	r2, r3
	bcc	.L73
.LBE11:
	.loc 1 527 0 is_stmt 1
	adds	r7, r7, #16
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.LFE122:
	.size	LINK_send_key_sequence, .-LINK_send_key_sequence
	.section	.text.LINK_send_command,"ax",%progbits
	.align	2
	.global	LINK_send_command
	.thumb
	.thumb_func
	.type	LINK_send_command, %function
LINK_send_command:
.LFB123:
	.loc 1 530 0
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI30:
	sub	sp, sp, #16
.LCFI31:
	add	r7, sp, #0
.LCFI32:
	mov	r3, r1
	str	r2, [r7]
	mov	r2, r0
	strb	r2, [r7, #7]
	strh	r3, [r7, #4]	@ movhi
	.loc 1 531 0
	movs	r3, #0
	strh	r3, [r7, #14]	@ movhi
	.loc 1 532 0
	movs	r0, #3
	bl	LINK_send_byte
	.loc 1 533 0
	ldrb	r3, [r7, #7]	@ zero_extendqisi2
	mov	r0, r3
	bl	LINK_send_byte
	.loc 1 534 0
	ldrh	r3, [r7, #4]	@ movhi
	strb	r3, [r7, #11]
	.loc 1 535 0
	ldrh	r3, [r7, #4]
	lsrs	r3, r3, #8
	uxth	r3, r3
	strb	r3, [r7, #10]
	.loc 1 536 0
	ldrb	r3, [r7, #11]	@ zero_extendqisi2
	mov	r0, r3
	bl	LINK_send_byte
	.loc 1 537 0
	ldrb	r3, [r7, #10]	@ zero_extendqisi2
	mov	r0, r3
	bl	LINK_send_byte
.LBB12:
	.loc 1 538 0
	movs	r3, #0
	strh	r3, [r7, #12]	@ movhi
	b	.L75
.L76:
	.loc 1 540 0 discriminator 2
	ldrh	r3, [r7, #12]
	ldr	r2, [r7]
	add	r3, r3, r2
	ldrb	r3, [r3]	@ zero_extendqisi2
	mov	r0, r3
	bl	LINK_send_byte
	.loc 1 541 0 discriminator 2
	ldrh	r3, [r7, #12]
	ldr	r2, [r7]
	add	r3, r3, r2
	ldrb	r3, [r3]	@ zero_extendqisi2
	mov	r2, r3
	ldrh	r3, [r7, #14]	@ movhi
	add	r3, r3, r2
	strh	r3, [r7, #14]	@ movhi
	.loc 1 538 0 discriminator 2
	ldrh	r3, [r7, #12]
	adds	r3, r3, #1
	strh	r3, [r7, #12]	@ movhi
.L75:
	.loc 1 538 0 is_stmt 0 discriminator 1
	ldrh	r2, [r7, #12]
	ldrh	r3, [r7, #4]
	cmp	r2, r3
	bcc	.L76
.LBE12:
	.loc 1 543 0 is_stmt 1
	ldrh	r3, [r7, #14]	@ movhi
	strb	r3, [r7, #9]
	.loc 1 544 0
	ldrh	r3, [r7, #14]
	lsrs	r3, r3, #8
	uxth	r3, r3
	strb	r3, [r7, #8]
	.loc 1 545 0
	ldrb	r3, [r7, #9]	@ zero_extendqisi2
	mov	r0, r3
	bl	LINK_send_byte
	.loc 1 546 0
	ldrb	r3, [r7, #8]	@ zero_extendqisi2
	mov	r0, r3
	bl	LINK_send_byte
	.loc 1 547 0
	adds	r7, r7, #16
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.LFE123:
	.size	LINK_send_command, .-LINK_send_command
	.section	.text.LINK_send_array_with_checksum,"ax",%progbits
	.align	2
	.global	LINK_send_array_with_checksum
	.thumb
	.thumb_func
	.type	LINK_send_array_with_checksum, %function
LINK_send_array_with_checksum:
.LFB124:
	.loc 1 550 0
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI33:
	sub	sp, sp, #16
.LCFI34:
	add	r7, sp, #0
.LCFI35:
	str	r0, [r7, #4]
	mov	r3, r1
	strh	r3, [r7, #2]	@ movhi
	.loc 1 551 0
	movs	r3, #0
	strh	r3, [r7, #14]	@ movhi
.LBB13:
	.loc 1 552 0
	movs	r3, #0
	strh	r3, [r7, #12]	@ movhi
	b	.L78
.L79:
	.loc 1 554 0 discriminator 2
	ldrh	r3, [r7, #12]
	ldr	r2, [r7, #4]
	add	r3, r3, r2
	ldrb	r3, [r3]	@ zero_extendqisi2
	mov	r0, r3
	bl	LINK_send_byte
	.loc 1 555 0 discriminator 2
	ldrh	r3, [r7, #12]
	ldr	r2, [r7, #4]
	add	r3, r3, r2
	ldrb	r3, [r3]	@ zero_extendqisi2
	mov	r2, r3
	ldrh	r3, [r7, #14]	@ movhi
	add	r3, r3, r2
	strh	r3, [r7, #14]	@ movhi
	.loc 1 552 0 discriminator 2
	ldrh	r3, [r7, #12]
	adds	r3, r3, #1
	strh	r3, [r7, #12]	@ movhi
.L78:
	.loc 1 552 0 is_stmt 0 discriminator 1
	ldrh	r2, [r7, #12]
	ldrh	r3, [r7, #2]
	cmp	r2, r3
	bcc	.L79
.LBE13:
	.loc 1 557 0 is_stmt 1
	ldrh	r3, [r7, #14]	@ movhi
	strb	r3, [r7, #11]
	.loc 1 558 0
	ldrh	r3, [r7, #14]
	lsrs	r3, r3, #8
	uxth	r3, r3
	strb	r3, [r7, #10]
	.loc 1 559 0
	ldrb	r3, [r7, #11]	@ zero_extendqisi2
	mov	r0, r3
	bl	LINK_send_byte
	.loc 1 560 0
	ldrb	r3, [r7, #10]	@ zero_extendqisi2
	mov	r0, r3
	bl	LINK_send_byte
	.loc 1 561 0
	adds	r7, r7, #16
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.LFE124:
	.size	LINK_send_array_with_checksum, .-LINK_send_array_with_checksum
	.section	.text.boot,"ax",%progbits
	.align	2
	.global	boot
	.thumb
	.thumb_func
	.type	boot, %function
boot:
.LFB125:
	.loc 1 565 0
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI36:
	add	r7, sp, #0
.LCFI37:
	.loc 1 566 0
	mov	r0, #39680
	bl	LINK_send_key
	.loc 1 567 0
	movw	r0, #20000
	bl	delay_us
	.loc 1 568 0
	mov	r0, #43008
	bl	LINK_send_key
	.loc 1 569 0
	movw	r0, #20000
	bl	delay_us
	.loc 1 570 0
	mov	r0, #43008
	bl	LINK_send_key
	.loc 1 571 0
	movw	r0, #20000
	bl	delay_us
	.loc 1 572 0
	mov	r0, #44288
	bl	LINK_send_key
	.loc 1 573 0
	movw	r0, #20000
	bl	delay_us
	.loc 1 574 0
	mov	r0, #41472
	bl	LINK_send_key
	.loc 1 575 0
	movw	r0, #20000
	bl	delay_us
	.loc 1 576 0
	mov	r0, #42752
	bl	LINK_send_key
	.loc 1 577 0
	movw	r0, #20000
	bl	delay_us
	.loc 1 578 0
	mov	r0, #40960
	bl	LINK_send_key
	.loc 1 579 0
	movw	r0, #20000
	bl	delay_us
	.loc 1 580 0
	movw	r0, #65128
	bl	LINK_send_key
	.loc 1 581 0
	movw	r0, #50000
	bl	delay_us
	.loc 1 582 0
	movw	r0, #65128
	bl	LINK_send_key
	.loc 1 583 0
	movw	r0, #50000
	bl	delay_us
	.loc 1 584 0
	movw	r0, #65128
	bl	LINK_send_key
	.loc 1 585 0
	movw	r0, #50000
	bl	delay_us
	.loc 1 586 0
	pop	{r7, pc}
.LFE125:
	.size	boot, .-boot
	.section	.text.delay,"ax",%progbits
	.align	2
	.global	delay
	.thumb
	.thumb_func
	.type	delay, %function
delay:
.LFB126:
	.loc 1 589 0
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	@ link register save eliminated.
	push	{r7}
.LCFI38:
	sub	sp, sp, #12
.LCFI39:
	add	r7, sp, #0
.LCFI40:
.LBB14:
	.loc 1 591 0
	movs	r3, #79
	str	r3, [r7]
	b	.L82
.L83:
	.loc 1 591 0 is_stmt 0 discriminator 2
	ldr	r3, [r7]
	subs	r3, r3, #1
	str	r3, [r7]
.L82:
	.loc 1 591 0 discriminator 1
	ldr	r3, [r7]
	cmp	r3, #0
	bne	.L83
.LBE14:
	.loc 1 594 0 is_stmt 1
	adds	r7, r7, #12
	mov	sp, r7
	@ sp needed
	ldr	r7, [sp], #4
	bx	lr
.LFE126:
	.size	delay, .-delay
	.section	.text.clear_buffer,"ax",%progbits
	.align	2
	.global	clear_buffer
	.thumb
	.thumb_func
	.type	clear_buffer, %function
clear_buffer:
.LFB127:
	.loc 1 596 0
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	@ link register save eliminated.
	push	{r7}
.LCFI41:
	sub	sp, sp, #12
.LCFI42:
	add	r7, sp, #0
.LCFI43:
.LBB15:
	.loc 1 597 0
	movs	r3, #0
	str	r3, [r7, #4]
	b	.L85
.L86:
	.loc 1 599 0 discriminator 2
	ldr	r2, .L87
	ldr	r3, [r7, #4]
	add	r3, r3, r2
	movs	r2, #0
	strb	r2, [r3]
	.loc 1 597 0 discriminator 2
	ldr	r3, [r7, #4]
	adds	r3, r3, #1
	str	r3, [r7, #4]
.L85:
	.loc 1 597 0 is_stmt 0 discriminator 1
	ldr	r3, [r7, #4]
	cmp	r3, #768
	blt	.L86
.LBE15:
	.loc 1 601 0 is_stmt 1
	adds	r7, r7, #12
	mov	sp, r7
	@ sp needed
	ldr	r7, [sp], #4
	bx	lr
.L88:
	.align	2
.L87:
	.word	framebuffer
.LFE127:
	.size	clear_buffer, .-clear_buffer
	.section	.text.update_lcd,"ax",%progbits
	.align	2
	.global	update_lcd
	.thumb
	.thumb_func
	.type	update_lcd, %function
update_lcd:
.LFB128:
	.loc 1 603 0
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	@ link register save eliminated.
	push	{r7}
.LCFI44:
	sub	sp, sp, #12
.LCFI45:
	add	r7, sp, #0
.LCFI46:
.LBB16:
	.loc 1 604 0
	movs	r3, #0
	str	r3, [r7, #4]
	b	.L90
.L91:
	.loc 1 606 0 discriminator 2
	ldr	r2, .L92
	ldr	r3, [r7, #4]
	add	r3, r3, r2
	ldrb	r2, [r3]	@ zero_extendqisi2
	ldr	r1, .L92+4
	ldr	r3, [r7, #4]
	add	r3, r3, r1
	strb	r2, [r3]
	.loc 1 604 0 discriminator 2
	ldr	r3, [r7, #4]
	adds	r3, r3, #1
	str	r3, [r7, #4]
.L90:
	.loc 1 604 0 is_stmt 0 discriminator 1
	ldr	r3, [r7, #4]
	cmp	r3, #768
	blt	.L91
.LBE16:
	.loc 1 608 0 is_stmt 1
	adds	r7, r7, #12
	mov	sp, r7
	@ sp needed
	ldr	r7, [sp], #4
	bx	lr
.L93:
	.align	2
.L92:
	.word	framebuffer
	.word	framebuffer_active
.LFE128:
	.size	update_lcd, .-update_lcd
	.section	.text.setpixel,"ax",%progbits
	.align	2
	.global	setpixel
	.thumb
	.thumb_func
	.type	setpixel, %function
setpixel:
.LFB129:
	.loc 1 611 0
	@ args = 0, pretend = 0, frame = 24
	@ frame_needed = 1, uses_anonymous_args = 0
	@ link register save eliminated.
	push	{r7}
.LCFI47:
	sub	sp, sp, #28
.LCFI48:
	add	r7, sp, #0
.LCFI49:
	str	r0, [r7, #4]
	str	r1, [r7]
	.loc 1 612 0
	ldr	r3, [r7, #4]
	cmp	r3, #0
	blt	.L94
	.loc 1 613 0
	ldr	r3, [r7, #4]
	cmp	r3, #95
	bgt	.L94
	.loc 1 614 0
	ldr	r3, [r7]
	cmp	r3, #0
	blt	.L94
	.loc 1 615 0
	ldr	r3, [r7]
	cmp	r3, #63
	bgt	.L94
.LBB17:
	.loc 1 617 0
	ldr	r3, [r7, #4]
	cmp	r3, #0
	bge	.L96
	adds	r3, r3, #7
.L96:
	asrs	r3, r3, #3
	str	r3, [r7, #20]
	.loc 1 618 0
	ldr	r2, [r7, #4]
	ldr	r3, .L98
	ands	r3, r3, r2
	cmp	r3, #0
	bge	.L97
	subs	r3, r3, #1
	orn	r3, r3, #7
	adds	r3, r3, #1
.L97:
	str	r3, [r7, #16]
	.loc 1 619 0
	ldr	r3, [r7, #20]
	lsls	r2, r3, #6
	ldr	r3, [r7]
	add	r3, r3, r2
	str	r3, [r7, #12]
	.loc 1 620 0
	ldr	r2, .L98+4
	ldr	r3, [r7, #12]
	add	r3, r3, r2
	ldrb	r3, [r3]	@ zero_extendqisi2
	uxtb	r2, r3
	movs	r1, #128
	ldr	r3, [r7, #16]
	asr	r3, r1, r3
	uxtb	r3, r3
	orrs	r3, r3, r2
	uxtb	r3, r3
	uxtb	r2, r3
	ldr	r1, .L98+4
	ldr	r3, [r7, #12]
	add	r3, r3, r1
	strb	r2, [r3]
.L94:
.LBE17:
	.loc 1 622 0
	adds	r7, r7, #28
	mov	sp, r7
	@ sp needed
	ldr	r7, [sp], #4
	bx	lr
.L99:
	.align	2
.L98:
	.word	-2147483641
	.word	framebuffer
.LFE129:
	.size	setpixel, .-setpixel
	.section	.text.clearpixel,"ax",%progbits
	.align	2
	.global	clearpixel
	.thumb
	.thumb_func
	.type	clearpixel, %function
clearpixel:
.LFB130:
	.loc 1 624 0
	@ args = 0, pretend = 0, frame = 24
	@ frame_needed = 1, uses_anonymous_args = 0
	@ link register save eliminated.
	push	{r7}
.LCFI50:
	sub	sp, sp, #28
.LCFI51:
	add	r7, sp, #0
.LCFI52:
	str	r0, [r7, #4]
	str	r1, [r7]
	.loc 1 625 0
	ldr	r3, [r7, #4]
	cmp	r3, #0
	blt	.L100
	.loc 1 626 0
	ldr	r3, [r7, #4]
	cmp	r3, #95
	bgt	.L100
	.loc 1 627 0
	ldr	r3, [r7]
	cmp	r3, #0
	blt	.L100
	.loc 1 628 0
	ldr	r3, [r7]
	cmp	r3, #63
	bgt	.L100
.LBB18:
	.loc 1 630 0
	ldr	r3, [r7, #4]
	cmp	r3, #0
	bge	.L102
	adds	r3, r3, #7
.L102:
	asrs	r3, r3, #3
	str	r3, [r7, #20]
	.loc 1 631 0
	ldr	r2, [r7, #4]
	ldr	r3, .L104
	ands	r3, r3, r2
	cmp	r3, #0
	bge	.L103
	subs	r3, r3, #1
	orn	r3, r3, #7
	adds	r3, r3, #1
.L103:
	str	r3, [r7, #16]
	.loc 1 632 0
	ldr	r3, [r7, #20]
	lsls	r2, r3, #6
	ldr	r3, [r7]
	add	r3, r3, r2
	str	r3, [r7, #12]
	.loc 1 633 0
	ldr	r2, .L104+4
	ldr	r3, [r7, #12]
	add	r3, r3, r2
	ldrb	r3, [r3]	@ zero_extendqisi2
	uxtb	r2, r3
	movs	r1, #128
	ldr	r3, [r7, #16]
	asr	r3, r1, r3
	uxtb	r3, r3
	mvns	r3, r3
	uxtb	r3, r3
	ands	r3, r3, r2
	uxtb	r3, r3
	uxtb	r2, r3
	ldr	r1, .L104+4
	ldr	r3, [r7, #12]
	add	r3, r3, r1
	strb	r2, [r3]
.L100:
.LBE18:
	.loc 1 635 0
	adds	r7, r7, #28
	mov	sp, r7
	@ sp needed
	ldr	r7, [sp], #4
	bx	lr
.L105:
	.align	2
.L104:
	.word	-2147483641
	.word	framebuffer
.LFE130:
	.size	clearpixel, .-clearpixel
	.section	.text.invertpixel,"ax",%progbits
	.align	2
	.global	invertpixel
	.thumb
	.thumb_func
	.type	invertpixel, %function
invertpixel:
.LFB131:
	.loc 1 637 0
	@ args = 0, pretend = 0, frame = 24
	@ frame_needed = 1, uses_anonymous_args = 0
	@ link register save eliminated.
	push	{r7}
.LCFI53:
	sub	sp, sp, #28
.LCFI54:
	add	r7, sp, #0
.LCFI55:
	str	r0, [r7, #4]
	str	r1, [r7]
	.loc 1 638 0
	ldr	r3, [r7, #4]
	cmp	r3, #0
	blt	.L106
	.loc 1 639 0
	ldr	r3, [r7, #4]
	cmp	r3, #95
	bgt	.L106
	.loc 1 640 0
	ldr	r3, [r7]
	cmp	r3, #0
	blt	.L106
	.loc 1 641 0
	ldr	r3, [r7]
	cmp	r3, #63
	bgt	.L106
.LBB19:
	.loc 1 643 0
	ldr	r3, [r7, #4]
	cmp	r3, #0
	bge	.L108
	adds	r3, r3, #7
.L108:
	asrs	r3, r3, #3
	str	r3, [r7, #20]
	.loc 1 644 0
	ldr	r2, [r7, #4]
	ldr	r3, .L110
	ands	r3, r3, r2
	cmp	r3, #0
	bge	.L109
	subs	r3, r3, #1
	orn	r3, r3, #7
	adds	r3, r3, #1
.L109:
	str	r3, [r7, #16]
	.loc 1 645 0
	ldr	r3, [r7, #20]
	lsls	r2, r3, #6
	ldr	r3, [r7]
	add	r3, r3, r2
	str	r3, [r7, #12]
	.loc 1 646 0
	ldr	r2, .L110+4
	ldr	r3, [r7, #12]
	add	r3, r3, r2
	ldrb	r3, [r3]	@ zero_extendqisi2
	uxtb	r2, r3
	movs	r1, #128
	ldr	r3, [r7, #16]
	asr	r3, r1, r3
	uxtb	r3, r3
	eors	r3, r3, r2
	uxtb	r3, r3
	uxtb	r2, r3
	ldr	r1, .L110+4
	ldr	r3, [r7, #12]
	add	r3, r3, r1
	strb	r2, [r3]
.L106:
.LBE19:
	.loc 1 648 0
	adds	r7, r7, #28
	mov	sp, r7
	@ sp needed
	ldr	r7, [sp], #4
	bx	lr
.L111:
	.align	2
.L110:
	.word	-2147483641
	.word	framebuffer
.LFE131:
	.size	invertpixel, .-invertpixel
	.section	.text.setline,"ax",%progbits
	.align	2
	.global	setline
	.thumb
	.thumb_func
	.type	setline, %function
setline:
.LFB132:
	.loc 1 650 0
	@ args = 0, pretend = 0, frame = 40
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI56:
	sub	sp, sp, #40
.LCFI57:
	add	r7, sp, #0
.LCFI58:
	str	r0, [r7, #12]
	str	r1, [r7, #8]
	str	r2, [r7, #4]
	str	r3, [r7]
	.loc 1 651 0
	ldr	r2, [r7, #4]
	ldr	r3, [r7, #12]
	subs	r3, r2, r3
	mov	r0, r3
	bl	abs
	str	r0, [r7, #32]
	ldr	r2, [r7, #12]
	ldr	r3, [r7, #4]
	cmp	r2, r3
	bge	.L113
	.loc 1 651 0 is_stmt 0 discriminator 1
	movs	r3, #1
	b	.L114
.L113:
	.loc 1 651 0 discriminator 2
	mov	r3, #-1
.L114:
	.loc 1 651 0 discriminator 3
	str	r3, [r7, #28]
	.loc 1 652 0 is_stmt 1 discriminator 3
	ldr	r2, [r7]
	ldr	r3, [r7, #8]
	subs	r3, r2, r3
	mov	r0, r3
	bl	abs
	mov	r3, r0
	negs	r3, r3
	str	r3, [r7, #24]
	ldr	r2, [r7, #8]
	ldr	r3, [r7]
	cmp	r2, r3
	bge	.L115
	.loc 1 652 0 is_stmt 0 discriminator 1
	movs	r3, #1
	b	.L116
.L115:
	.loc 1 652 0 discriminator 2
	mov	r3, #-1
.L116:
	.loc 1 652 0 discriminator 3
	str	r3, [r7, #20]
	.loc 1 653 0 is_stmt 1 discriminator 3
	ldr	r2, [r7, #32]
	ldr	r3, [r7, #24]
	add	r3, r3, r2
	str	r3, [r7, #36]
.L121:
	.loc 1 656 0
	ldr	r0, [r7, #12]
	ldr	r1, [r7, #8]
	bl	setpixel
	.loc 1 657 0
	ldr	r2, [r7, #12]
	ldr	r3, [r7, #4]
	cmp	r2, r3
	bne	.L117
	.loc 1 657 0 is_stmt 0 discriminator 1
	ldr	r2, [r7, #8]
	ldr	r3, [r7]
	cmp	r2, r3
	bne	.L117
	b	.L122
.L117:
	.loc 1 658 0 is_stmt 1
	ldr	r3, [r7, #36]
	lsls	r3, r3, #1
	str	r3, [r7, #16]
	.loc 1 659 0
	ldr	r2, [r7, #16]
	ldr	r3, [r7, #24]
	cmp	r2, r3
	ble	.L119
	.loc 1 659 0 is_stmt 0 discriminator 1
	ldr	r2, [r7, #36]
	ldr	r3, [r7, #24]
	add	r3, r3, r2
	str	r3, [r7, #36]
	ldr	r2, [r7, #12]
	ldr	r3, [r7, #28]
	add	r3, r3, r2
	str	r3, [r7, #12]
.L119:
	.loc 1 660 0 is_stmt 1
	ldr	r2, [r7, #16]
	ldr	r3, [r7, #32]
	cmp	r2, r3
	bge	.L120
	.loc 1 660 0 is_stmt 0 discriminator 1
	ldr	r2, [r7, #36]
	ldr	r3, [r7, #32]
	add	r3, r3, r2
	str	r3, [r7, #36]
	ldr	r2, [r7, #8]
	ldr	r3, [r7, #20]
	add	r3, r3, r2
	str	r3, [r7, #8]
	.loc 1 661 0 is_stmt 1 discriminator 1
	b	.L121
.L120:
	.loc 1 661 0 is_stmt 0
	b	.L121
.L122:
	.loc 1 662 0 is_stmt 1
	adds	r7, r7, #40
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.LFE132:
	.size	setline, .-setline
	.section	.text.clearline,"ax",%progbits
	.align	2
	.global	clearline
	.thumb
	.thumb_func
	.type	clearline, %function
clearline:
.LFB133:
	.loc 1 664 0
	@ args = 0, pretend = 0, frame = 40
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI59:
	sub	sp, sp, #40
.LCFI60:
	add	r7, sp, #0
.LCFI61:
	str	r0, [r7, #12]
	str	r1, [r7, #8]
	str	r2, [r7, #4]
	str	r3, [r7]
	.loc 1 665 0
	ldr	r2, [r7, #4]
	ldr	r3, [r7, #12]
	subs	r3, r2, r3
	mov	r0, r3
	bl	abs
	str	r0, [r7, #32]
	ldr	r2, [r7, #12]
	ldr	r3, [r7, #4]
	cmp	r2, r3
	bge	.L124
	.loc 1 665 0 is_stmt 0 discriminator 1
	movs	r3, #1
	b	.L125
.L124:
	.loc 1 665 0 discriminator 2
	mov	r3, #-1
.L125:
	.loc 1 665 0 discriminator 3
	str	r3, [r7, #28]
	.loc 1 666 0 is_stmt 1 discriminator 3
	ldr	r2, [r7]
	ldr	r3, [r7, #8]
	subs	r3, r2, r3
	mov	r0, r3
	bl	abs
	mov	r3, r0
	negs	r3, r3
	str	r3, [r7, #24]
	ldr	r2, [r7, #8]
	ldr	r3, [r7]
	cmp	r2, r3
	bge	.L126
	.loc 1 666 0 is_stmt 0 discriminator 1
	movs	r3, #1
	b	.L127
.L126:
	.loc 1 666 0 discriminator 2
	mov	r3, #-1
.L127:
	.loc 1 666 0 discriminator 3
	str	r3, [r7, #20]
	.loc 1 667 0 is_stmt 1 discriminator 3
	ldr	r2, [r7, #32]
	ldr	r3, [r7, #24]
	add	r3, r3, r2
	str	r3, [r7, #36]
.L132:
	.loc 1 670 0
	ldr	r0, [r7, #12]
	ldr	r1, [r7, #8]
	bl	clearpixel
	.loc 1 671 0
	ldr	r2, [r7, #12]
	ldr	r3, [r7, #4]
	cmp	r2, r3
	bne	.L128
	.loc 1 671 0 is_stmt 0 discriminator 1
	ldr	r2, [r7, #8]
	ldr	r3, [r7]
	cmp	r2, r3
	bne	.L128
	b	.L133
.L128:
	.loc 1 672 0 is_stmt 1
	ldr	r3, [r7, #36]
	lsls	r3, r3, #1
	str	r3, [r7, #16]
	.loc 1 673 0
	ldr	r2, [r7, #16]
	ldr	r3, [r7, #24]
	cmp	r2, r3
	ble	.L130
	.loc 1 673 0 is_stmt 0 discriminator 1
	ldr	r2, [r7, #36]
	ldr	r3, [r7, #24]
	add	r3, r3, r2
	str	r3, [r7, #36]
	ldr	r2, [r7, #12]
	ldr	r3, [r7, #28]
	add	r3, r3, r2
	str	r3, [r7, #12]
.L130:
	.loc 1 674 0 is_stmt 1
	ldr	r2, [r7, #16]
	ldr	r3, [r7, #32]
	cmp	r2, r3
	bge	.L131
	.loc 1 674 0 is_stmt 0 discriminator 1
	ldr	r2, [r7, #36]
	ldr	r3, [r7, #32]
	add	r3, r3, r2
	str	r3, [r7, #36]
	ldr	r2, [r7, #8]
	ldr	r3, [r7, #20]
	add	r3, r3, r2
	str	r3, [r7, #8]
	.loc 1 675 0 is_stmt 1 discriminator 1
	b	.L132
.L131:
	.loc 1 675 0 is_stmt 0
	b	.L132
.L133:
	.loc 1 676 0 is_stmt 1
	adds	r7, r7, #40
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.LFE133:
	.size	clearline, .-clearline
	.section	.text.invertline,"ax",%progbits
	.align	2
	.global	invertline
	.thumb
	.thumb_func
	.type	invertline, %function
invertline:
.LFB134:
	.loc 1 678 0
	@ args = 0, pretend = 0, frame = 40
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI62:
	sub	sp, sp, #40
.LCFI63:
	add	r7, sp, #0
.LCFI64:
	str	r0, [r7, #12]
	str	r1, [r7, #8]
	str	r2, [r7, #4]
	str	r3, [r7]
	.loc 1 679 0
	ldr	r2, [r7, #4]
	ldr	r3, [r7, #12]
	subs	r3, r2, r3
	mov	r0, r3
	bl	abs
	str	r0, [r7, #32]
	ldr	r2, [r7, #12]
	ldr	r3, [r7, #4]
	cmp	r2, r3
	bge	.L135
	.loc 1 679 0 is_stmt 0 discriminator 1
	movs	r3, #1
	b	.L136
.L135:
	.loc 1 679 0 discriminator 2
	mov	r3, #-1
.L136:
	.loc 1 679 0 discriminator 3
	str	r3, [r7, #28]
	.loc 1 680 0 is_stmt 1 discriminator 3
	ldr	r2, [r7]
	ldr	r3, [r7, #8]
	subs	r3, r2, r3
	mov	r0, r3
	bl	abs
	mov	r3, r0
	negs	r3, r3
	str	r3, [r7, #24]
	ldr	r2, [r7, #8]
	ldr	r3, [r7]
	cmp	r2, r3
	bge	.L137
	.loc 1 680 0 is_stmt 0 discriminator 1
	movs	r3, #1
	b	.L138
.L137:
	.loc 1 680 0 discriminator 2
	mov	r3, #-1
.L138:
	.loc 1 680 0 discriminator 3
	str	r3, [r7, #20]
	.loc 1 681 0 is_stmt 1 discriminator 3
	ldr	r2, [r7, #32]
	ldr	r3, [r7, #24]
	add	r3, r3, r2
	str	r3, [r7, #36]
.L143:
	.loc 1 684 0
	ldr	r0, [r7, #12]
	ldr	r1, [r7, #8]
	bl	invertpixel
	.loc 1 685 0
	ldr	r2, [r7, #12]
	ldr	r3, [r7, #4]
	cmp	r2, r3
	bne	.L139
	.loc 1 685 0 is_stmt 0 discriminator 1
	ldr	r2, [r7, #8]
	ldr	r3, [r7]
	cmp	r2, r3
	bne	.L139
	b	.L144
.L139:
	.loc 1 686 0 is_stmt 1
	ldr	r3, [r7, #36]
	lsls	r3, r3, #1
	str	r3, [r7, #16]
	.loc 1 687 0
	ldr	r2, [r7, #16]
	ldr	r3, [r7, #24]
	cmp	r2, r3
	ble	.L141
	.loc 1 687 0 is_stmt 0 discriminator 1
	ldr	r2, [r7, #36]
	ldr	r3, [r7, #24]
	add	r3, r3, r2
	str	r3, [r7, #36]
	ldr	r2, [r7, #12]
	ldr	r3, [r7, #28]
	add	r3, r3, r2
	str	r3, [r7, #12]
.L141:
	.loc 1 688 0 is_stmt 1
	ldr	r2, [r7, #16]
	ldr	r3, [r7, #32]
	cmp	r2, r3
	bge	.L142
	.loc 1 688 0 is_stmt 0 discriminator 1
	ldr	r2, [r7, #36]
	ldr	r3, [r7, #32]
	add	r3, r3, r2
	str	r3, [r7, #36]
	ldr	r2, [r7, #8]
	ldr	r3, [r7, #20]
	add	r3, r3, r2
	str	r3, [r7, #8]
	.loc 1 689 0 is_stmt 1 discriminator 1
	b	.L143
.L142:
	.loc 1 689 0 is_stmt 0
	b	.L143
.L144:
	.loc 1 690 0 is_stmt 1
	adds	r7, r7, #40
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.LFE134:
	.size	invertline, .-invertline
	.section	.text.settriangle,"ax",%progbits
	.align	2
	.global	settriangle
	.thumb
	.thumb_func
	.type	settriangle, %function
settriangle:
.LFB135:
	.loc 1 692 0
	@ args = 8, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI65:
	sub	sp, sp, #16
.LCFI66:
	add	r7, sp, #0
.LCFI67:
	str	r0, [r7, #12]
	str	r1, [r7, #8]
	str	r2, [r7, #4]
	str	r3, [r7]
	.loc 1 693 0
	ldr	r0, [r7, #12]
	ldr	r1, [r7, #8]
	ldr	r2, [r7, #4]
	ldr	r3, [r7]
	bl	setline
	.loc 1 694 0
	ldr	r0, [r7, #4]
	ldr	r1, [r7]
	ldr	r2, [r7, #24]
	ldr	r3, [r7, #28]
	bl	setline
	.loc 1 695 0
	ldr	r0, [r7, #24]
	ldr	r1, [r7, #28]
	ldr	r2, [r7, #12]
	ldr	r3, [r7, #8]
	bl	setline
	.loc 1 696 0
	adds	r7, r7, #16
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.LFE135:
	.size	settriangle, .-settriangle
	.section	.text.cleartriangle,"ax",%progbits
	.align	2
	.global	cleartriangle
	.thumb
	.thumb_func
	.type	cleartriangle, %function
cleartriangle:
.LFB136:
	.loc 1 698 0
	@ args = 8, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI68:
	sub	sp, sp, #16
.LCFI69:
	add	r7, sp, #0
.LCFI70:
	str	r0, [r7, #12]
	str	r1, [r7, #8]
	str	r2, [r7, #4]
	str	r3, [r7]
	.loc 1 699 0
	ldr	r0, [r7, #12]
	ldr	r1, [r7, #8]
	ldr	r2, [r7, #4]
	ldr	r3, [r7]
	bl	clearline
	.loc 1 700 0
	ldr	r0, [r7, #4]
	ldr	r1, [r7]
	ldr	r2, [r7, #24]
	ldr	r3, [r7, #28]
	bl	clearline
	.loc 1 701 0
	ldr	r0, [r7, #24]
	ldr	r1, [r7, #28]
	ldr	r2, [r7, #12]
	ldr	r3, [r7, #8]
	bl	clearline
	.loc 1 702 0
	adds	r7, r7, #16
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.LFE136:
	.size	cleartriangle, .-cleartriangle
	.section	.text.inverttriangle,"ax",%progbits
	.align	2
	.global	inverttriangle
	.thumb
	.thumb_func
	.type	inverttriangle, %function
inverttriangle:
.LFB137:
	.loc 1 704 0
	@ args = 8, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI71:
	sub	sp, sp, #16
.LCFI72:
	add	r7, sp, #0
.LCFI73:
	str	r0, [r7, #12]
	str	r1, [r7, #8]
	str	r2, [r7, #4]
	str	r3, [r7]
	.loc 1 705 0
	ldr	r0, [r7, #12]
	ldr	r1, [r7, #8]
	ldr	r2, [r7, #4]
	ldr	r3, [r7]
	bl	invertline
	.loc 1 706 0
	ldr	r0, [r7, #4]
	ldr	r1, [r7]
	ldr	r2, [r7, #24]
	ldr	r3, [r7, #28]
	bl	invertline
	.loc 1 707 0
	ldr	r0, [r7, #24]
	ldr	r1, [r7, #28]
	ldr	r2, [r7, #12]
	ldr	r3, [r7, #8]
	bl	invertline
	.loc 1 708 0
	adds	r7, r7, #16
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.LFE137:
	.size	inverttriangle, .-inverttriangle
	.section	.text.setrectangle,"ax",%progbits
	.align	2
	.global	setrectangle
	.thumb
	.thumb_func
	.type	setrectangle, %function
setrectangle:
.LFB138:
	.loc 1 710 0
	@ args = 0, pretend = 0, frame = 24
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI74:
	sub	sp, sp, #24
.LCFI75:
	add	r7, sp, #0
.LCFI76:
	str	r0, [r7, #12]
	str	r1, [r7, #8]
	str	r2, [r7, #4]
	str	r3, [r7]
	.loc 1 713 0
	ldr	r3, [r7, #8]
	str	r3, [r7, #16]
	b	.L149
.L152:
	.loc 1 715 0
	ldr	r3, [r7, #12]
	str	r3, [r7, #20]
	b	.L150
.L151:
	.loc 1 717 0 discriminator 2
	ldr	r0, [r7, #20]
	ldr	r1, [r7, #16]
	bl	setpixel
	.loc 1 715 0 discriminator 2
	ldr	r3, [r7, #20]
	adds	r3, r3, #1
	str	r3, [r7, #20]
.L150:
	.loc 1 715 0 is_stmt 0 discriminator 1
	ldr	r2, [r7, #20]
	ldr	r3, [r7, #4]
	cmp	r2, r3
	ble	.L151
	.loc 1 713 0 is_stmt 1
	ldr	r3, [r7, #16]
	adds	r3, r3, #1
	str	r3, [r7, #16]
.L149:
	.loc 1 713 0 is_stmt 0 discriminator 1
	ldr	r2, [r7, #16]
	ldr	r3, [r7]
	cmp	r2, r3
	ble	.L152
	.loc 1 720 0 is_stmt 1
	adds	r7, r7, #24
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.LFE138:
	.size	setrectangle, .-setrectangle
	.section	.text.clearrectangle,"ax",%progbits
	.align	2
	.global	clearrectangle
	.thumb
	.thumb_func
	.type	clearrectangle, %function
clearrectangle:
.LFB139:
	.loc 1 722 0
	@ args = 0, pretend = 0, frame = 24
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI77:
	sub	sp, sp, #24
.LCFI78:
	add	r7, sp, #0
.LCFI79:
	str	r0, [r7, #12]
	str	r1, [r7, #8]
	str	r2, [r7, #4]
	str	r3, [r7]
	.loc 1 725 0
	ldr	r3, [r7, #8]
	str	r3, [r7, #16]
	b	.L154
.L157:
	.loc 1 727 0
	ldr	r3, [r7, #12]
	str	r3, [r7, #20]
	b	.L155
.L156:
	.loc 1 729 0 discriminator 2
	ldr	r0, [r7, #20]
	ldr	r1, [r7, #16]
	bl	clearpixel
	.loc 1 727 0 discriminator 2
	ldr	r3, [r7, #20]
	adds	r3, r3, #1
	str	r3, [r7, #20]
.L155:
	.loc 1 727 0 is_stmt 0 discriminator 1
	ldr	r2, [r7, #20]
	ldr	r3, [r7, #4]
	cmp	r2, r3
	ble	.L156
	.loc 1 725 0 is_stmt 1
	ldr	r3, [r7, #16]
	adds	r3, r3, #1
	str	r3, [r7, #16]
.L154:
	.loc 1 725 0 is_stmt 0 discriminator 1
	ldr	r2, [r7, #16]
	ldr	r3, [r7]
	cmp	r2, r3
	ble	.L157
	.loc 1 732 0 is_stmt 1
	adds	r7, r7, #24
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.LFE139:
	.size	clearrectangle, .-clearrectangle
	.section	.text.invertrectangle,"ax",%progbits
	.align	2
	.global	invertrectangle
	.thumb
	.thumb_func
	.type	invertrectangle, %function
invertrectangle:
.LFB140:
	.loc 1 734 0
	@ args = 0, pretend = 0, frame = 24
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI80:
	sub	sp, sp, #24
.LCFI81:
	add	r7, sp, #0
.LCFI82:
	str	r0, [r7, #12]
	str	r1, [r7, #8]
	str	r2, [r7, #4]
	str	r3, [r7]
	.loc 1 737 0
	ldr	r3, [r7, #8]
	str	r3, [r7, #16]
	b	.L159
.L162:
	.loc 1 739 0
	ldr	r3, [r7, #12]
	str	r3, [r7, #20]
	b	.L160
.L161:
	.loc 1 741 0 discriminator 2
	ldr	r0, [r7, #20]
	ldr	r1, [r7, #16]
	bl	invertpixel
	.loc 1 739 0 discriminator 2
	ldr	r3, [r7, #20]
	adds	r3, r3, #1
	str	r3, [r7, #20]
.L160:
	.loc 1 739 0 is_stmt 0 discriminator 1
	ldr	r2, [r7, #20]
	ldr	r3, [r7, #4]
	cmp	r2, r3
	ble	.L161
	.loc 1 737 0 is_stmt 1
	ldr	r3, [r7, #16]
	adds	r3, r3, #1
	str	r3, [r7, #16]
.L159:
	.loc 1 737 0 is_stmt 0 discriminator 1
	ldr	r2, [r7, #16]
	ldr	r3, [r7]
	cmp	r2, r3
	ble	.L162
	.loc 1 744 0 is_stmt 1
	adds	r7, r7, #24
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.LFE140:
	.size	invertrectangle, .-invertrectangle
	.global	__aeabi_fadd
	.section	.text.translate,"ax",%progbits
	.align	2
	.global	translate
	.thumb
	.thumb_func
	.type	translate, %function
translate:
.LFB141:
	.loc 1 747 0
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI83:
	sub	sp, sp, #16
.LCFI84:
	add	r7, sp, #0
.LCFI85:
	str	r0, [r7, #12]
	mov	r0, r7
	stmia	r0, {r1, r2, r3}
	.loc 1 748 0
	ldr	r3, [r7, #12]
	ldr	r2, [r3]	@ float
	ldr	r3, [r7]	@ float
	mov	r0, r2
	mov	r1, r3
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r2, r3
	ldr	r3, [r7, #12]
	str	r2, [r3]	@ float
	.loc 1 749 0
	ldr	r3, [r7, #12]
	ldr	r2, [r3, #4]	@ float
	ldr	r3, [r7, #4]	@ float
	mov	r0, r2
	mov	r1, r3
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r2, r3
	ldr	r3, [r7, #12]
	str	r2, [r3, #4]	@ float
	.loc 1 750 0
	ldr	r3, [r7, #12]
	ldr	r2, [r3, #8]	@ float
	ldr	r3, [r7, #8]	@ float
	mov	r0, r2
	mov	r1, r3
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r2, r3
	ldr	r3, [r7, #12]
	str	r2, [r3, #8]	@ float
	.loc 1 751 0
	adds	r7, r7, #16
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.LFE141:
	.size	translate, .-translate
	.section	.text.transferdelay,"ax",%progbits
	.align	2
	.global	transferdelay
	.thumb
	.thumb_func
	.type	transferdelay, %function
transferdelay:
.LFB142:
	.loc 1 753 0
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	@ link register save eliminated.
	push	{r7}
.LCFI86:
	sub	sp, sp, #12
.LCFI87:
	add	r7, sp, #0
.LCFI88:
	str	r0, [r7, #4]
	.loc 1 754 0
	b	.L165
.L166:
	.loc 1 756 0
	ldr	r3, [r7, #4]
	subs	r3, r3, #1
	str	r3, [r7, #4]
.L165:
	.loc 1 754 0 discriminator 1
	ldr	r3, [r7, #4]
	cmp	r3, #0
	bgt	.L166
	.loc 1 758 0
	adds	r7, r7, #12
	mov	sp, r7
	@ sp needed
	ldr	r7, [sp], #4
	bx	lr
.LFE142:
	.size	transferdelay, .-transferdelay
	.section	.text.transfer_data,"ax",%progbits
	.align	2
	.global	transfer_data
	.thumb
	.thumb_func
	.type	transfer_data, %function
transfer_data:
.LFB143:
	.loc 1 760 0
	@ args = 0, pretend = 0, frame = 64
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r4, r5, r7, lr}
.LCFI89:
	sub	sp, sp, #64
.LCFI90:
	add	r7, sp, #0
.LCFI91:
	str	r0, [r7, #4]
	.loc 1 761 0
	ldr	r3, .L198
	ldrd	r0, [r3]
	mov	r2, #320
	mov	r3, #0
	and	r2, r2, r0
	and	r3, r3, r1
	orrs	r1, r2, r3
	beq	.L168
	.loc 1 763 0
	ldr	r3, .L198+4
	movs	r2, #1
	str	r2, [r3]
	b	.L169
.L168:
	.loc 1 767 0
	ldr	r3, .L198+4
	movs	r2, #0
	str	r2, [r3]
.L169:
	.loc 1 774 0
	movs	r3, #0
	str	r3, [r7, #60]
	.loc 1 776 0
	b	.L170
.L185:
	.loc 1 778 0
	nop
.L171:
	.loc 1 778 0 is_stmt 0 discriminator 1
	ldr	r0, .L198+8
	movs	r1, #1
	bl	GPIO_ReadInputDataBit
	mov	r3, r0
	cmp	r3, #0
	bne	.L171
	.loc 1 779 0 is_stmt 1
	nop
.L172:
	.loc 1 779 0 is_stmt 0 discriminator 1
	ldr	r0, .L198+8
	movs	r1, #1
	bl	GPIO_ReadInputDataBit
	mov	r3, r0
	cmp	r3, #0
	beq	.L172
.LBB20:
	.loc 1 780 0 is_stmt 1
	movs	r3, #6
	str	r3, [r7, #36]
	b	.L173
.L174:
	.loc 1 780 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #36]
	subs	r3, r3, #1
	str	r3, [r7, #36]
.L173:
	.loc 1 780 0 discriminator 1
	ldr	r3, [r7, #36]
	cmp	r3, #0
	bne	.L174
.LBE20:
	.loc 1 789 0 is_stmt 1
	ldr	r2, .L198+12
	ldr	r3, [r7, #60]
	add	r3, r3, r2
	ldrb	r3, [r3]	@ zero_extendqisi2
	strh	r3, [r7, #46]	@ movhi
	.loc 1 791 0
	ldrh	r3, [r7, #46]
	lsrs	r3, r3, #2
	strh	r3, [r7, #44]	@ movhi
	.loc 1 792 0
	ldrh	r3, [r7, #44]
	lsrs	r3, r3, #2
	strh	r3, [r7, #42]	@ movhi
	.loc 1 793 0
	ldrh	r3, [r7, #42]
	lsrs	r3, r3, #2
	strh	r3, [r7, #40]	@ movhi
	.loc 1 796 0
	ldr	r3, .L198+8
	ldrh	r2, [r7, #40]
	str	r2, [r3, #20]
.LBB21:
	.loc 1 797 0
	movs	r3, #110
	str	r3, [r7, #32]
	b	.L175
.L176:
	.loc 1 797 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #32]
	subs	r3, r3, #1
	str	r3, [r7, #32]
.L175:
	.loc 1 797 0 discriminator 1
	ldr	r3, [r7, #32]
	cmp	r3, #0
	bne	.L176
.LBE21:
	.loc 1 798 0 is_stmt 1
	ldr	r3, .L198+8
	ldrh	r2, [r7, #42]
	str	r2, [r3, #20]
.LBB22:
	.loc 1 799 0
	movs	r3, #110
	str	r3, [r7, #28]
	b	.L177
.L178:
	.loc 1 799 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #28]
	subs	r3, r3, #1
	str	r3, [r7, #28]
.L177:
	.loc 1 799 0 discriminator 1
	ldr	r3, [r7, #28]
	cmp	r3, #0
	bne	.L178
.LBE22:
	.loc 1 800 0 is_stmt 1
	ldr	r3, .L198+8
	ldrh	r2, [r7, #46]
	str	r2, [r3, #20]
.LBB23:
	.loc 1 801 0
	movs	r3, #110
	str	r3, [r7, #24]
	b	.L179
.L180:
	.loc 1 801 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #24]
	subs	r3, r3, #1
	str	r3, [r7, #24]
.L179:
	.loc 1 801 0 discriminator 1
	ldr	r3, [r7, #24]
	cmp	r3, #0
	bne	.L180
.LBE23:
	.loc 1 802 0 is_stmt 1
	ldr	r3, .L198+8
	ldrh	r2, [r7, #44]
	str	r2, [r3, #20]
.LBB24:
	.loc 1 803 0
	movs	r3, #110
	str	r3, [r7, #20]
	b	.L181
.L182:
	.loc 1 803 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #20]
	subs	r3, r3, #1
	str	r3, [r7, #20]
.L181:
	.loc 1 803 0 discriminator 1
	ldr	r3, [r7, #20]
	cmp	r3, #0
	bne	.L182
.LBE24:
	.loc 1 804 0 is_stmt 1
	ldr	r3, .L198+8
	movs	r2, #3
	str	r2, [r3, #20]
.LBB25:
	.loc 1 805 0
	movs	r3, #10
	str	r3, [r7, #16]
	b	.L183
.L184:
	.loc 1 805 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #16]
	subs	r3, r3, #1
	str	r3, [r7, #16]
.L183:
	.loc 1 805 0 discriminator 1
	ldr	r3, [r7, #16]
	cmp	r3, #0
	bne	.L184
.LBE25:
	.loc 1 807 0 is_stmt 1
	ldr	r3, [r7, #60]
	adds	r3, r3, #1
	str	r3, [r7, #60]
.L170:
	.loc 1 776 0 discriminator 1
	ldr	r3, [r7, #60]
	cmp	r3, #768
	blt	.L185
	.loc 1 811 0
	ldr	r1, .L198
	mov	r2, #0
	mov	r3, #0
	strd	r2, [r1]
.LBB26:
	.loc 1 812 0
	movs	r3, #0
	str	r3, [r7, #56]
	b	.L186
.L196:
.LBB27:
	.loc 1 814 0
	movs	r3, #0
	strb	r3, [r7, #55]
	.loc 1 816 0
	nop
.L187:
	.loc 1 816 0 is_stmt 0 discriminator 1
	ldr	r0, .L198+8
	movs	r1, #2
	bl	GPIO_ReadInputDataBit
	mov	r3, r0
	cmp	r3, #0
	bne	.L187
.LBB28:
	.loc 1 818 0 is_stmt 1
	movs	r3, #80
	str	r3, [r7, #12]
	b	.L188
.L189:
	.loc 1 818 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #12]
	subs	r3, r3, #1
	str	r3, [r7, #12]
.L188:
	.loc 1 818 0 discriminator 1
	ldr	r3, [r7, #12]
	cmp	r3, #0
	bne	.L189
.LBE28:
.LBB29:
	.loc 1 819 0 is_stmt 1
	movs	r3, #0
	str	r3, [r7, #48]
	b	.L190
.L195:
	.loc 1 821 0
	ldrb	r3, [r7, #55]
	lsls	r3, r3, #2
	strb	r3, [r7, #55]
	.loc 1 822 0
	ldr	r0, .L198+8
	movs	r1, #2
	bl	GPIO_ReadInputDataBit
	mov	r3, r0
	cmp	r3, #0
	bne	.L191
	.loc 1 824 0
	ldrb	r3, [r7, #55]
	adds	r3, r3, #1
	strb	r3, [r7, #55]
	ldr	r3, .L198+16
	movs	r2, #2
	str	r2, [r3]
.L191:
	.loc 1 826 0
	ldr	r0, .L198+8
	movs	r1, #1
	bl	GPIO_ReadInputDataBit
	mov	r3, r0
	cmp	r3, #0
	bne	.L192
	.loc 1 828 0
	ldrb	r3, [r7, #55]
	adds	r3, r3, #2
	strb	r3, [r7, #55]
	ldr	r3, .L198+16
	movs	r2, #1
	str	r2, [r3]
.L192:
.LBB30:
	.loc 1 830 0
	movs	r3, #120
	str	r3, [r7, #8]
	b	.L193
.L194:
	.loc 1 830 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #8]
	subs	r3, r3, #1
	str	r3, [r7, #8]
.L193:
	.loc 1 830 0 discriminator 1
	ldr	r3, [r7, #8]
	cmp	r3, #0
	bne	.L194
.LBE30:
	.loc 1 819 0 is_stmt 1
	ldr	r3, [r7, #48]
	adds	r3, r3, #1
	str	r3, [r7, #48]
.L190:
	.loc 1 819 0 is_stmt 0 discriminator 1
	ldr	r3, [r7, #48]
	cmp	r3, #3
	ble	.L195
.LBE29:
	.loc 1 832 0 is_stmt 1
	ldr	r3, .L198
	ldrd	r2, [r3]
	lsls	r5, r3, #8
	orr	r5, r5, r2, lsr #24
	lsls	r4, r2, #8
	ldr	r3, .L198
	strd	r4, [r3]
	.loc 1 833 0
	ldrb	r0, [r7, #55]	@ zero_extendqisi2
	mov	r1, #0
	ldr	r3, .L198
	ldrd	r2, [r3]
	adds	r2, r2, r0
	adc	r3, r3, r1
	ldr	r1, .L198
	strd	r2, [r1]
.LBE27:
	.loc 1 812 0
	ldr	r3, [r7, #56]
	adds	r3, r3, #1
	str	r3, [r7, #56]
.L186:
	.loc 1 812 0 is_stmt 0 discriminator 1
	ldr	r3, [r7, #56]
	cmp	r3, #7
	ble	.L196
.LBE26:
	.loc 1 835 0 is_stmt 1
	ldr	r3, .L198+4
	ldr	r3, [r3]
	cmp	r3, #1
	bne	.L167
	.loc 1 837 0
	ldr	r3, .L198+8
	movs	r2, #1
	strh	r2, [r3, #26]	@ movhi
.L167:
	.loc 1 840 0
	adds	r7, r7, #64
	mov	sp, r7
	@ sp needed
	pop	{r4, r5, r7, pc}
.L199:
	.align	2
.L198:
	.word	key
	.word	quit
	.word	1073876992
	.word	framebuffer_active
	.word	it
.LFE143:
	.size	transfer_data, .-transfer_data
	.section	.text.drawbird,"ax",%progbits
	.align	2
	.global	drawbird
	.thumb
	.thumb_func
	.type	drawbird, %function
drawbird:
.LFB144:
	.loc 1 846 0
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI92:
	sub	sp, sp, #16
.LCFI93:
	add	r7, sp, #0
.LCFI94:
	str	r0, [r7, #4]
	str	r1, [r7]
.LBB31:
	.loc 1 847 0
	movs	r3, #0
	str	r3, [r7, #12]
	b	.L201
.L218:
	.loc 1 849 0
	ldr	r3, .L219
	ldr	r2, [r7, #12]
	ldrh	r3, [r3, r2, lsl #1]
	and	r3, r3, #1
	cmp	r3, #0
	beq	.L202
	.loc 1 850 0
	ldr	r2, [r7, #12]
	ldr	r3, [r7, #4]
	add	r2, r2, r3
	ldr	r3, [r7]
	adds	r3, r3, #15
	mov	r0, r2
	mov	r1, r3
	bl	setpixel
.L202:
	.loc 1 851 0
	ldr	r3, .L219
	ldr	r2, [r7, #12]
	ldrh	r3, [r3, r2, lsl #1]
	and	r3, r3, #2
	cmp	r3, #0
	beq	.L203
	.loc 1 852 0
	ldr	r2, [r7, #12]
	ldr	r3, [r7, #4]
	add	r2, r2, r3
	ldr	r3, [r7]
	adds	r3, r3, #14
	mov	r0, r2
	mov	r1, r3
	bl	setpixel
.L203:
	.loc 1 853 0
	ldr	r3, .L219
	ldr	r2, [r7, #12]
	ldrh	r3, [r3, r2, lsl #1]
	and	r3, r3, #4
	cmp	r3, #0
	beq	.L204
	.loc 1 854 0
	ldr	r2, [r7, #12]
	ldr	r3, [r7, #4]
	add	r2, r2, r3
	ldr	r3, [r7]
	adds	r3, r3, #13
	mov	r0, r2
	mov	r1, r3
	bl	setpixel
.L204:
	.loc 1 855 0
	ldr	r3, .L219
	ldr	r2, [r7, #12]
	ldrh	r3, [r3, r2, lsl #1]
	and	r3, r3, #8
	cmp	r3, #0
	beq	.L205
	.loc 1 856 0
	ldr	r2, [r7, #12]
	ldr	r3, [r7, #4]
	add	r2, r2, r3
	ldr	r3, [r7]
	adds	r3, r3, #12
	mov	r0, r2
	mov	r1, r3
	bl	setpixel
.L205:
	.loc 1 857 0
	ldr	r3, .L219
	ldr	r2, [r7, #12]
	ldrh	r3, [r3, r2, lsl #1]
	and	r3, r3, #16
	cmp	r3, #0
	beq	.L206
	.loc 1 858 0
	ldr	r2, [r7, #12]
	ldr	r3, [r7, #4]
	add	r2, r2, r3
	ldr	r3, [r7]
	adds	r3, r3, #11
	mov	r0, r2
	mov	r1, r3
	bl	setpixel
.L206:
	.loc 1 859 0
	ldr	r3, .L219
	ldr	r2, [r7, #12]
	ldrh	r3, [r3, r2, lsl #1]
	and	r3, r3, #32
	cmp	r3, #0
	beq	.L207
	.loc 1 860 0
	ldr	r2, [r7, #12]
	ldr	r3, [r7, #4]
	add	r2, r2, r3
	ldr	r3, [r7]
	adds	r3, r3, #10
	mov	r0, r2
	mov	r1, r3
	bl	setpixel
.L207:
	.loc 1 861 0
	ldr	r3, .L219
	ldr	r2, [r7, #12]
	ldrh	r3, [r3, r2, lsl #1]
	and	r3, r3, #64
	cmp	r3, #0
	beq	.L208
	.loc 1 862 0
	ldr	r2, [r7, #12]
	ldr	r3, [r7, #4]
	add	r2, r2, r3
	ldr	r3, [r7]
	adds	r3, r3, #9
	mov	r0, r2
	mov	r1, r3
	bl	setpixel
.L208:
	.loc 1 863 0
	ldr	r3, .L219
	ldr	r2, [r7, #12]
	ldrh	r3, [r3, r2, lsl #1]
	and	r3, r3, #128
	cmp	r3, #0
	beq	.L209
	.loc 1 864 0
	ldr	r2, [r7, #12]
	ldr	r3, [r7, #4]
	add	r2, r2, r3
	ldr	r3, [r7]
	adds	r3, r3, #8
	mov	r0, r2
	mov	r1, r3
	bl	setpixel
.L209:
	.loc 1 865 0
	ldr	r3, .L219
	ldr	r2, [r7, #12]
	ldrh	r3, [r3, r2, lsl #1]
	and	r3, r3, #256
	cmp	r3, #0
	beq	.L210
	.loc 1 866 0
	ldr	r2, [r7, #12]
	ldr	r3, [r7, #4]
	add	r2, r2, r3
	ldr	r3, [r7]
	adds	r3, r3, #7
	mov	r0, r2
	mov	r1, r3
	bl	setpixel
.L210:
	.loc 1 867 0
	ldr	r3, .L219
	ldr	r2, [r7, #12]
	ldrh	r3, [r3, r2, lsl #1]
	and	r3, r3, #512
	cmp	r3, #0
	beq	.L211
	.loc 1 868 0
	ldr	r2, [r7, #12]
	ldr	r3, [r7, #4]
	add	r2, r2, r3
	ldr	r3, [r7]
	adds	r3, r3, #6
	mov	r0, r2
	mov	r1, r3
	bl	setpixel
.L211:
	.loc 1 869 0
	ldr	r3, .L219
	ldr	r2, [r7, #12]
	ldrh	r3, [r3, r2, lsl #1]
	and	r3, r3, #1024
	cmp	r3, #0
	beq	.L212
	.loc 1 870 0
	ldr	r2, [r7, #12]
	ldr	r3, [r7, #4]
	add	r2, r2, r3
	ldr	r3, [r7]
	adds	r3, r3, #5
	mov	r0, r2
	mov	r1, r3
	bl	setpixel
.L212:
	.loc 1 871 0
	ldr	r3, .L219
	ldr	r2, [r7, #12]
	ldrh	r3, [r3, r2, lsl #1]
	and	r3, r3, #2048
	cmp	r3, #0
	beq	.L213
	.loc 1 872 0
	ldr	r2, [r7, #12]
	ldr	r3, [r7, #4]
	add	r2, r2, r3
	ldr	r3, [r7]
	adds	r3, r3, #4
	mov	r0, r2
	mov	r1, r3
	bl	setpixel
.L213:
	.loc 1 873 0
	ldr	r3, .L219
	ldr	r2, [r7, #12]
	ldrh	r3, [r3, r2, lsl #1]
	and	r3, r3, #4096
	cmp	r3, #0
	beq	.L214
	.loc 1 874 0
	ldr	r2, [r7, #12]
	ldr	r3, [r7, #4]
	add	r2, r2, r3
	ldr	r3, [r7]
	adds	r3, r3, #3
	mov	r0, r2
	mov	r1, r3
	bl	setpixel
.L214:
	.loc 1 875 0
	ldr	r3, .L219
	ldr	r2, [r7, #12]
	ldrh	r3, [r3, r2, lsl #1]
	and	r3, r3, #8192
	cmp	r3, #0
	beq	.L215
	.loc 1 876 0
	ldr	r2, [r7, #12]
	ldr	r3, [r7, #4]
	add	r2, r2, r3
	ldr	r3, [r7]
	adds	r3, r3, #2
	mov	r0, r2
	mov	r1, r3
	bl	setpixel
.L215:
	.loc 1 877 0
	ldr	r3, .L219
	ldr	r2, [r7, #12]
	ldrh	r3, [r3, r2, lsl #1]
	and	r3, r3, #16384
	cmp	r3, #0
	beq	.L216
	.loc 1 878 0
	ldr	r2, [r7, #12]
	ldr	r3, [r7, #4]
	add	r2, r2, r3
	ldr	r3, [r7]
	adds	r3, r3, #1
	mov	r0, r2
	mov	r1, r3
	bl	setpixel
.L216:
	.loc 1 879 0
	ldr	r3, .L219
	ldr	r2, [r7, #12]
	ldrh	r3, [r3, r2, lsl #1]
	uxth	r3, r3
	sxth	r3, r3
	cmp	r3, #0
	bge	.L217
	.loc 1 880 0
	ldr	r2, [r7, #12]
	ldr	r3, [r7, #4]
	add	r3, r3, r2
	mov	r0, r3
	ldr	r1, [r7]
	bl	setpixel
.L217:
	.loc 1 847 0
	ldr	r3, [r7, #12]
	adds	r3, r3, #1
	str	r3, [r7, #12]
.L201:
	.loc 1 847 0 is_stmt 0 discriminator 1
	ldr	r3, [r7, #12]
	cmp	r3, #16
	ble	.L218
.LBE31:
	.loc 1 882 0 is_stmt 1
	adds	r7, r7, #16
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L220:
	.align	2
.L219:
	.word	bird
.LFE144:
	.size	drawbird, .-drawbird
	.section	.text.drawpipe,"ax",%progbits
	.align	2
	.global	drawpipe
	.thumb
	.thumb_func
	.type	drawpipe, %function
drawpipe:
.LFB145:
	.loc 1 885 0
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI95:
	sub	sp, sp, #8
.LCFI96:
	add	r7, sp, #0
.LCFI97:
	str	r0, [r7, #4]
	str	r1, [r7]
	.loc 1 887 0
	ldr	r3, [r7, #4]
	subs	r1, r3, #5
	ldr	r3, [r7, #4]
	adds	r2, r3, #5
	ldr	r3, [r7]
	subs	r3, r3, #20
	mov	r0, r1
	movs	r1, #0
	bl	setrectangle
	.loc 1 888 0
	ldr	r3, [r7, #4]
	subs	r0, r3, #6
	ldr	r3, [r7]
	sub	r1, r3, #19
	ldr	r3, [r7, #4]
	adds	r2, r3, #6
	ldr	r3, [r7]
	subs	r3, r3, #14
	bl	setrectangle
	.loc 1 889 0
	ldr	r3, [r7, #4]
	subs	r1, r3, #5
	ldr	r3, [r7]
	add	r2, r3, #20
	ldr	r3, [r7, #4]
	adds	r3, r3, #5
	mov	r0, r1
	mov	r1, r2
	mov	r2, r3
	movs	r3, #63
	bl	setrectangle
	.loc 1 890 0
	ldr	r3, [r7, #4]
	subs	r0, r3, #6
	ldr	r3, [r7]
	add	r1, r3, #14
	ldr	r3, [r7, #4]
	adds	r2, r3, #6
	ldr	r3, [r7]
	adds	r3, r3, #19
	bl	setrectangle
	.loc 1 892 0
	adds	r7, r7, #8
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.LFE145:
	.size	drawpipe, .-drawpipe
	.section	.text.tick,"ax",%progbits
	.align	2
	.global	tick
	.thumb
	.thumb_func
	.type	tick, %function
tick:
.LFB146:
	.loc 1 895 0
	@ args = 0, pretend = 0, frame = 24
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI98:
	sub	sp, sp, #24
.LCFI99:
	add	r7, sp, #0
.LCFI100:
	.loc 1 896 0
	ldr	r3, .L249
	ldrd	r0, [r3]
	mov	r2, #0
	mov	r3, #131072
	and	r2, r2, r0
	and	r3, r3, r1
	orrs	r1, r2, r3
	beq	.L223
.LBB32:
	.loc 1 898 0
	bl	game_over
.L223:
.LBE32:
	.loc 1 900 0
	ldr	r3, .L249
	ldrd	r0, [r3]
	mov	r2, #512
	mov	r3, #0
	and	r2, r2, r0
	and	r3, r3, r1
	orrs	ip, r2, r3
	beq	.L224
.LBB33:
	.loc 1 902 0
	bl	cheat
.L224:
.LBE33:
	.loc 1 906 0
	ldr	r3, .L249+4
	ldr	r1, [r3]
	ldr	r3, .L249+8
	smull	r2, r3, r3, r1
	asrs	r2, r3, #1
	asrs	r3, r1, #31
	subs	r2, r2, r3
	mov	r3, r2
	lsls	r3, r3, #2
	add	r3, r3, r2
	subs	r2, r1, r3
	cmp	r2, #0
	beq	.L225
	.loc 1 906 0 is_stmt 0 discriminator 1
	ldr	r3, .L249+4
	ldr	r3, [r3]
	cmp	r3, #2
	ble	.L225
	ldr	r3, .L249+4
	ldr	r2, [r3]
	ldr	r3, .L249+12
	ldr	r3, [r3]
	cmp	r2, r3
	beq	.L225
	ldr	r3, .L249+16
	ldr	r3, [r3]
	cmp	r3, #79
	bgt	.L225
	.loc 1 908 0 is_stmt 1
	ldr	r3, .L249+16
	ldr	r3, [r3]
	adds	r2, r3, #1
	ldr	r3, .L249+16
	str	r2, [r3]
	.loc 1 909 0
	ldr	r3, .L249+4
	ldr	r2, [r3]
	ldr	r3, .L249+12
	str	r2, [r3]
.L225:
	.loc 1 911 0
	ldr	r3, .L249+20
	ldrh	r3, [r3]
	adds	r3, r3, #1
	uxth	r2, r3
	ldr	r3, .L249+20
	strh	r2, [r3]	@ movhi
	.loc 1 912 0
	ldr	r3, .L249+20
	ldrh	r2, [r3]
	ldr	r3, .L249+24
	umull	ip, r3, r3, r2
	lsrs	r1, r3, #2
	mov	r3, r1
	lsls	r3, r3, #2
	add	r3, r3, r1
	subs	r3, r2, r3
	uxth	r3, r3
	cmp	r3, #0
	beq	.L226
	.loc 1 914 0
	ldr	r3, .L249+20
	ldrh	r3, [r3]
	and	r3, r3, #1
	uxth	r3, r3
	cmp	r3, #0
	beq	.L227
.LBB34:
	.loc 1 916 0
	movs	r3, #0
	str	r3, [r7, #20]
	b	.L228
.L229:
	.loc 1 917 0 discriminator 2
	ldr	r3, .L249+28
	ldr	r2, [r7, #20]
	ldrh	r1, [r3, r2, lsl #1]
	ldr	r3, .L249+32
	ldr	r2, [r7, #20]
	strh	r1, [r3, r2, lsl #1]	@ movhi
	.loc 1 916 0 discriminator 2
	ldr	r3, [r7, #20]
	adds	r3, r3, #1
	str	r3, [r7, #20]
.L228:
	.loc 1 916 0 is_stmt 0 discriminator 1
	ldr	r3, [r7, #20]
	cmp	r3, #16
	ble	.L229
.LBE34:
	b	.L226
.L227:
.LBB35:
	.loc 1 921 0 is_stmt 1
	movs	r3, #0
	str	r3, [r7, #16]
	b	.L230
.L231:
	.loc 1 922 0 discriminator 2
	ldr	r3, .L249+36
	ldr	r2, [r7, #16]
	ldrh	r1, [r3, r2, lsl #1]
	ldr	r3, .L249+32
	ldr	r2, [r7, #16]
	strh	r1, [r3, r2, lsl #1]	@ movhi
	.loc 1 921 0 discriminator 2
	ldr	r3, [r7, #16]
	adds	r3, r3, #1
	str	r3, [r7, #16]
.L230:
	.loc 1 921 0 is_stmt 0 discriminator 1
	ldr	r3, [r7, #16]
	cmp	r3, #16
	ble	.L231
.L226:
.LBE35:
	.loc 1 926 0 is_stmt 1
	ldr	r3, .L249+40
	ldr	r3, [r3]
	cmp	r3, #0
	bne	.L232
.LBB36:
	.loc 1 928 0
	movs	r3, #0
	str	r3, [r7, #12]
	b	.L233
.L235:
	.loc 1 930 0
	ldr	r3, .L249+44
	ldr	r2, [r7, #12]
	ldr	r2, [r3, r2, lsl #3]
	ldr	r3, .L249+16
	ldr	r3, [r3]
	subs	r1, r2, r3
	ldr	r3, .L249+44
	ldr	r2, [r7, #12]
	str	r1, [r3, r2, lsl #3]
	.loc 1 931 0
	ldr	r3, .L249+44
	ldr	r2, [r7, #12]
	ldr	r3, [r3, r2, lsl #3]
	cmn	r3, #129
	bge	.L234
.LBB37:
	.loc 1 933 0
	ldr	r3, .L249+4
	ldr	r3, [r3]
	adds	r2, r3, #1
	ldr	r3, .L249+4
	str	r2, [r3]
	.loc 1 934 0
	ldr	r3, .L249+44
	ldr	r2, [r7, #12]
	movs	r1, #110
	str	r1, [r3, r2, lsl #3]
	.loc 1 935 0
	bl	rand
	mov	r1, r0
	ldr	r3, .L249+48
	smull	r2, r3, r3, r1
	asrs	r2, r3, #4
	asrs	r3, r1, #31
	subs	r2, r2, r3
	mov	r3, r2
	lsls	r3, r3, #4
	add	r3, r3, r2
	lsls	r3, r3, #1
	subs	r2, r1, r3
	adds	r2, r2, #15
	ldr	r1, .L249+44
	ldr	r3, [r7, #12]
	lsls	r3, r3, #3
	add	r3, r3, r1
	str	r2, [r3, #4]
.L234:
.LBE37:
	.loc 1 928 0
	ldr	r3, [r7, #12]
	adds	r3, r3, #1
	str	r3, [r7, #12]
.L233:
	.loc 1 928 0 is_stmt 0 discriminator 1
	ldr	r3, [r7, #12]
	cmp	r3, #2
	ble	.L235
.L232:
.LBE36:
	.loc 1 939 0 is_stmt 1
	ldr	r3, .L249+40
	ldr	r3, [r3]
	cmp	r3, #0
	beq	.L236
	.loc 1 941 0
	ldr	r3, .L249+52
	ldr	r3, [r3]
	adds	r2, r3, #4
	ldr	r3, .L249+52
	str	r2, [r3]
	b	.L237
.L236:
	.loc 1 945 0
	ldr	r3, .L249
	ldrd	r2, [r3]
	cmp	r3, #8388608
	it eq
	cmpeq	r2, #0
	bne	.L238
	.loc 1 945 0 is_stmt 0 discriminator 1
	ldr	r3, .L249+56
	ldr	r3, [r3]
	cmp	r3, #0
	bne	.L238
	.loc 1 947 0 is_stmt 1
	ldr	r3, .L249+56
	movs	r2, #1
	str	r2, [r3]
	.loc 1 948 0
	ldr	r3, .L249+52
	ldr	r3, [r3]
	cmp	r3, #0
	blt	.L239
	.loc 1 949 0
	ldr	r3, .L249+52
	ldr	r3, [r3]
	sub	r2, r3, #14
	ldr	r3, .L249+52
	str	r2, [r3]
.L239:
.LBB38:
	.loc 1 950 0
	movs	r3, #0
	str	r3, [r7, #8]
	b	.L240
.L241:
	.loc 1 952 0 discriminator 2
	ldr	r3, [r7, #8]
	ldr	r2, .L249+60
	smull	ip, r2, r2, r3
	asrs	r3, r3, #31
	subs	r0, r2, r3
	ldr	r1, [r7, #8]
	ldr	r3, .L249+60
	smull	ip, r2, r3, r1
	asrs	r3, r1, #31
	subs	r2, r2, r3
	mov	r3, r2
	lsls	r3, r3, #1
	add	r3, r3, r2
	lsls	r3, r3, #1
	subs	r2, r1, r3
	ldr	r1, .L249+64
	mov	r3, r0
	lsls	r3, r3, #1
	add	r3, r3, r0
	lsls	r3, r3, #1
	add	r3, r3, r2
	mvn	r2, #-16777216
	str	r2, [r1, r3, lsl #2]
	.loc 1 950 0 discriminator 2
	ldr	r3, [r7, #8]
	adds	r3, r3, #1
	str	r3, [r7, #8]
.L240:
	.loc 1 950 0 is_stmt 0 discriminator 1
	ldr	r3, [r7, #8]
	cmp	r3, #35
	ble	.L241
.LBE38:
	.loc 1 954 0 is_stmt 1
	bl	WS2812_update
	b	.L237
.L238:
	.loc 1 958 0
	ldr	r3, .L249
	ldrd	r2, [r3]
	cmp	r3, #8388608
	it eq
	cmpeq	r2, #0
	beq	.L242
	.loc 1 959 0
	ldr	r3, .L249+56
	movs	r2, #0
	str	r2, [r3]
.L242:
	.loc 1 961 0
	ldr	r3, .L249+52
	ldr	r3, [r3]
	adds	r2, r3, #1
	ldr	r3, .L249+52
	str	r2, [r3]
.LBB39:
	.loc 1 962 0
	movs	r3, #0
	str	r3, [r7, #4]
	b	.L243
.L250:
	.align	2
.L249:
	.word	key
	.word	score
	.word	1717986919
	.word	lastscore
	.word	speed
	.word	gamecounter
	.word	-858993459
	.word	bird_1
	.word	bird
	.word	bird_2
	.word	is_bird_dead
	.word	pipebuffer
	.word	2021161081
	.word	birdy
	.word	lastpressed
	.word	715827883
	.word	matrix
.L244:
	.loc 1 964 0 discriminator 2
	ldr	r3, [r7, #4]
	ldr	r2, .L251
	smull	r1, r2, r2, r3
	asrs	r3, r3, #31
	subs	r0, r2, r3
	ldr	r1, [r7, #4]
	ldr	r3, .L251
	smull	ip, r2, r3, r1
	asrs	r3, r1, #31
	subs	r2, r2, r3
	mov	r3, r2
	lsls	r3, r3, #1
	add	r3, r3, r2
	lsls	r3, r3, #1
	subs	r2, r1, r3
	ldr	r1, .L251+4
	mov	r3, r0
	lsls	r3, r3, #1
	add	r3, r3, r0
	lsls	r3, r3, #1
	add	r3, r3, r2
	movs	r2, #0
	str	r2, [r1, r3, lsl #2]
	.loc 1 962 0 discriminator 2
	ldr	r3, [r7, #4]
	adds	r3, r3, #1
	str	r3, [r7, #4]
.L243:
	.loc 1 962 0 is_stmt 0 discriminator 1
	ldr	r3, [r7, #4]
	cmp	r3, #35
	ble	.L244
.LBE39:
	.loc 1 966 0 is_stmt 1
	bl	WS2812_update
.L237:
	.loc 1 969 0
	ldr	r3, .L251+8
	ldr	r3, [r3]
	cmp	r3, #59
	ble	.L245
.LBB40:
	.loc 1 971 0
	bl	game_over
.L245:
.LBE40:
	.loc 1 973 0
	ldr	r3, .L251+12
	ldr	r3, [r3]
	cmp	r3, #29
	bgt	.L246
	.loc 1 973 0 is_stmt 0 discriminator 1
	ldr	r3, .L251+12
	ldr	r3, [r3]
	cmp	r3, #0
	blt	.L246
	ldr	r3, .L251+12
	ldr	r3, [r3, #4]
	sub	r2, r3, #20
	ldr	r3, .L251+8
	ldr	r3, [r3]
	cmp	r2, r3
	ite	le
	movle	r3, #0
	movgt	r3, #1
	uxtb	r2, r3
	ldr	r3, .L251+12
	ldr	r3, [r3, #4]
	adds	r1, r3, #3
	ldr	r3, .L251+8
	ldr	r3, [r3]
	cmp	r1, r3
	ite	ge
	movge	r3, #0
	movlt	r3, #1
	uxtb	r3, r3
	orrs	r3, r3, r2
	uxtb	r3, r3
	cmp	r3, #0
	beq	.L246
	.loc 1 975 0 is_stmt 1
	ldr	r3, .L251+16
	movs	r2, #1
	str	r2, [r3]
.L246:
	.loc 1 977 0
	ldr	r3, .L251+12
	ldr	r3, [r3, #8]
	cmp	r3, #29
	bgt	.L247
	.loc 1 977 0 is_stmt 0 discriminator 1
	ldr	r3, .L251+12
	ldr	r3, [r3, #8]
	cmp	r3, #0
	blt	.L247
	ldr	r3, .L251+12
	ldr	r3, [r3, #12]
	sub	r2, r3, #20
	ldr	r3, .L251+8
	ldr	r3, [r3]
	cmp	r2, r3
	ite	le
	movle	r3, #0
	movgt	r3, #1
	uxtb	r2, r3
	ldr	r3, .L251+12
	ldr	r3, [r3, #12]
	adds	r1, r3, #3
	ldr	r3, .L251+8
	ldr	r3, [r3]
	cmp	r1, r3
	ite	ge
	movge	r3, #0
	movlt	r3, #1
	uxtb	r3, r3
	orrs	r3, r3, r2
	uxtb	r3, r3
	cmp	r3, #0
	beq	.L247
	.loc 1 979 0 is_stmt 1
	ldr	r3, .L251+16
	movs	r2, #1
	str	r2, [r3]
.L247:
	.loc 1 981 0
	ldr	r3, .L251+12
	ldr	r3, [r3, #16]
	cmp	r3, #29
	bgt	.L222
	.loc 1 981 0 is_stmt 0 discriminator 1
	ldr	r3, .L251+12
	ldr	r3, [r3, #16]
	cmp	r3, #0
	blt	.L222
	ldr	r3, .L251+12
	ldr	r3, [r3, #20]
	sub	r2, r3, #20
	ldr	r3, .L251+8
	ldr	r3, [r3]
	cmp	r2, r3
	ite	le
	movle	r3, #0
	movgt	r3, #1
	uxtb	r2, r3
	ldr	r3, .L251+12
	ldr	r3, [r3, #20]
	adds	r1, r3, #3
	ldr	r3, .L251+8
	ldr	r3, [r3]
	cmp	r1, r3
	ite	ge
	movge	r3, #0
	movlt	r3, #1
	uxtb	r3, r3
	orrs	r3, r3, r2
	uxtb	r3, r3
	cmp	r3, #0
	beq	.L222
	.loc 1 983 0 is_stmt 1
	ldr	r3, .L251+16
	movs	r2, #1
	str	r2, [r3]
.L222:
	.loc 1 986 0
	adds	r7, r7, #24
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L252:
	.align	2
.L251:
	.word	715827883
	.word	matrix
	.word	birdy
	.word	pipebuffer
	.word	is_bird_dead
.LFE146:
	.size	tick, .-tick
	.section	.text.cheat,"ax",%progbits
	.align	2
	.global	cheat
	.thumb
	.thumb_func
	.type	cheat, %function
cheat:
.LFB147:
	.loc 1 989 0
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	@ link register save eliminated.
	push	{r7}
.LCFI101:
	add	r7, sp, #0
.LCFI102:
	.loc 1 990 0
	ldr	r3, .L257
	ldr	r3, [r3]
	cmp	r3, #69
	bgt	.L254
	.loc 1 990 0 is_stmt 0 discriminator 1
	ldr	r3, .L257
	ldr	r3, [r3]
	cmp	r3, #9
	ble	.L254
	.loc 1 992 0 is_stmt 1
	ldr	r3, .L257
	ldr	r3, [r3, #4]
	sub	r2, r3, #8
	ldr	r3, .L257+4
	str	r2, [r3]
.L254:
	.loc 1 994 0
	ldr	r3, .L257
	ldr	r3, [r3, #8]
	cmp	r3, #69
	bgt	.L255
	.loc 1 994 0 is_stmt 0 discriminator 1
	ldr	r3, .L257
	ldr	r3, [r3, #8]
	cmp	r3, #9
	ble	.L255
	.loc 1 996 0 is_stmt 1
	ldr	r3, .L257
	ldr	r3, [r3, #12]
	sub	r2, r3, #8
	ldr	r3, .L257+4
	str	r2, [r3]
.L255:
	.loc 1 998 0
	ldr	r3, .L257
	ldr	r3, [r3, #16]
	cmp	r3, #69
	bgt	.L253
	.loc 1 998 0 is_stmt 0 discriminator 1
	ldr	r3, .L257
	ldr	r3, [r3, #16]
	cmp	r3, #9
	ble	.L253
	.loc 1 1000 0 is_stmt 1
	ldr	r3, .L257
	ldr	r3, [r3, #20]
	sub	r2, r3, #8
	ldr	r3, .L257+4
	str	r2, [r3]
.L253:
	.loc 1 1002 0
	mov	sp, r7
	@ sp needed
	ldr	r7, [sp], #4
	bx	lr
.L258:
	.align	2
.L257:
	.word	pipebuffer
	.word	birdy
.LFE147:
	.size	cheat, .-cheat
	.section	.text.game_over,"ax",%progbits
	.align	2
	.global	game_over
	.thumb
	.thumb_func
	.type	game_over, %function
game_over:
.LFB148:
	.loc 1 1005 0
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI103:
	add	r7, sp, #0
.LCFI104:
	.loc 1 1006 0
	bl	drawscore
	.loc 1 1007 0
	bl	update_lcd
.L262:
	.loc 1 1010 0
	movs	r0, #1
	bl	transfer_data
	.loc 1 1011 0
	ldr	r3, .L264
	ldrd	r2, [r3]
	cmp	r3, #8388608
	it eq
	cmpeq	r2, #0
	bne	.L260
	.loc 1 1012 0
	b	.L263
.L260:
	.loc 1 1013 0
	b	.L262
.L263:
	.loc 1 1015 0
	bl	initflappy
	.loc 1 1016 0
	pop	{r7, pc}
.L265:
	.align	2
.L264:
	.word	key
.LFE148:
	.size	game_over, .-game_over
	.section	.text.drawflappy,"ax",%progbits
	.align	2
	.global	drawflappy
	.thumb
	.thumb_func
	.type	drawflappy, %function
drawflappy:
.LFB149:
	.loc 1 1018 0
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI105:
	sub	sp, sp, #8
.LCFI106:
	add	r7, sp, #0
.LCFI107:
.LBB41:
	.loc 1 1019 0
	movs	r3, #0
	str	r3, [r7, #4]
	b	.L267
.L268:
	.loc 1 1021 0 discriminator 2
	ldr	r3, .L269
	ldr	r2, [r7, #4]
	ldr	r2, [r3, r2, lsl #3]
	ldr	r1, .L269
	ldr	r3, [r7, #4]
	lsls	r3, r3, #3
	add	r3, r3, r1
	ldr	r3, [r3, #4]
	mov	r0, r2
	mov	r1, r3
	bl	drawpipe
	.loc 1 1019 0 discriminator 2
	ldr	r3, [r7, #4]
	adds	r3, r3, #1
	str	r3, [r7, #4]
.L267:
	.loc 1 1019 0 is_stmt 0 discriminator 1
	ldr	r3, [r7, #4]
	cmp	r3, #2
	ble	.L268
.LBE41:
	.loc 1 1023 0 is_stmt 1
	ldr	r3, .L269+4
	ldr	r3, [r3]
	movs	r0, #10
	mov	r1, r3
	bl	drawbird
	.loc 1 1024 0
	adds	r7, r7, #8
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L270:
	.align	2
.L269:
	.word	pipebuffer
	.word	birdy
.LFE149:
	.size	drawflappy, .-drawflappy
	.section	.text.initflappy,"ax",%progbits
	.align	2
	.global	initflappy
	.thumb
	.thumb_func
	.type	initflappy, %function
initflappy:
.LFB150:
	.loc 1 1026 0
	@ args = 0, pretend = 0, frame = 24
	@ frame_needed = 1, uses_anonymous_args = 0
	@ link register save eliminated.
	push	{r7}
.LCFI108:
	sub	sp, sp, #28
.LCFI109:
	add	r7, sp, #0
.LCFI110:
	.loc 1 1027 0
	ldr	r3, .L284
	movs	r2, #1
	str	r2, [r3]
	.loc 1 1028 0
	ldr	r3, .L284+4
	movs	r2, #1
	str	r2, [r3]
	.loc 1 1029 0
	ldr	r3, .L284+8
	ldr	r3, [r3]
	cmp	r3, #0
	bne	.L272
	.loc 1 1031 0
	ldr	r3, .L284+8
	movs	r2, #1
	str	r2, [r3]
.LBB42:
	.loc 1 1032 0
	movs	r3, #0
	str	r3, [r7, #20]
	b	.L273
.L274:
	.loc 1 1033 0 discriminator 2
	ldr	r3, .L284+12
	ldr	r2, [r7, #20]
	ldrh	r1, [r3, r2, lsl #1]
	ldr	r3, .L284+16
	ldr	r2, [r7, #20]
	strh	r1, [r3, r2, lsl #1]	@ movhi
	.loc 1 1032 0 discriminator 2
	ldr	r3, [r7, #20]
	adds	r3, r3, #1
	str	r3, [r7, #20]
.L273:
	.loc 1 1032 0 is_stmt 0 discriminator 1
	ldr	r3, [r7, #20]
	cmp	r3, #16
	ble	.L274
.LBE42:
.LBB43:
	.loc 1 1034 0 is_stmt 1
	movs	r3, #0
	str	r3, [r7, #16]
	b	.L275
.L276:
	.loc 1 1035 0 discriminator 2
	ldr	r3, .L284+20
	ldr	r2, [r7, #16]
	ldrh	r1, [r3, r2, lsl #1]
	ldr	r3, .L284+24
	ldr	r2, [r7, #16]
	strh	r1, [r3, r2, lsl #1]	@ movhi
	.loc 1 1034 0 discriminator 2
	ldr	r3, [r7, #16]
	adds	r3, r3, #1
	str	r3, [r7, #16]
.L275:
	.loc 1 1034 0 is_stmt 0 discriminator 1
	ldr	r3, [r7, #16]
	cmp	r3, #16
	ble	.L276
.LBE43:
	b	.L277
.L272:
	.loc 1 1039 0 is_stmt 1
	ldr	r3, .L284+8
	movs	r2, #0
	str	r2, [r3]
.LBB44:
	.loc 1 1040 0
	movs	r3, #0
	str	r3, [r7, #12]
	b	.L278
.L279:
	.loc 1 1041 0 discriminator 2
	ldr	r3, .L284+28
	ldr	r2, [r7, #12]
	ldrh	r1, [r3, r2, lsl #1]
	ldr	r3, .L284+16
	ldr	r2, [r7, #12]
	strh	r1, [r3, r2, lsl #1]	@ movhi
	.loc 1 1040 0 discriminator 2
	ldr	r3, [r7, #12]
	adds	r3, r3, #1
	str	r3, [r7, #12]
.L278:
	.loc 1 1040 0 is_stmt 0 discriminator 1
	ldr	r3, [r7, #12]
	cmp	r3, #16
	ble	.L279
.LBE44:
.LBB45:
	.loc 1 1042 0 is_stmt 1
	movs	r3, #0
	str	r3, [r7, #8]
	b	.L280
.L281:
	.loc 1 1043 0 discriminator 2
	ldr	r3, .L284+32
	ldr	r2, [r7, #8]
	ldrh	r1, [r3, r2, lsl #1]
	ldr	r3, .L284+24
	ldr	r2, [r7, #8]
	strh	r1, [r3, r2, lsl #1]	@ movhi
	.loc 1 1042 0 discriminator 2
	ldr	r3, [r7, #8]
	adds	r3, r3, #1
	str	r3, [r7, #8]
.L280:
	.loc 1 1042 0 is_stmt 0 discriminator 1
	ldr	r3, [r7, #8]
	cmp	r3, #16
	ble	.L281
.L277:
.LBE45:
	.loc 1 1045 0 is_stmt 1
	ldr	r3, .L284+36
	movs	r2, #0
	str	r2, [r3]
	.loc 1 1046 0
	ldr	r3, .L284+40
	movs	r2, #0
	str	r2, [r3]
.LBB46:
	.loc 1 1047 0
	movs	r3, #0
	str	r3, [r7, #4]
	b	.L282
.L283:
	.loc 1 1048 0 discriminator 2
	ldr	r2, .L284+44
	ldr	r3, [r7, #4]
	lsls	r3, r3, #3
	add	r3, r3, r2
	movs	r2, #30
	str	r2, [r3, #4]
	.loc 1 1047 0 discriminator 2
	ldr	r3, [r7, #4]
	adds	r3, r3, #1
	str	r3, [r7, #4]
.L282:
	.loc 1 1047 0 is_stmt 0 discriminator 1
	ldr	r3, [r7, #4]
	cmp	r3, #2
	ble	.L283
.LBE46:
	.loc 1 1050 0 is_stmt 1
	ldr	r3, .L284+44
	movs	r2, #130
	str	r2, [r3]
	.loc 1 1051 0
	ldr	r3, .L284+44
	movs	r2, #210
	str	r2, [r3, #8]
	.loc 1 1052 0
	ldr	r3, .L284+44
	mov	r2, #290
	str	r2, [r3, #16]
	.loc 1 1053 0
	adds	r7, r7, #28
	mov	sp, r7
	@ sp needed
	ldr	r7, [sp], #4
	bx	lr
.L285:
	.align	2
.L284:
	.word	speed
	.word	score
	.word	playermodel
	.word	bird_sprite_1
	.word	bird_1
	.word	bird_sprite_2
	.word	bird_2
	.word	mu_sprite_1
	.word	mu_sprite_2
	.word	is_bird_dead
	.word	birdy
	.word	pipebuffer
.LFE150:
	.size	initflappy, .-initflappy
	.section	.text.calibrate_clock,"ax",%progbits
	.align	2
	.global	calibrate_clock
	.thumb
	.thumb_func
	.type	calibrate_clock, %function
calibrate_clock:
.LFB151:
	.loc 1 1055 0
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI111:
	add	r7, sp, #0
.LCFI112:
	.loc 1 1056 0
	ldr	r3, .L291
	movs	r2, #0
	str	r2, [r3]
	.loc 1 1057 0
	nop
.L287:
	.loc 1 1057 0 is_stmt 0 discriminator 1
	ldr	r0, .L291+4
	movs	r1, #2
	bl	GPIO_ReadInputDataBit
	mov	r3, r0
	cmp	r3, #0
	bne	.L287
	.loc 1 1058 0 is_stmt 1
	nop
.L288:
	.loc 1 1058 0 is_stmt 0 discriminator 1
	ldr	r0, .L291+4
	movs	r1, #2
	bl	GPIO_ReadInputDataBit
	mov	r3, r0
	cmp	r3, #0
	beq	.L288
	.loc 1 1059 0 is_stmt 1
	b	.L289
.L290:
	.loc 1 1061 0
	ldr	r3, .L291
	ldr	r3, [r3]
	adds	r2, r3, #1
	ldr	r3, .L291
	str	r2, [r3]
.L289:
	.loc 1 1059 0 discriminator 1
	ldr	r0, .L291+4
	movs	r1, #2
	bl	GPIO_ReadInputDataBit
	mov	r3, r0
	cmp	r3, #0
	bne	.L290
	.loc 1 1063 0
	pop	{r7, pc}
.L292:
	.align	2
.L291:
	.word	calibrate
	.word	1073876992
.LFE151:
	.size	calibrate_clock, .-calibrate_clock
	.section	.text.LINK_get_backup,"ax",%progbits
	.align	2
	.global	LINK_get_backup
	.thumb
	.thumb_func
	.type	LINK_get_backup, %function
LINK_get_backup:
.LFB152:
	.loc 1 1066 0
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI113:
	sub	sp, sp, #16
.LCFI114:
	add	r7, sp, #0
.LCFI115:
	.loc 1 1068 0
	movs	r3, #0
	str	r3, [r7, #8]
	.loc 1 1070 0
	ldr	r0, .L302
	movs	r1, #17
	bl	LINK_send_array
.LBB47:
	.loc 1 1071 0
	movs	r3, #0
	str	r3, [r7, #4]
	b	.L294
.L295:
	.loc 1 1073 0 discriminator 2
	bl	LINK_wait_for_byte
	.loc 1 1071 0 discriminator 2
	ldr	r3, [r7, #4]
	adds	r3, r3, #1
	str	r3, [r7, #4]
.L294:
	.loc 1 1071 0 is_stmt 0 discriminator 1
	ldr	r3, [r7, #4]
	cmp	r3, #18
	ble	.L295
.LBE47:
	.loc 1 1075 0 is_stmt 1
	movs	r0, #3
	bl	LINK_send_byte
	.loc 1 1076 0
	movs	r0, #86
	bl	LINK_send_byte
	.loc 1 1077 0
	movs	r0, #0
	bl	LINK_send_byte
	.loc 1 1078 0
	movs	r0, #0
	bl	LINK_send_byte
	.loc 1 1080 0
	movs	r0, #3
	bl	LINK_send_byte
	.loc 1 1081 0
	movs	r0, #9
	bl	LINK_send_byte
	.loc 1 1082 0
	movs	r0, #0
	bl	LINK_send_byte
	.loc 1 1083 0
	movs	r0, #0
	bl	LINK_send_byte
	.loc 1 1084 0
	movs	r3, #0
	str	r3, [r7, #12]
	.loc 1 1085 0
	ldr	r2, .L302+4
	ldr	r3, [r7, #8]
	add	r3, r3, r2
	movs	r2, #83
	strb	r2, [r3]
	.loc 1 1086 0
	ldr	r3, [r7, #8]
	adds	r3, r3, #1
	str	r3, [r7, #8]
	.loc 1 1087 0
	ldr	r2, .L302+4
	ldr	r3, [r7, #8]
	add	r3, r3, r2
	movs	r2, #101
	strb	r2, [r3]
	.loc 1 1088 0
	ldr	r3, [r7, #8]
	adds	r3, r3, #1
	str	r3, [r7, #8]
	.loc 1 1089 0
	ldr	r2, .L302+4
	ldr	r3, [r7, #8]
	add	r3, r3, r2
	movs	r2, #99
	strb	r2, [r3]
	.loc 1 1090 0
	ldr	r3, [r7, #8]
	adds	r3, r3, #1
	str	r3, [r7, #8]
	.loc 1 1091 0
	ldr	r2, .L302+4
	ldr	r3, [r7, #8]
	add	r3, r3, r2
	movs	r2, #116
	strb	r2, [r3]
	.loc 1 1092 0
	ldr	r3, [r7, #8]
	adds	r3, r3, #1
	str	r3, [r7, #8]
	.loc 1 1093 0
	ldr	r2, .L302+4
	ldr	r3, [r7, #8]
	add	r3, r3, r2
	movs	r2, #105
	strb	r2, [r3]
	.loc 1 1094 0
	ldr	r3, [r7, #8]
	adds	r3, r3, #1
	str	r3, [r7, #8]
	.loc 1 1095 0
	ldr	r2, .L302+4
	ldr	r3, [r7, #8]
	add	r3, r3, r2
	movs	r2, #111
	strb	r2, [r3]
	.loc 1 1096 0
	ldr	r3, [r7, #8]
	adds	r3, r3, #1
	str	r3, [r7, #8]
	.loc 1 1097 0
	ldr	r2, .L302+4
	ldr	r3, [r7, #8]
	add	r3, r3, r2
	movs	r2, #110
	strb	r2, [r3]
	.loc 1 1098 0
	ldr	r3, [r7, #8]
	adds	r3, r3, #1
	str	r3, [r7, #8]
	.loc 1 1099 0
	ldr	r2, .L302+4
	ldr	r3, [r7, #8]
	add	r3, r3, r2
	movs	r2, #32
	strb	r2, [r3]
	.loc 1 1100 0
	ldr	r3, [r7, #8]
	adds	r3, r3, #1
	str	r3, [r7, #8]
	.loc 1 1101 0
	ldr	r2, .L302+4
	ldr	r3, [r7, #8]
	add	r3, r3, r2
	movs	r2, #49
	strb	r2, [r3]
	.loc 1 1102 0
	ldr	r3, [r7, #8]
	adds	r3, r3, #1
	str	r3, [r7, #8]
	.loc 1 1103 0
	ldr	r2, .L302+4
	ldr	r3, [r7, #8]
	add	r3, r3, r2
	movs	r2, #58
	strb	r2, [r3]
	.loc 1 1104 0
	ldr	r3, [r7, #8]
	adds	r3, r3, #1
	str	r3, [r7, #8]
	.loc 1 1105 0
	b	.L296
.L297:
	.loc 1 1107 0
	ldr	r3, [r7, #12]
	adds	r3, r3, #1
	str	r3, [r7, #12]
	.loc 1 1108 0
	bl	LINK_get_byte
	mov	r3, r0
	str	r3, [r7]
	.loc 1 1109 0
	ldr	r3, [r7]
	cmp	r3, #400
	beq	.L296
	.loc 1 1111 0
	ldr	r3, [r7]
	uxtb	r2, r3
	ldr	r1, .L302+4
	ldr	r3, [r7, #8]
	add	r3, r3, r1
	strb	r2, [r3]
	.loc 1 1112 0
	ldr	r3, [r7, #8]
	adds	r3, r3, #1
	str	r3, [r7, #8]
	.loc 1 1113 0
	movs	r3, #0
	str	r3, [r7, #12]
.L296:
	.loc 1 1105 0 discriminator 1
	ldr	r3, [r7, #12]
	cmp	r3, #1000
	blt	.L297
	.loc 1 1116 0
	movs	r0, #3
	bl	LINK_send_byte
	.loc 1 1117 0
	movs	r0, #86
	bl	LINK_send_byte
	.loc 1 1118 0
	movs	r0, #0
	bl	LINK_send_byte
	.loc 1 1119 0
	movs	r0, #0
	bl	LINK_send_byte
	.loc 1 1120 0
	movs	r3, #0
	str	r3, [r7, #12]
	.loc 1 1121 0
	ldr	r2, .L302+4
	ldr	r3, [r7, #8]
	add	r3, r3, r2
	movs	r2, #83
	strb	r2, [r3]
	.loc 1 1122 0
	ldr	r3, [r7, #8]
	adds	r3, r3, #1
	str	r3, [r7, #8]
	.loc 1 1123 0
	ldr	r2, .L302+4
	ldr	r3, [r7, #8]
	add	r3, r3, r2
	movs	r2, #101
	strb	r2, [r3]
	.loc 1 1124 0
	ldr	r3, [r7, #8]
	adds	r3, r3, #1
	str	r3, [r7, #8]
	.loc 1 1125 0
	ldr	r2, .L302+4
	ldr	r3, [r7, #8]
	add	r3, r3, r2
	movs	r2, #99
	strb	r2, [r3]
	.loc 1 1126 0
	ldr	r3, [r7, #8]
	adds	r3, r3, #1
	str	r3, [r7, #8]
	.loc 1 1127 0
	ldr	r2, .L302+4
	ldr	r3, [r7, #8]
	add	r3, r3, r2
	movs	r2, #116
	strb	r2, [r3]
	.loc 1 1128 0
	ldr	r3, [r7, #8]
	adds	r3, r3, #1
	str	r3, [r7, #8]
	.loc 1 1129 0
	ldr	r2, .L302+4
	ldr	r3, [r7, #8]
	add	r3, r3, r2
	movs	r2, #105
	strb	r2, [r3]
	.loc 1 1130 0
	ldr	r3, [r7, #8]
	adds	r3, r3, #1
	str	r3, [r7, #8]
	.loc 1 1131 0
	ldr	r2, .L302+4
	ldr	r3, [r7, #8]
	add	r3, r3, r2
	movs	r2, #111
	strb	r2, [r3]
	.loc 1 1132 0
	ldr	r3, [r7, #8]
	adds	r3, r3, #1
	str	r3, [r7, #8]
	.loc 1 1133 0
	ldr	r2, .L302+4
	ldr	r3, [r7, #8]
	add	r3, r3, r2
	movs	r2, #110
	strb	r2, [r3]
	.loc 1 1134 0
	ldr	r3, [r7, #8]
	adds	r3, r3, #1
	str	r3, [r7, #8]
	.loc 1 1135 0
	ldr	r2, .L302+4
	ldr	r3, [r7, #8]
	add	r3, r3, r2
	movs	r2, #32
	strb	r2, [r3]
	.loc 1 1136 0
	ldr	r3, [r7, #8]
	adds	r3, r3, #1
	str	r3, [r7, #8]
	.loc 1 1137 0
	ldr	r2, .L302+4
	ldr	r3, [r7, #8]
	add	r3, r3, r2
	movs	r2, #50
	strb	r2, [r3]
	.loc 1 1138 0
	ldr	r3, [r7, #8]
	adds	r3, r3, #1
	str	r3, [r7, #8]
	.loc 1 1139 0
	ldr	r2, .L302+4
	ldr	r3, [r7, #8]
	add	r3, r3, r2
	movs	r2, #58
	strb	r2, [r3]
	.loc 1 1140 0
	ldr	r3, [r7, #8]
	adds	r3, r3, #1
	str	r3, [r7, #8]
	.loc 1 1141 0
	b	.L298
.L303:
	.align	2
.L302:
	.word	request_backup_command
	.word	backup
.L299:
	.loc 1 1143 0
	ldr	r3, [r7, #12]
	adds	r3, r3, #1
	str	r3, [r7, #12]
	.loc 1 1144 0
	bl	LINK_get_byte
	mov	r3, r0
	str	r3, [r7]
	.loc 1 1145 0
	ldr	r3, [r7]
	cmp	r3, #400
	beq	.L298
	.loc 1 1147 0
	ldr	r3, [r7]
	uxtb	r2, r3
	ldr	r1, .L304
	ldr	r3, [r7, #8]
	add	r3, r3, r1
	strb	r2, [r3]
	.loc 1 1148 0
	ldr	r3, [r7, #8]
	adds	r3, r3, #1
	str	r3, [r7, #8]
	.loc 1 1149 0
	movs	r3, #0
	str	r3, [r7, #12]
.L298:
	.loc 1 1141 0 discriminator 1
	ldr	r3, [r7, #12]
	cmp	r3, #1000
	blt	.L299
	.loc 1 1152 0
	movs	r0, #3
	bl	LINK_send_byte
	.loc 1 1153 0
	movs	r0, #86
	bl	LINK_send_byte
	.loc 1 1154 0
	movs	r0, #0
	bl	LINK_send_byte
	.loc 1 1155 0
	movs	r0, #0
	bl	LINK_send_byte
	.loc 1 1156 0
	movs	r3, #0
	str	r3, [r7, #12]
	.loc 1 1157 0
	ldr	r2, .L304
	ldr	r3, [r7, #8]
	add	r3, r3, r2
	movs	r2, #83
	strb	r2, [r3]
	.loc 1 1158 0
	ldr	r3, [r7, #8]
	adds	r3, r3, #1
	str	r3, [r7, #8]
	.loc 1 1159 0
	ldr	r2, .L304
	ldr	r3, [r7, #8]
	add	r3, r3, r2
	movs	r2, #101
	strb	r2, [r3]
	.loc 1 1160 0
	ldr	r3, [r7, #8]
	adds	r3, r3, #1
	str	r3, [r7, #8]
	.loc 1 1161 0
	ldr	r2, .L304
	ldr	r3, [r7, #8]
	add	r3, r3, r2
	movs	r2, #99
	strb	r2, [r3]
	.loc 1 1162 0
	ldr	r3, [r7, #8]
	adds	r3, r3, #1
	str	r3, [r7, #8]
	.loc 1 1163 0
	ldr	r2, .L304
	ldr	r3, [r7, #8]
	add	r3, r3, r2
	movs	r2, #116
	strb	r2, [r3]
	.loc 1 1164 0
	ldr	r3, [r7, #8]
	adds	r3, r3, #1
	str	r3, [r7, #8]
	.loc 1 1165 0
	ldr	r2, .L304
	ldr	r3, [r7, #8]
	add	r3, r3, r2
	movs	r2, #105
	strb	r2, [r3]
	.loc 1 1166 0
	ldr	r3, [r7, #8]
	adds	r3, r3, #1
	str	r3, [r7, #8]
	.loc 1 1167 0
	ldr	r2, .L304
	ldr	r3, [r7, #8]
	add	r3, r3, r2
	movs	r2, #111
	strb	r2, [r3]
	.loc 1 1168 0
	ldr	r3, [r7, #8]
	adds	r3, r3, #1
	str	r3, [r7, #8]
	.loc 1 1169 0
	ldr	r2, .L304
	ldr	r3, [r7, #8]
	add	r3, r3, r2
	movs	r2, #110
	strb	r2, [r3]
	.loc 1 1170 0
	ldr	r3, [r7, #8]
	adds	r3, r3, #1
	str	r3, [r7, #8]
	.loc 1 1171 0
	ldr	r2, .L304
	ldr	r3, [r7, #8]
	add	r3, r3, r2
	movs	r2, #32
	strb	r2, [r3]
	.loc 1 1172 0
	ldr	r3, [r7, #8]
	adds	r3, r3, #1
	str	r3, [r7, #8]
	.loc 1 1173 0
	ldr	r2, .L304
	ldr	r3, [r7, #8]
	add	r3, r3, r2
	movs	r2, #51
	strb	r2, [r3]
	.loc 1 1174 0
	ldr	r3, [r7, #8]
	adds	r3, r3, #1
	str	r3, [r7, #8]
	.loc 1 1175 0
	ldr	r2, .L304
	ldr	r3, [r7, #8]
	add	r3, r3, r2
	movs	r2, #58
	strb	r2, [r3]
	.loc 1 1176 0
	ldr	r3, [r7, #8]
	adds	r3, r3, #1
	str	r3, [r7, #8]
	.loc 1 1177 0
	b	.L300
.L301:
	.loc 1 1179 0
	ldr	r3, [r7, #12]
	adds	r3, r3, #1
	str	r3, [r7, #12]
	.loc 1 1180 0
	bl	LINK_get_byte
	mov	r3, r0
	str	r3, [r7]
	.loc 1 1181 0
	ldr	r3, [r7]
	cmp	r3, #400
	beq	.L300
	.loc 1 1183 0
	ldr	r3, [r7]
	uxtb	r2, r3
	ldr	r1, .L304
	ldr	r3, [r7, #8]
	add	r3, r3, r1
	strb	r2, [r3]
	.loc 1 1184 0
	ldr	r3, [r7, #8]
	adds	r3, r3, #1
	str	r3, [r7, #8]
	.loc 1 1185 0
	movs	r3, #0
	str	r3, [r7, #12]
.L300:
	.loc 1 1177 0 discriminator 1
	ldr	r3, [r7, #12]
	cmp	r3, #1000
	blt	.L301
	.loc 1 1188 0
	movs	r0, #3
	bl	LINK_send_byte
	.loc 1 1189 0
	movs	r0, #86
	bl	LINK_send_byte
	.loc 1 1190 0
	movs	r0, #0
	bl	LINK_send_byte
	.loc 1 1191 0
	movs	r0, #0
	bl	LINK_send_byte
	.loc 1 1192 0
	adds	r7, r7, #16
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L305:
	.align	2
.L304:
	.word	backup
.LFE152:
	.size	LINK_get_backup, .-LINK_get_backup
	.section .rodata
	.align	2
.LC0:
	.byte	52
	.byte	52
	.byte	52
	.byte	52
	.byte	52
	.byte	52
	.byte	52
	.byte	52
	.byte	52
	.byte	52
	.byte	52
	.byte	52
	.byte	52
	.byte	52
	.byte	52
	.byte	53
	.byte	53
	.byte	53
	.byte	53
	.byte	53
	.byte	53
	.byte	53
	.byte	53
	.byte	53
	.byte	53
	.byte	53
	.align	2
.LC1:
	.byte	49
	.byte	50
	.byte	51
	.byte	52
	.byte	53
	.byte	54
	.byte	55
	.byte	56
	.byte	57
	.byte	65
	.byte	66
	.byte	67
	.byte	68
	.byte	69
	.byte	70
	.byte	48
	.byte	49
	.byte	50
	.byte	51
	.byte	52
	.byte	53
	.byte	54
	.byte	55
	.byte	56
	.byte	57
	.byte	65
	.section	.text.send_os,"ax",%progbits
	.align	2
	.global	send_os
	.thumb
	.thumb_func
	.type	send_os, %function
send_os:
.LFB153:
	.loc 1 1195 0
	@ args = 0, pretend = 0, frame = 80
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r4, r5, r7, lr}
.LCFI116:
	sub	sp, sp, #80
.LCFI117:
	add	r7, sp, #0
.LCFI118:
	.loc 1 1196 0
	movs	r0, #131
	bl	LINK_send_byte
	.loc 1 1197 0
	movs	r0, #86
	bl	LINK_send_byte
	.loc 1 1198 0
	movs	r0, #11
	bl	LINK_send_byte
	.loc 1 1199 0
	movs	r0, #0
	bl	LINK_send_byte
	.loc 1 1200 0
	movs	r0, #131
	bl	LINK_send_byte
	.loc 1 1201 0
	movs	r0, #9
	bl	LINK_send_byte
	.loc 1 1202 0
	movs	r0, #11
	bl	LINK_send_byte
	.loc 1 1203 0
	movs	r0, #0
	bl	LINK_send_byte
.LBB48:
	.loc 1 1205 0
	movs	r3, #0
	str	r3, [r7, #76]
	b	.L307
.L308:
	.loc 1 1206 0 discriminator 2
	ldr	r3, [r7, #76]
	add	r4, r3, #50
	bl	LINK_wait_for_byte
	mov	r3, r0
	mov	r2, r3
	ldr	r3, .L317
	strb	r2, [r3, r4]
	.loc 1 1205 0 discriminator 2
	ldr	r3, [r7, #76]
	adds	r3, r3, #1
	str	r3, [r7, #76]
.L307:
	.loc 1 1205 0 is_stmt 0 discriminator 1
	ldr	r3, [r7, #76]
	cmp	r3, #11
	ble	.L308
.LBE48:
	.loc 1 1208 0 is_stmt 1
	movs	r0, #3
	bl	LINK_send_byte
	.loc 1 1209 0
	movs	r0, #86
	bl	LINK_send_byte
	.loc 1 1210 0
	movs	r0, #0
	bl	LINK_send_byte
	.loc 1 1211 0
	movs	r0, #0
	bl	LINK_send_byte
.LBB49:
	.loc 1 1213 0
	movs	r3, #0
	str	r3, [r7, #72]
	b	.L309
.L310:
	.loc 1 1214 0 discriminator 2
	ldr	r3, [r7, #72]
	add	r4, r3, #70
	bl	LINK_wait_for_byte
	mov	r3, r0
	mov	r2, r3
	ldr	r3, .L317
	strb	r2, [r3, r4]
	.loc 1 1213 0 discriminator 2
	ldr	r3, [r7, #72]
	adds	r3, r3, #1
	str	r3, [r7, #72]
.L309:
	.loc 1 1213 0 is_stmt 0 discriminator 1
	ldr	r3, [r7, #72]
	cmp	r3, #3
	ble	.L310
.LBE49:
	.loc 1 1216 0 is_stmt 1
	movs	r0, #3
	bl	LINK_send_byte
	.loc 1 1217 0
	movs	r0, #86
	bl	LINK_send_byte
	.loc 1 1218 0
	movs	r0, #0
	bl	LINK_send_byte
	.loc 1 1219 0
	movs	r0, #0
	bl	LINK_send_byte
.LBB50:
	.loc 1 1221 0
	movs	r3, #1
	str	r3, [r7, #68]
	b	.L311
.L312:
	.loc 1 1223 0 discriminator 2
	ldr	r3, [r7, #68]
	adds	r3, r3, #2
	ldr	r1, .L317+4
	ldr	r2, [r7, #68]
	add	r2, r2, r1
	ldrb	r1, [r2]	@ zero_extendqisi2
	ldr	r2, .L317+8
	strb	r1, [r2, r3]
	.loc 1 1221 0 discriminator 2
	ldr	r3, [r7, #68]
	adds	r3, r3, #1
	str	r3, [r7, #68]
.L311:
	.loc 1 1221 0 is_stmt 0 discriminator 1
	ldr	r3, [r7, #68]
	cmp	r3, #8
	ble	.L312
.LBE50:
	.loc 1 1227 0 is_stmt 1
	ldr	r3, .L317+12
	add	r4, r7, #32
	mov	r5, r3
	ldr	r0, [r5]	@ unaligned
	ldr	r1, [r5, #4]	@ unaligned
	ldr	r2, [r5, #8]	@ unaligned
	ldr	r3, [r5, #12]	@ unaligned
	stmia	r4!, {r0, r1, r2, r3}
	ldr	r0, [r5, #16]	@ unaligned
	ldr	r1, [r5, #20]	@ unaligned
	stmia	r4!, {r0, r1}
	ldrh	r3, [r5, #24]	@ unaligned
	strh	r3, [r4]	@ unaligned
	.loc 1 1228 0
	ldr	r3, .L317+16
	adds	r4, r7, #4
	mov	r5, r3
	ldr	r0, [r5]	@ unaligned
	ldr	r1, [r5, #4]	@ unaligned
	ldr	r2, [r5, #8]	@ unaligned
	ldr	r3, [r5, #12]	@ unaligned
	stmia	r4!, {r0, r1, r2, r3}
	ldr	r0, [r5, #16]	@ unaligned
	ldr	r1, [r5, #20]	@ unaligned
	stmia	r4!, {r0, r1}
	ldrh	r3, [r5, #24]	@ unaligned
	strh	r3, [r4]	@ unaligned
	.loc 1 1251 0
	movs	r0, #201
	movs	r1, #11
	ldr	r2, .L317+8
	bl	LINK_send_command
	.loc 1 1253 0
	bl	LINK_wait_for_byte
	mov	r3, r0
	mov	r2, r3
	ldr	r3, .L317
	strb	r2, [r3]
	.loc 1 1254 0
	bl	LINK_wait_for_byte
	mov	r3, r0
	mov	r2, r3
	ldr	r3, .L317
	strb	r2, [r3, #1]
	.loc 1 1255 0
	bl	LINK_wait_for_byte
	mov	r3, r0
	mov	r2, r3
	ldr	r3, .L317
	strb	r2, [r3, #2]
	.loc 1 1256 0
	bl	LINK_wait_for_byte
	mov	r3, r0
	mov	r2, r3
	ldr	r3, .L317
	strb	r2, [r3, #3]
	.loc 1 1257 0
	bl	LINK_wait_for_byte
	mov	r3, r0
	mov	r2, r3
	ldr	r3, .L317
	strb	r2, [r3, #4]
	.loc 1 1258 0
	bl	LINK_wait_for_byte
	mov	r3, r0
	mov	r2, r3
	ldr	r3, .L317
	strb	r2, [r3, #5]
	.loc 1 1259 0
	bl	LINK_wait_for_byte
	mov	r3, r0
	mov	r2, r3
	ldr	r3, .L317
	strb	r2, [r3, #6]
	.loc 1 1260 0
	bl	LINK_wait_for_byte
	mov	r3, r0
	mov	r2, r3
	ldr	r3, .L317
	strb	r2, [r3, #7]
	.loc 1 1262 0
	movs	r0, #3
	bl	LINK_send_byte
	.loc 1 1263 0
	movs	r0, #86
	bl	LINK_send_byte
	.loc 1 1264 0
	movs	r0, #0
	bl	LINK_send_byte
	.loc 1 1265 0
	movs	r0, #0
	bl	LINK_send_byte
	.loc 1 1269 0
	mov	r3, #488
	strh	r3, [r7, #58]	@ movhi
	.loc 1 1270 0
	movs	r0, #3
	bl	LINK_send_byte
	.loc 1 1271 0
	movs	r0, #21
	bl	LINK_send_byte
	.loc 1 1272 0
	ldrh	r3, [r7, #58]	@ movhi
	uxtb	r3, r3
	mov	r0, r3
	bl	LINK_send_byte
	.loc 1 1273 0
	ldrh	r3, [r7, #58]
	lsrs	r3, r3, #8
	uxth	r3, r3
	uxtb	r3, r3
	mov	r0, r3
	bl	LINK_send_byte
	.loc 1 1276 0
	ldr	r0, .L317+20
	mov	r1, #488
	bl	LINK_send_array_with_checksum
	.loc 1 1280 0
	bl	LINK_wait_for_byte
	mov	r3, r0
	mov	r2, r3
	ldr	r3, .L317
	strb	r2, [r3, #10]
	.loc 1 1281 0
	bl	LINK_wait_for_byte
	mov	r3, r0
	mov	r2, r3
	ldr	r3, .L317
	strb	r2, [r3, #11]
	.loc 1 1282 0
	bl	LINK_wait_for_byte
	mov	r3, r0
	mov	r2, r3
	ldr	r3, .L317
	strb	r2, [r3, #12]
	.loc 1 1283 0
	bl	LINK_wait_for_byte
	mov	r3, r0
	mov	r2, r3
	ldr	r3, .L317
	strb	r2, [r3, #13]
	.loc 1 1285 0
	movs	r0, #3
	bl	LINK_send_byte
	.loc 1 1286 0
	movs	r0, #146
	bl	LINK_send_byte
	.loc 1 1287 0
	movs	r0, #0
	bl	LINK_send_byte
	.loc 1 1288 0
	movs	r0, #0
	bl	LINK_send_byte
	.loc 1 1290 0
	movw	r0, #65123
	bl	LINK_send_key
	.loc 1 1291 0
	movs	r0, #151
	bl	LINK_send_key
	.loc 1 1292 0
	movs	r0, #62
	bl	LINK_send_key
	.loc 1 1293 0
	movs	r0, #169
	bl	LINK_send_key
.LBB51:
	.loc 1 1294 0
	movs	r3, #0
	str	r3, [r7, #64]
	b	.L313
.L314:
	.loc 1 1295 0 discriminator 2
	movs	r0, #4
	bl	LINK_send_key
	.loc 1 1294 0 discriminator 2
	ldr	r3, [r7, #64]
	adds	r3, r3, #1
	str	r3, [r7, #64]
.L313:
	.loc 1 1294 0 is_stmt 0 discriminator 1
	ldr	r3, [r7, #64]
	cmp	r3, #13
	ble	.L314
.LBE51:
	.loc 1 1296 0 is_stmt 1
	movs	r0, #5
	bl	LINK_send_key
.LBB52:
	.loc 1 1298 0
	movs	r3, #1
	str	r3, [r7, #60]
	b	.L315
.L316:
	.loc 1 1299 0 discriminator 2
	ldr	r2, .L317+4
	ldr	r3, [r7, #60]
	add	r3, r3, r2
	ldrb	r3, [r3]	@ zero_extendqisi2
	adds	r3, r3, #89
	uxth	r3, r3
	mov	r0, r3
	bl	LINK_send_key
	.loc 1 1298 0 discriminator 2
	ldr	r3, [r7, #60]
	adds	r3, r3, #1
	str	r3, [r7, #60]
.L315:
	.loc 1 1298 0 is_stmt 0 discriminator 1
	ldr	r3, .L317+4
	ldrb	r3, [r3]	@ zero_extendqisi2
	mov	r2, r3
	ldr	r3, [r7, #60]
	cmp	r2, r3
	bge	.L316
.LBE52:
	.loc 1 1300 0 is_stmt 1
	movs	r0, #5
	bl	LINK_send_key
	.loc 1 1302 0
	adds	r7, r7, #80
	mov	sp, r7
	@ sp needed
	pop	{r4, r5, r7, pc}
.L318:
	.align	2
.L317:
	.word	a
	.word	password_buffer
	.word	prgm_header
	.word	.LC0
	.word	.LC1
	.word	os_image
.LFE153:
	.size	send_os, .-send_os
	.section	.text.check_password,"ax",%progbits
	.align	2
	.global	check_password
	.thumb
	.thumb_func
	.type	check_password, %function
check_password:
.LFB154:
	.loc 1 1305 0
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI119:
	sub	sp, sp, #16
.LCFI120:
	add	r7, sp, #0
.LCFI121:
.LBB53:
	.loc 1 1306 0
	movs	r3, #0
	str	r3, [r7, #12]
	b	.L320
.L321:
	.loc 1 1307 0 discriminator 2
	bl	LINK_wait_for_byte
	mov	r3, r0
	mov	r2, r3
	ldr	r1, .L328
	ldr	r3, [r7, #12]
	add	r3, r3, r1
	strb	r2, [r3]
	.loc 1 1306 0 discriminator 2
	ldr	r3, [r7, #12]
	adds	r3, r3, #1
	str	r3, [r7, #12]
.L320:
	.loc 1 1306 0 is_stmt 0 discriminator 1
	ldr	r3, [r7, #12]
	cmp	r3, #16
	ble	.L321
.LBE53:
	.loc 1 1308 0 is_stmt 1
	ldr	r3, .L328+4
	movs	r2, #0
	strb	r2, [r3]
.LBB54:
	.loc 1 1309 0
	movs	r3, #7
	str	r3, [r7, #8]
	b	.L322
.L324:
	.loc 1 1311 0
	ldr	r3, [r7, #8]
	subs	r3, r3, #6
	ldr	r1, .L328
	ldr	r2, [r7, #8]
	add	r2, r2, r1
	ldrb	r1, [r2]	@ zero_extendqisi2
	ldr	r2, .L328+4
	strb	r1, [r2, r3]
	.loc 1 1312 0
	ldr	r3, [r7, #8]
	subs	r3, r3, #6
	ldr	r2, .L328+4
	ldrb	r3, [r2, r3]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L323
	.loc 1 1314 0
	ldr	r3, .L328+4
	ldrb	r3, [r3]	@ zero_extendqisi2
	adds	r3, r3, #1
	uxtb	r2, r3
	ldr	r3, .L328+4
	strb	r2, [r3]
.L323:
	.loc 1 1309 0
	ldr	r3, [r7, #8]
	adds	r3, r3, #1
	str	r3, [r7, #8]
.L322:
	.loc 1 1309 0 is_stmt 0 discriminator 1
	ldr	r3, [r7, #8]
	cmp	r3, #14
	ble	.L324
.LBE54:
	.loc 1 1317 0 is_stmt 1
	movs	r3, #0
	str	r3, [r7, #4]
	.loc 1 1318 0
	b	.L325
.L327:
	.loc 1 1320 0
	ldr	r3, [r7, #4]
	adds	r3, r3, #1
	str	r3, [r7, #4]
	.loc 1 1321 0
	ldr	r3, [r7, #4]
	cmp	r3, #9
	bne	.L325
	.loc 1 1323 0
	movs	r3, #1
	b	.L326
.L325:
	.loc 1 1318 0 discriminator 1
	ldr	r2, .L328+4
	ldr	r3, [r7, #4]
	add	r3, r3, r2
	ldrb	r2, [r3]	@ zero_extendqisi2
	ldr	r1, .L328+8
	ldr	r3, [r7, #4]
	add	r3, r3, r1
	ldrb	r3, [r3]	@ zero_extendqisi2
	cmp	r2, r3
	beq	.L327
	.loc 1 1326 0
	movs	r3, #0
.L326:
	.loc 1 1327 0
	mov	r0, r3
	adds	r7, r7, #16
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L329:
	.align	2
.L328:
	.word	a
	.word	password_buffer
	.word	password
.LFE154:
	.size	check_password, .-check_password
	.global	__aeabi_fmul
	.global	__aeabi_fdiv
	.section	.text.vertice_to_point,"ax",%progbits
	.align	2
	.global	vertice_to_point
	.thumb
	.thumb_func
	.type	vertice_to_point, %function
vertice_to_point:
.LFB155:
	.loc 1 1330 0
	@ args = 20, pretend = 16, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	sub	sp, sp, #16
.LCFI122:
	push	{r7, lr}
.LCFI123:
	sub	sp, sp, #16
.LCFI124:
	add	r7, sp, #0
.LCFI125:
	str	r0, [r7, #4]
	add	r0, r7, #28
	stmia	r0, {r1, r2, r3}
	.loc 1 1332 0
	ldr	r3, [r7, #28]	@ float
	mov	r0, r3
	ldr	r1, .L332
	bl	__aeabi_fmul
	mov	r3, r0
	mov	r2, r3
	ldr	r3, [r7, #36]	@ float
	mov	r0, r2
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	str	r3, [r7, #8]	@ float
	.loc 1 1333 0
	ldr	r3, [r7, #32]	@ float
	mov	r0, r3
	ldr	r1, .L332
	bl	__aeabi_fmul
	mov	r3, r0
	mov	r2, r3
	ldr	r3, [r7, #36]	@ float
	mov	r0, r2
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	str	r3, [r7, #12]	@ float
	.loc 1 1334 0
	ldr	r3, [r7, #4]
	add	r2, r7, #8
	ldmia	r2, {r0, r1}
	stmia	r3, {r0, r1}
	.loc 1 1335 0
	ldr	r0, [r7, #4]
	adds	r7, r7, #16
	mov	sp, r7
	@ sp needed
	pop	{r7, lr}
	add	sp, sp, #16
	bx	lr
.L333:
	.align	2
.L332:
	.word	1176256512
.LFE155:
	.size	vertice_to_point, .-vertice_to_point
	.global	__aeabi_i2d
	.global	__aeabi_dmul
	.global	__aeabi_d2f
	.global	__aeabi_fsub
	.section	.text.rotate_x,"ax",%progbits
	.align	2
	.global	rotate_x
	.thumb
	.thumb_func
	.type	rotate_x, %function
rotate_x:
.LFB156:
	.loc 1 1338 0
	@ args = 0, pretend = 0, frame = 24
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r4, r7, lr}
.LCFI126:
	sub	sp, sp, #28
.LCFI127:
	add	r7, sp, #0
.LCFI128:
	str	r0, [r7, #4]
	str	r1, [r7]
	.loc 1 1339 0
	ldr	r0, [r7]
	bl	__aeabi_i2d
	mov	r2, r0
	mov	r3, r1
	mov	r0, r2
	mov	r1, r3
	adr	r3, .L335
	ldrd	r2, [r3]
	bl	__aeabi_dmul
	mov	r2, r0
	mov	r3, r1
	mov	r0, r2
	mov	r1, r3
	bl	sin
	mov	r2, r0
	mov	r3, r1
	mov	r0, r2
	mov	r1, r3
	bl	__aeabi_d2f
	mov	r3, r0
	str	r3, [r7, #20]	@ float
	.loc 1 1340 0
	ldr	r0, [r7]
	bl	__aeabi_i2d
	mov	r2, r0
	mov	r3, r1
	mov	r0, r2
	mov	r1, r3
	adr	r3, .L335
	ldrd	r2, [r3]
	bl	__aeabi_dmul
	mov	r2, r0
	mov	r3, r1
	mov	r0, r2
	mov	r1, r3
	bl	cos
	mov	r2, r0
	mov	r3, r1
	mov	r0, r2
	mov	r1, r3
	bl	__aeabi_d2f
	mov	r3, r0
	str	r3, [r7, #16]	@ float
	.loc 1 1341 0
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #4]	@ float
	mov	r0, r3
	ldr	r1, [r7, #16]	@ float
	bl	__aeabi_fmul
	mov	r3, r0
	mov	r4, r3
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #8]	@ float
	mov	r0, r3
	ldr	r1, [r7, #20]	@ float
	bl	__aeabi_fmul
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__aeabi_fsub
	mov	r3, r0
	str	r3, [r7, #12]	@ float
	.loc 1 1342 0
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #8]	@ float
	mov	r0, r3
	ldr	r1, [r7, #16]	@ float
	bl	__aeabi_fmul
	mov	r3, r0
	mov	r4, r3
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #4]	@ float
	mov	r0, r3
	ldr	r1, [r7, #20]	@ float
	bl	__aeabi_fmul
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r2, r3
	ldr	r3, [r7, #4]
	str	r2, [r3, #8]	@ float
	.loc 1 1343 0
	ldr	r3, [r7, #4]
	ldr	r2, [r7, #12]	@ float
	str	r2, [r3, #4]	@ float
	.loc 1 1344 0
	adds	r7, r7, #28
	mov	sp, r7
	@ sp needed
	pop	{r4, r7, pc}
.L336:
	.align	3
.L335:
	.word	-1577392367
	.word	1066524486
.LFE156:
	.size	rotate_x, .-rotate_x
	.section	.text.rotate_y,"ax",%progbits
	.align	2
	.global	rotate_y
	.thumb
	.thumb_func
	.type	rotate_y, %function
rotate_y:
.LFB157:
	.loc 1 1346 0
	@ args = 0, pretend = 0, frame = 24
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r4, r7, lr}
.LCFI129:
	sub	sp, sp, #28
.LCFI130:
	add	r7, sp, #0
.LCFI131:
	str	r0, [r7, #4]
	str	r1, [r7]
	.loc 1 1347 0
	ldr	r0, [r7]
	bl	__aeabi_i2d
	mov	r2, r0
	mov	r3, r1
	mov	r0, r2
	mov	r1, r3
	adr	r3, .L338
	ldrd	r2, [r3]
	bl	__aeabi_dmul
	mov	r2, r0
	mov	r3, r1
	mov	r0, r2
	mov	r1, r3
	bl	sin
	mov	r2, r0
	mov	r3, r1
	mov	r0, r2
	mov	r1, r3
	bl	__aeabi_d2f
	mov	r3, r0
	str	r3, [r7, #20]	@ float
	.loc 1 1348 0
	ldr	r0, [r7]
	bl	__aeabi_i2d
	mov	r2, r0
	mov	r3, r1
	mov	r0, r2
	mov	r1, r3
	adr	r3, .L338
	ldrd	r2, [r3]
	bl	__aeabi_dmul
	mov	r2, r0
	mov	r3, r1
	mov	r0, r2
	mov	r1, r3
	bl	cos
	mov	r2, r0
	mov	r3, r1
	mov	r0, r2
	mov	r1, r3
	bl	__aeabi_d2f
	mov	r3, r0
	str	r3, [r7, #16]	@ float
	.loc 1 1349 0
	ldr	r3, [r7, #4]
	ldr	r3, [r3]	@ float
	mov	r0, r3
	ldr	r1, [r7, #16]	@ float
	bl	__aeabi_fmul
	mov	r3, r0
	mov	r4, r3
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #8]	@ float
	mov	r0, r3
	ldr	r1, [r7, #20]	@ float
	bl	__aeabi_fmul
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__aeabi_fadd
	mov	r3, r0
	str	r3, [r7, #12]	@ float
	.loc 1 1350 0
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #8]	@ float
	mov	r0, r3
	ldr	r1, [r7, #16]	@ float
	bl	__aeabi_fmul
	mov	r3, r0
	mov	r4, r3
	ldr	r3, [r7, #4]
	ldr	r3, [r3]	@ float
	mov	r0, r3
	ldr	r1, [r7, #20]	@ float
	bl	__aeabi_fmul
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__aeabi_fsub
	mov	r3, r0
	mov	r2, r3
	ldr	r3, [r7, #4]
	str	r2, [r3, #8]	@ float
	.loc 1 1351 0
	ldr	r3, [r7, #4]
	ldr	r2, [r7, #12]	@ float
	str	r2, [r3]	@ float
	.loc 1 1352 0
	adds	r7, r7, #28
	mov	sp, r7
	@ sp needed
	pop	{r4, r7, pc}
.L339:
	.align	3
.L338:
	.word	-1577392367
	.word	1066524486
.LFE157:
	.size	rotate_y, .-rotate_y
	.section	.text.drawnumber,"ax",%progbits
	.align	2
	.global	drawnumber
	.thumb
	.thumb_func
	.type	drawnumber, %function
drawnumber:
.LFB158:
	.loc 1 1354 0
	@ args = 0, pretend = 0, frame = 24
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI132:
	sub	sp, sp, #24
.LCFI133:
	add	r7, sp, #0
.LCFI134:
	str	r0, [r7, #12]
	str	r1, [r7, #8]
	str	r2, [r7, #4]
	.loc 1 1355 0
	ldr	r3, [r7, #4]
	add	r2, r3, #16
	mov	r3, r2
	lsls	r3, r3, #2
	add	r3, r3, r2
	str	r3, [r7, #16]
.LBB55:
	.loc 1 1356 0
	movs	r3, #0
	str	r3, [r7, #20]
	b	.L341
.L350:
	.loc 1 1358 0
	ldr	r2, [r7, #20]
	ldr	r3, [r7, #16]
	add	r3, r3, r2
	ldr	r2, .L351
	ldrb	r3, [r2, r3]	@ zero_extendqisi2
	and	r3, r3, #1
	cmp	r3, #0
	beq	.L342
	.loc 1 1358 0 is_stmt 0 discriminator 1
	ldr	r2, [r7, #12]
	ldr	r3, [r7, #20]
	add	r3, r3, r2
	mov	r0, r3
	ldr	r1, [r7, #8]
	bl	setpixel
.L342:
	.loc 1 1359 0 is_stmt 1
	ldr	r2, [r7, #20]
	ldr	r3, [r7, #16]
	add	r3, r3, r2
	ldr	r2, .L351
	ldrb	r3, [r2, r3]	@ zero_extendqisi2
	and	r3, r3, #2
	cmp	r3, #0
	beq	.L343
	.loc 1 1359 0 is_stmt 0 discriminator 1
	ldr	r2, [r7, #12]
	ldr	r3, [r7, #20]
	add	r2, r2, r3
	ldr	r3, [r7, #8]
	adds	r3, r3, #1
	mov	r0, r2
	mov	r1, r3
	bl	setpixel
.L343:
	.loc 1 1360 0 is_stmt 1
	ldr	r2, [r7, #20]
	ldr	r3, [r7, #16]
	add	r3, r3, r2
	ldr	r2, .L351
	ldrb	r3, [r2, r3]	@ zero_extendqisi2
	and	r3, r3, #4
	cmp	r3, #0
	beq	.L344
	.loc 1 1360 0 is_stmt 0 discriminator 1
	ldr	r2, [r7, #12]
	ldr	r3, [r7, #20]
	add	r2, r2, r3
	ldr	r3, [r7, #8]
	adds	r3, r3, #2
	mov	r0, r2
	mov	r1, r3
	bl	setpixel
.L344:
	.loc 1 1361 0 is_stmt 1
	ldr	r2, [r7, #20]
	ldr	r3, [r7, #16]
	add	r3, r3, r2
	ldr	r2, .L351
	ldrb	r3, [r2, r3]	@ zero_extendqisi2
	and	r3, r3, #8
	cmp	r3, #0
	beq	.L345
	.loc 1 1361 0 is_stmt 0 discriminator 1
	ldr	r2, [r7, #12]
	ldr	r3, [r7, #20]
	add	r2, r2, r3
	ldr	r3, [r7, #8]
	adds	r3, r3, #3
	mov	r0, r2
	mov	r1, r3
	bl	setpixel
.L345:
	.loc 1 1362 0 is_stmt 1
	ldr	r2, [r7, #20]
	ldr	r3, [r7, #16]
	add	r3, r3, r2
	ldr	r2, .L351
	ldrb	r3, [r2, r3]	@ zero_extendqisi2
	and	r3, r3, #16
	cmp	r3, #0
	beq	.L346
	.loc 1 1362 0 is_stmt 0 discriminator 1
	ldr	r2, [r7, #12]
	ldr	r3, [r7, #20]
	add	r2, r2, r3
	ldr	r3, [r7, #8]
	adds	r3, r3, #4
	mov	r0, r2
	mov	r1, r3
	bl	setpixel
.L346:
	.loc 1 1363 0 is_stmt 1
	ldr	r2, [r7, #20]
	ldr	r3, [r7, #16]
	add	r3, r3, r2
	ldr	r2, .L351
	ldrb	r3, [r2, r3]	@ zero_extendqisi2
	and	r3, r3, #32
	cmp	r3, #0
	beq	.L347
	.loc 1 1363 0 is_stmt 0 discriminator 1
	ldr	r2, [r7, #12]
	ldr	r3, [r7, #20]
	add	r2, r2, r3
	ldr	r3, [r7, #8]
	adds	r3, r3, #5
	mov	r0, r2
	mov	r1, r3
	bl	setpixel
.L347:
	.loc 1 1364 0 is_stmt 1
	ldr	r2, [r7, #20]
	ldr	r3, [r7, #16]
	add	r3, r3, r2
	ldr	r2, .L351
	ldrb	r3, [r2, r3]	@ zero_extendqisi2
	and	r3, r3, #64
	cmp	r3, #0
	beq	.L348
	.loc 1 1364 0 is_stmt 0 discriminator 1
	ldr	r2, [r7, #12]
	ldr	r3, [r7, #20]
	add	r2, r2, r3
	ldr	r3, [r7, #8]
	adds	r3, r3, #6
	mov	r0, r2
	mov	r1, r3
	bl	setpixel
.L348:
	.loc 1 1365 0 is_stmt 1
	ldr	r2, [r7, #20]
	ldr	r3, [r7, #16]
	add	r3, r3, r2
	ldr	r2, .L351
	ldrb	r3, [r2, r3]	@ zero_extendqisi2
	uxtb	r3, r3
	sxtb	r3, r3
	cmp	r3, #0
	bge	.L349
	.loc 1 1365 0 is_stmt 0 discriminator 1
	ldr	r2, [r7, #12]
	ldr	r3, [r7, #20]
	add	r2, r2, r3
	ldr	r3, [r7, #8]
	adds	r3, r3, #7
	mov	r0, r2
	mov	r1, r3
	bl	setpixel
.L349:
	.loc 1 1356 0 is_stmt 1
	ldr	r3, [r7, #20]
	adds	r3, r3, #1
	str	r3, [r7, #20]
.L341:
	.loc 1 1356 0 is_stmt 0 discriminator 1
	ldr	r3, [r7, #20]
	cmp	r3, #4
	ble	.L350
.LBE55:
	.loc 1 1367 0 is_stmt 1
	adds	r7, r7, #24
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L352:
	.align	2
.L351:
	.word	font5x8
.LFE158:
	.size	drawnumber, .-drawnumber
	.section	.text.drawscore,"ax",%progbits
	.align	2
	.global	drawscore
	.thumb
	.thumb_func
	.type	drawscore, %function
drawscore:
.LFB159:
	.loc 1 1369 0
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI135:
	sub	sp, sp, #16
.LCFI136:
	add	r7, sp, #0
.LCFI137:
	.loc 1 1370 0
	ldr	r3, .L354
	ldr	r3, [r3]
	ldr	r2, .L354+4
	smull	r1, r2, r2, r3
	asrs	r2, r2, #6
	asrs	r3, r3, #31
	subs	r2, r2, r3
	ldr	r3, .L354+8
	smull	r1, r3, r3, r2
	asrs	r1, r3, #2
	asrs	r3, r2, #31
	subs	r1, r1, r3
	mov	r3, r1
	lsls	r3, r3, #2
	add	r3, r3, r1
	lsls	r3, r3, #1
	subs	r3, r2, r3
	str	r3, [r7, #12]
	.loc 1 1371 0
	ldr	r3, .L354
	ldr	r3, [r3]
	ldr	r2, .L354+12
	smull	r1, r2, r2, r3
	asrs	r2, r2, #5
	asrs	r3, r3, #31
	subs	r2, r2, r3
	ldr	r3, .L354+8
	smull	r1, r3, r3, r2
	asrs	r1, r3, #2
	asrs	r3, r2, #31
	subs	r1, r1, r3
	mov	r3, r1
	lsls	r3, r3, #2
	add	r3, r3, r1
	lsls	r3, r3, #1
	subs	r3, r2, r3
	str	r3, [r7, #8]
	.loc 1 1372 0
	ldr	r3, .L354
	ldr	r3, [r3]
	ldr	r2, .L354+8
	smull	r1, r2, r2, r3
	asrs	r2, r2, #2
	asrs	r3, r3, #31
	subs	r2, r2, r3
	ldr	r3, .L354+8
	smull	r1, r3, r3, r2
	asrs	r1, r3, #2
	asrs	r3, r2, #31
	subs	r1, r1, r3
	mov	r3, r1
	lsls	r3, r3, #2
	add	r3, r3, r1
	lsls	r3, r3, #1
	subs	r3, r2, r3
	str	r3, [r7, #4]
	.loc 1 1373 0
	ldr	r3, .L354
	ldr	r2, [r3]
	ldr	r3, .L354+8
	smull	r1, r3, r3, r2
	asrs	r1, r3, #2
	asrs	r3, r2, #31
	subs	r1, r1, r3
	mov	r3, r1
	lsls	r3, r3, #2
	add	r3, r3, r1
	lsls	r3, r3, #1
	subs	r3, r2, r3
	str	r3, [r7]
	.loc 1 1375 0
	movs	r0, #1
	movs	r1, #1
	ldr	r2, [r7, #12]
	bl	drawnumber
	.loc 1 1376 0
	movs	r0, #7
	movs	r1, #1
	ldr	r2, [r7, #8]
	bl	drawnumber
	.loc 1 1377 0
	movs	r0, #13
	movs	r1, #1
	ldr	r2, [r7, #4]
	bl	drawnumber
	.loc 1 1378 0
	movs	r0, #19
	movs	r1, #1
	ldr	r2, [r7]
	bl	drawnumber
	.loc 1 1379 0
	adds	r7, r7, #16
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L355:
	.align	2
.L354:
	.word	score
	.word	274877907
	.word	1717986919
	.word	1374389535
.LFE159:
	.size	drawscore, .-drawscore
	.global	__aeabi_i2f
	.global	__aeabi_f2iz
	.section	.text.main,"ax",%progbits
	.align	2
	.global	main
	.thumb
	.thumb_func
	.type	main, %function
main:
.LFB160:
	.loc 1 1383 0
	@ args = 0, pretend = 0, frame = 96
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r4, r5, r6, r7, r8, lr}
.LCFI138:
	sub	sp, sp, #104
.LCFI139:
	add	r7, sp, #8
.LCFI140:
	.loc 1 1384 0
	bl	LINK_init
	.loc 1 1403 0
	bl	initflappy
	.loc 1 1410 0
	ldr	r3, .L375
	ldrb	r3, [r3]	@ zero_extendqisi2
	adds	r3, r3, #51
	uxtb	r2, r3
	ldr	r3, .L375+4
	strb	r2, [r3, #3]
	.loc 1 1411 0
	nop
.L357:
	.loc 1 1411 0 is_stmt 0 discriminator 1
	bl	check_password
	mov	r3, r0
	cmp	r3, #0
	beq	.L357
	.loc 1 1412 0 is_stmt 1
	bl	send_os
	.loc 1 1420 0
	mov	r3, #0
	str	r3, [r7, #68]	@ float
	mov	r3, #0
	str	r3, [r7, #72]	@ float
	ldr	r3, .L375+8
	str	r3, [r7, #76]	@ float
	.loc 1 1436 0
	ldr	r0, .L375+12
	add	r3, r7, #68
	ldmia	r3, {r1, r2, r3}
	bl	translate
	.loc 1 1437 0
	ldr	r0, .L375+16
	add	r3, r7, #68
	ldmia	r3, {r1, r2, r3}
	bl	translate
	.loc 1 1438 0
	ldr	r0, .L375+20
	add	r3, r7, #68
	ldmia	r3, {r1, r2, r3}
	bl	translate
	.loc 1 1439 0
	ldr	r0, .L375+24
	add	r3, r7, #68
	ldmia	r3, {r1, r2, r3}
	bl	translate
	.loc 1 1440 0
	ldr	r0, .L375+28
	add	r3, r7, #68
	ldmia	r3, {r1, r2, r3}
	bl	translate
	.loc 1 1441 0
	ldr	r0, .L375+32
	add	r3, r7, #68
	ldmia	r3, {r1, r2, r3}
	bl	translate
	.loc 1 1442 0
	ldr	r0, .L375+36
	add	r3, r7, #68
	ldmia	r3, {r1, r2, r3}
	bl	translate
	.loc 1 1443 0
	ldr	r0, .L375+40
	add	r3, r7, #68
	ldmia	r3, {r1, r2, r3}
	bl	translate
	.loc 1 1446 0
	movs	r3, #0
	str	r3, [r7, #92]
	.loc 1 1448 0
	movs	r3, #1
	str	r3, [r7, #88]
	.loc 1 1449 0
	movs	r3, #0
	str	r3, [r7, #84]
	.loc 1 1450 0
	movs	r3, #1
	str	r3, [r7, #80]
	.loc 1 1452 0
	bl	WS2812_init
.L374:
.LBB56:
	.loc 1 1459 0
	ldr	r3, [r7, #92]
	adds	r3, r3, #1
	str	r3, [r7, #92]
	.loc 1 1465 0
	bl	clear_buffer
	.loc 1 1469 0
	bl	tick
	.loc 1 1471 0
	bl	drawflappy
	.loc 1 1472 0
	bl	drawscore
	.loc 1 1477 0
	ldr	r3, .L375+44
	str	r3, [r7, #76]	@ float
	.loc 1 1480 0
	ldr	r0, .L375+12
	add	r3, r7, #68
	ldmia	r3, {r1, r2, r3}
	bl	translate
	.loc 1 1481 0
	ldr	r0, .L375+16
	add	r3, r7, #68
	ldmia	r3, {r1, r2, r3}
	bl	translate
	.loc 1 1482 0
	ldr	r0, .L375+20
	add	r3, r7, #68
	ldmia	r3, {r1, r2, r3}
	bl	translate
	.loc 1 1483 0
	ldr	r0, .L375+24
	add	r3, r7, #68
	ldmia	r3, {r1, r2, r3}
	bl	translate
	.loc 1 1484 0
	ldr	r0, .L375+28
	add	r3, r7, #68
	ldmia	r3, {r1, r2, r3}
	bl	translate
	.loc 1 1485 0
	ldr	r0, .L375+32
	add	r3, r7, #68
	ldmia	r3, {r1, r2, r3}
	bl	translate
	.loc 1 1486 0
	ldr	r0, .L375+36
	add	r3, r7, #68
	ldmia	r3, {r1, r2, r3}
	bl	translate
	.loc 1 1487 0
	ldr	r0, .L375+40
	add	r3, r7, #68
	ldmia	r3, {r1, r2, r3}
	bl	translate
	.loc 1 1489 0
	movs	r3, #5
	str	r3, [r7, #80]
	.loc 1 1490 0
	ldr	r0, .L375+12
	ldr	r1, [r7, #80]
	bl	rotate_x
	.loc 1 1491 0
	ldr	r0, .L375+16
	ldr	r1, [r7, #80]
	bl	rotate_x
	.loc 1 1492 0
	ldr	r0, .L375+20
	ldr	r1, [r7, #80]
	bl	rotate_x
	.loc 1 1493 0
	ldr	r0, .L375+24
	ldr	r1, [r7, #80]
	bl	rotate_x
	.loc 1 1494 0
	ldr	r0, .L375+28
	ldr	r1, [r7, #80]
	bl	rotate_x
	.loc 1 1495 0
	ldr	r0, .L375+32
	ldr	r1, [r7, #80]
	bl	rotate_x
	.loc 1 1496 0
	ldr	r0, .L375+36
	ldr	r1, [r7, #80]
	bl	rotate_x
	.loc 1 1497 0
	ldr	r0, .L375+40
	ldr	r1, [r7, #80]
	bl	rotate_x
	.loc 1 1498 0
	ldr	r3, .L375+48
	ldr	r3, [r3]
	str	r3, [r7, #80]
	.loc 1 1499 0
	ldr	r0, .L375+12
	ldr	r1, [r7, #80]
	bl	rotate_y
	.loc 1 1500 0
	ldr	r0, .L375+16
	ldr	r1, [r7, #80]
	bl	rotate_y
	.loc 1 1501 0
	ldr	r0, .L375+20
	ldr	r1, [r7, #80]
	bl	rotate_y
	.loc 1 1502 0
	ldr	r0, .L375+24
	ldr	r1, [r7, #80]
	bl	rotate_y
	.loc 1 1503 0
	ldr	r0, .L375+28
	ldr	r1, [r7, #80]
	bl	rotate_y
	.loc 1 1504 0
	ldr	r0, .L375+32
	ldr	r1, [r7, #80]
	bl	rotate_y
	.loc 1 1505 0
	ldr	r0, .L375+36
	ldr	r1, [r7, #80]
	bl	rotate_y
	.loc 1 1506 0
	ldr	r0, .L375+40
	ldr	r1, [r7, #80]
	bl	rotate_y
	.loc 1 1509 0
	ldr	r3, .L375+52
	ldrd	r0, [r3]
	mov	r2, #0
	mov	r3, #1073741824
	and	r2, r2, r0
	and	r3, r3, r1
	orrs	r1, r2, r3
	beq	.L358
	.loc 1 1511 0
	ldr	r0, .L375+12
	ldr	r1, [r7, #80]
	bl	rotate_y
	.loc 1 1512 0
	ldr	r0, .L375+16
	ldr	r1, [r7, #80]
	bl	rotate_y
	.loc 1 1513 0
	ldr	r0, .L375+20
	ldr	r1, [r7, #80]
	bl	rotate_y
	.loc 1 1514 0
	ldr	r0, .L375+24
	ldr	r1, [r7, #80]
	bl	rotate_y
	.loc 1 1515 0
	ldr	r0, .L375+28
	ldr	r1, [r7, #80]
	bl	rotate_y
	.loc 1 1516 0
	ldr	r0, .L375+32
	ldr	r1, [r7, #80]
	bl	rotate_y
	.loc 1 1517 0
	ldr	r0, .L375+36
	ldr	r1, [r7, #80]
	bl	rotate_y
	.loc 1 1518 0
	ldr	r0, .L375+40
	ldr	r1, [r7, #80]
	bl	rotate_y
.L358:
	.loc 1 1520 0
	ldr	r3, .L375+52
	ldrd	r2, [r3]
	cmp	r2, #0
	sbcs	r1, r3, #0
	bge	.L359
	.loc 1 1522 0
	ldr	r0, .L375+12
	ldr	r1, [r7, #80]
	bl	rotate_x
	.loc 1 1523 0
	ldr	r0, .L375+16
	ldr	r1, [r7, #80]
	bl	rotate_x
	.loc 1 1524 0
	ldr	r0, .L375+20
	ldr	r1, [r7, #80]
	bl	rotate_x
	.loc 1 1525 0
	ldr	r0, .L375+24
	ldr	r1, [r7, #80]
	bl	rotate_x
	.loc 1 1526 0
	ldr	r0, .L375+28
	ldr	r1, [r7, #80]
	bl	rotate_x
	.loc 1 1527 0
	ldr	r0, .L375+32
	ldr	r1, [r7, #80]
	bl	rotate_x
	.loc 1 1528 0
	ldr	r0, .L375+36
	ldr	r1, [r7, #80]
	bl	rotate_x
	.loc 1 1529 0
	ldr	r0, .L375+40
	ldr	r1, [r7, #80]
	bl	rotate_x
.L359:
	.loc 1 1531 0
	ldr	r3, .L375+52
	ldrd	r0, [r3]
	mov	r2, #0
	mov	r3, #536870912
	and	r2, r2, r0
	and	r3, r3, r1
	orrs	r1, r2, r3
	beq	.L360
	.loc 1 1533 0
	ldr	r3, [r7, #80]
	negs	r3, r3
	ldr	r0, .L375+12
	mov	r1, r3
	bl	rotate_y
	.loc 1 1534 0
	ldr	r3, [r7, #80]
	negs	r3, r3
	ldr	r0, .L375+16
	mov	r1, r3
	bl	rotate_y
	.loc 1 1535 0
	ldr	r3, [r7, #80]
	negs	r3, r3
	ldr	r0, .L375+20
	mov	r1, r3
	bl	rotate_y
	.loc 1 1536 0
	ldr	r3, [r7, #80]
	negs	r3, r3
	ldr	r0, .L375+24
	mov	r1, r3
	bl	rotate_y
	.loc 1 1537 0
	ldr	r3, [r7, #80]
	negs	r3, r3
	ldr	r0, .L375+28
	mov	r1, r3
	bl	rotate_y
	.loc 1 1538 0
	ldr	r3, [r7, #80]
	negs	r3, r3
	ldr	r0, .L375+32
	mov	r1, r3
	bl	rotate_y
	.loc 1 1539 0
	ldr	r3, [r7, #80]
	negs	r3, r3
	ldr	r0, .L375+36
	mov	r1, r3
	bl	rotate_y
	.loc 1 1540 0
	ldr	r3, [r7, #80]
	negs	r3, r3
	b	.L376
.L377:
	.align	2
.L375:
	.word	password
	.word	os_image
	.word	-1007026176
	.word	vertice1
	.word	vertice2
	.word	vertice3
	.word	vertice4
	.word	vertice5
	.word	vertice6
	.word	vertice7
	.word	vertice8
	.word	1140457472
	.word	speed
	.word	key
.L376:
	ldr	r0, .L378
	mov	r1, r3
	bl	rotate_y
.L360:
	.loc 1 1542 0
	ldr	r3, .L378+4
	ldrd	r0, [r3]
	mov	r2, #0
	mov	r3, #268435456
	and	r2, r2, r0
	and	r3, r3, r1
	orrs	r1, r2, r3
	beq	.L361
	.loc 1 1544 0
	ldr	r3, [r7, #80]
	negs	r3, r3
	ldr	r0, .L378+8
	mov	r1, r3
	bl	rotate_x
	.loc 1 1545 0
	ldr	r3, [r7, #80]
	negs	r3, r3
	ldr	r0, .L378+12
	mov	r1, r3
	bl	rotate_x
	.loc 1 1546 0
	ldr	r3, [r7, #80]
	negs	r3, r3
	ldr	r0, .L378+16
	mov	r1, r3
	bl	rotate_x
	.loc 1 1547 0
	ldr	r3, [r7, #80]
	negs	r3, r3
	ldr	r0, .L378+20
	mov	r1, r3
	bl	rotate_x
	.loc 1 1548 0
	ldr	r3, [r7, #80]
	negs	r3, r3
	ldr	r0, .L378+24
	mov	r1, r3
	bl	rotate_x
	.loc 1 1549 0
	ldr	r3, [r7, #80]
	negs	r3, r3
	ldr	r0, .L378+28
	mov	r1, r3
	bl	rotate_x
	.loc 1 1550 0
	ldr	r3, [r7, #80]
	negs	r3, r3
	ldr	r0, .L378+32
	mov	r1, r3
	bl	rotate_x
	.loc 1 1551 0
	ldr	r3, [r7, #80]
	negs	r3, r3
	ldr	r0, .L378
	mov	r1, r3
	bl	rotate_x
.L361:
	.loc 1 1555 0
	ldr	r3, .L378+4
	ldrd	r0, [r3]
	mov	r2, #0
	mov	r3, #4194304
	and	r2, r2, r0
	and	r3, r3, r1
	orrs	r1, r2, r3
	beq	.L362
	.loc 1 1557 0
	ldr	r3, .L378+36
	ldr	r3, [r3]
	subs	r2, r3, #1
	ldr	r3, .L378+36
	str	r2, [r3]
.L362:
	.loc 1 1559 0
	ldr	r3, .L378+4
	ldrd	r0, [r3]
	mov	r2, #0
	mov	r3, #2097152
	and	r2, r2, r0
	and	r3, r3, r1
	orrs	r1, r2, r3
	beq	.L363
	.loc 1 1561 0
	ldr	r3, .L378+36
	ldr	r3, [r3]
	adds	r2, r3, #1
	ldr	r3, .L378+36
	str	r2, [r3]
.L363:
	.loc 1 1564 0
	ldr	r3, .L378+4
	ldrd	r0, [r3]
	mov	r2, #1073741824
	mov	r3, #0
	and	r2, r2, r0
	and	r3, r3, r1
	orrs	r1, r2, r3
	beq	.L364
	.loc 1 1566 0
	movs	r3, #1
	str	r3, [r7, #80]
.L364:
	.loc 1 1568 0
	ldr	r3, .L378+4
	ldrd	r0, [r3]
	mov	r2, #0
	mov	r3, #64
	and	r2, r2, r0
	and	r3, r3, r1
	orrs	r1, r2, r3
	beq	.L365
	.loc 1 1570 0
	movs	r3, #2
	str	r3, [r7, #80]
.L365:
	.loc 1 1572 0
	ldr	r3, .L378+4
	ldrd	r0, [r3]
	mov	r2, #0
	mov	r3, #16384
	and	r2, r2, r0
	and	r3, r3, r1
	orrs	r1, r2, r3
	beq	.L366
	.loc 1 1574 0
	movs	r3, #3
	str	r3, [r7, #80]
.L366:
	.loc 1 1576 0
	ldr	r3, .L378+4
	ldrd	r0, [r3]
	mov	r2, #536870912
	mov	r3, #0
	and	r2, r2, r0
	and	r3, r3, r1
	orrs	r1, r2, r3
	beq	.L367
	.loc 1 1578 0
	movs	r3, #4
	str	r3, [r7, #80]
.L367:
	.loc 1 1580 0
	ldr	r3, .L378+4
	ldrd	r0, [r3]
	mov	r2, #0
	mov	r3, #32
	and	r2, r2, r0
	and	r3, r3, r1
	orrs	r1, r2, r3
	beq	.L368
	.loc 1 1582 0
	movs	r3, #5
	str	r3, [r7, #80]
.L368:
	.loc 1 1584 0
	ldr	r3, .L378+4
	ldrd	r0, [r3]
	mov	r2, #0
	mov	r3, #8192
	and	r2, r2, r0
	and	r3, r3, r1
	orrs	r1, r2, r3
	beq	.L369
	.loc 1 1586 0
	movs	r3, #6
	str	r3, [r7, #80]
.L369:
	.loc 1 1588 0
	ldr	r3, .L378+4
	ldrd	r0, [r3]
	mov	r2, #268435456
	mov	r3, #0
	and	r2, r2, r0
	and	r3, r3, r1
	orrs	r1, r2, r3
	beq	.L370
	.loc 1 1590 0
	movs	r3, #7
	str	r3, [r7, #80]
.L370:
	.loc 1 1592 0
	ldr	r3, .L378+4
	ldrd	r0, [r3]
	mov	r2, #0
	mov	r3, #16
	and	r2, r2, r0
	and	r3, r3, r1
	orrs	r1, r2, r3
	beq	.L371
	.loc 1 1594 0
	movs	r3, #8
	str	r3, [r7, #80]
.L371:
	.loc 1 1596 0
	ldr	r3, .L378+4
	ldrd	r0, [r3]
	mov	r2, #0
	mov	r3, #4096
	and	r2, r2, r0
	and	r3, r3, r1
	orrs	r1, r2, r3
	beq	.L372
	.loc 1 1598 0
	movs	r3, #9
	str	r3, [r7, #80]
.L372:
	.loc 1 1602 0
	ldr	r3, .L378+40
	str	r3, [r7, #76]	@ float
	.loc 1 1604 0
	ldr	r0, .L378+8
	add	r3, r7, #68
	ldmia	r3, {r1, r2, r3}
	bl	translate
	.loc 1 1605 0
	ldr	r0, .L378+12
	add	r3, r7, #68
	ldmia	r3, {r1, r2, r3}
	bl	translate
	.loc 1 1606 0
	ldr	r0, .L378+16
	add	r3, r7, #68
	ldmia	r3, {r1, r2, r3}
	bl	translate
	.loc 1 1607 0
	ldr	r0, .L378+20
	add	r3, r7, #68
	ldmia	r3, {r1, r2, r3}
	bl	translate
	.loc 1 1608 0
	ldr	r0, .L378+24
	add	r3, r7, #68
	ldmia	r3, {r1, r2, r3}
	bl	translate
	.loc 1 1609 0
	ldr	r0, .L378+28
	add	r3, r7, #68
	ldmia	r3, {r1, r2, r3}
	bl	translate
	.loc 1 1610 0
	ldr	r0, .L378+32
	add	r3, r7, #68
	ldmia	r3, {r1, r2, r3}
	bl	translate
	.loc 1 1611 0
	ldr	r0, .L378
	add	r3, r7, #68
	ldmia	r3, {r1, r2, r3}
	bl	translate
	.loc 1 1663 0
	ldr	r3, [r7, #84]
	cmp	r3, #4
	ble	.L373
	.loc 1 1665 0
	movs	r3, #0
	str	r3, [r7, #84]
	.loc 1 1666 0
	ldr	r3, [r7, #88]
	adds	r3, r3, #1
	str	r3, [r7, #88]
	.loc 1 1667 0
	ldr	r3, [r7, #88]
	cmp	r3, #9
	bne	.L373
	.loc 1 1668 0
	movs	r3, #1
	str	r3, [r7, #88]
.L373:
	.loc 1 1758 0
	add	r0, r7, #60
	ldr	r3, .L378+8
	ldr	r2, [r3, #12]
	str	r2, [sp]
	ldmia	r3, {r1, r2, r3}
	bl	vertice_to_point
	.loc 1 1759 0
	add	r0, r7, #52
	ldr	r3, .L378+12
	ldr	r2, [r3, #12]
	str	r2, [sp]
	ldmia	r3, {r1, r2, r3}
	bl	vertice_to_point
	.loc 1 1760 0
	add	r0, r7, #44
	ldr	r3, .L378+16
	ldr	r2, [r3, #12]
	str	r2, [sp]
	ldmia	r3, {r1, r2, r3}
	bl	vertice_to_point
	.loc 1 1761 0
	add	r0, r7, #36
	ldr	r3, .L378+20
	ldr	r2, [r3, #12]
	str	r2, [sp]
	ldmia	r3, {r1, r2, r3}
	bl	vertice_to_point
	.loc 1 1762 0
	add	r0, r7, #28
	ldr	r3, .L378+24
	ldr	r2, [r3, #12]
	str	r2, [sp]
	ldmia	r3, {r1, r2, r3}
	bl	vertice_to_point
	.loc 1 1763 0
	add	r0, r7, #20
	ldr	r3, .L378+28
	ldr	r2, [r3, #12]
	str	r2, [sp]
	ldmia	r3, {r1, r2, r3}
	bl	vertice_to_point
	.loc 1 1764 0
	add	r0, r7, #12
	ldr	r3, .L378+32
	ldr	r2, [r3, #12]
	str	r2, [sp]
	b	.L379
.L380:
	.align	2
.L378:
	.word	vertice8
	.word	key
	.word	vertice1
	.word	vertice2
	.word	vertice3
	.word	vertice4
	.word	vertice5
	.word	vertice6
	.word	vertice7
	.word	zoomlevel
	.word	-1007026176
.L379:
	ldmia	r3, {r1, r2, r3}
	bl	vertice_to_point
	.loc 1 1765 0
	adds	r0, r7, #4
	ldr	r3, .L381
	ldr	r2, [r3, #12]
	str	r2, [sp]
	ldmia	r3, {r1, r2, r3}
	bl	vertice_to_point
	.loc 1 1806 0
	ldr	r4, [r7, #60]	@ float
	ldr	r3, .L381+4
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	ldr	r1, .L381+8
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r6, r0
	ldr	r4, [r7, #64]	@ float
	ldr	r3, .L381+4
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	mov	r1, #1107296256
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r5, r0
	ldr	r4, [r7, #52]	@ float
	ldr	r3, .L381+4
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	ldr	r1, .L381+8
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r4, r0
	ldr	r8, [r7, #56]	@ float
	ldr	r3, .L381+4
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r8
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	mov	r1, #1107296256
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r3, r0
	mov	r0, r6
	mov	r1, r5
	mov	r2, r4
	bl	setline
	.loc 1 1807 0
	ldr	r4, [r7, #60]	@ float
	ldr	r3, .L381+4
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	ldr	r1, .L381+8
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r6, r0
	ldr	r4, [r7, #64]	@ float
	ldr	r3, .L381+4
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	mov	r1, #1107296256
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r5, r0
	ldr	r4, [r7, #44]	@ float
	ldr	r3, .L381+4
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	ldr	r1, .L381+8
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r4, r0
	ldr	r8, [r7, #48]	@ float
	ldr	r3, .L381+4
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r8
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	mov	r1, #1107296256
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r3, r0
	mov	r0, r6
	mov	r1, r5
	mov	r2, r4
	bl	setline
	.loc 1 1808 0
	ldr	r4, [r7, #60]	@ float
	ldr	r3, .L381+4
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	ldr	r1, .L381+8
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r6, r0
	ldr	r4, [r7, #64]	@ float
	ldr	r3, .L381+4
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	mov	r1, #1107296256
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r5, r0
	ldr	r4, [r7, #36]	@ float
	ldr	r3, .L381+4
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	ldr	r1, .L381+8
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r4, r0
	ldr	r8, [r7, #40]	@ float
	ldr	r3, .L381+4
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r8
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	mov	r1, #1107296256
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r3, r0
	mov	r0, r6
	mov	r1, r5
	mov	r2, r4
	bl	setline
	.loc 1 1809 0
	ldr	r4, [r7, #60]	@ float
	ldr	r3, .L381+4
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	ldr	r1, .L381+8
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r6, r0
	ldr	r4, [r7, #64]	@ float
	ldr	r3, .L381+4
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	mov	r1, #1107296256
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	b	.L382
.L383:
	.align	2
.L381:
	.word	vertice8
	.word	zoomlevel
	.word	1111490560
.L382:
	mov	r5, r0
	ldr	r4, [r7, #28]	@ float
	ldr	r3, .L384
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	ldr	r1, .L384+4
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r4, r0
	ldr	r8, [r7, #32]	@ float
	ldr	r3, .L384
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r8
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	mov	r1, #1107296256
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r3, r0
	mov	r0, r6
	mov	r1, r5
	mov	r2, r4
	bl	setline
	.loc 1 1810 0
	ldr	r4, [r7, #60]	@ float
	ldr	r3, .L384
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	ldr	r1, .L384+4
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r6, r0
	ldr	r4, [r7, #64]	@ float
	ldr	r3, .L384
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	mov	r1, #1107296256
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r5, r0
	ldr	r4, [r7, #20]	@ float
	ldr	r3, .L384
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	ldr	r1, .L384+4
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r4, r0
	ldr	r8, [r7, #24]	@ float
	ldr	r3, .L384
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r8
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	mov	r1, #1107296256
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r3, r0
	mov	r0, r6
	mov	r1, r5
	mov	r2, r4
	bl	setline
	.loc 1 1811 0
	ldr	r4, [r7, #60]	@ float
	ldr	r3, .L384
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	ldr	r1, .L384+4
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r6, r0
	ldr	r4, [r7, #64]	@ float
	ldr	r3, .L384
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	mov	r1, #1107296256
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r5, r0
	ldr	r4, [r7, #12]	@ float
	ldr	r3, .L384
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	ldr	r1, .L384+4
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r4, r0
	ldr	r8, [r7, #16]	@ float
	ldr	r3, .L384
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r8
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	mov	r1, #1107296256
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r3, r0
	mov	r0, r6
	mov	r1, r5
	mov	r2, r4
	bl	setline
	.loc 1 1812 0
	ldr	r4, [r7, #60]	@ float
	ldr	r3, .L384
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	ldr	r1, .L384+4
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r6, r0
	ldr	r4, [r7, #64]	@ float
	ldr	r3, .L384
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	mov	r1, #1107296256
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r5, r0
	ldr	r4, [r7, #4]	@ float
	ldr	r3, .L384
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	ldr	r1, .L384+4
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r4, r0
	ldr	r8, [r7, #8]	@ float
	ldr	r3, .L384
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r8
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	mov	r1, #1107296256
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r3, r0
	mov	r0, r6
	mov	r1, r5
	mov	r2, r4
	bl	setline
	.loc 1 1814 0
	ldr	r4, [r7, #52]	@ float
	b	.L385
.L386:
	.align	2
.L384:
	.word	zoomlevel
	.word	1111490560
.L385:
	ldr	r3, .L387
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	ldr	r1, .L387+4
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r6, r0
	ldr	r4, [r7, #56]	@ float
	ldr	r3, .L387
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	mov	r1, #1107296256
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r5, r0
	ldr	r4, [r7, #44]	@ float
	ldr	r3, .L387
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	ldr	r1, .L387+4
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r4, r0
	ldr	r8, [r7, #48]	@ float
	ldr	r3, .L387
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r8
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	mov	r1, #1107296256
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r3, r0
	mov	r0, r6
	mov	r1, r5
	mov	r2, r4
	bl	setline
	.loc 1 1815 0
	ldr	r4, [r7, #52]	@ float
	ldr	r3, .L387
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	ldr	r1, .L387+4
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r6, r0
	ldr	r4, [r7, #56]	@ float
	ldr	r3, .L387
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	mov	r1, #1107296256
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r5, r0
	ldr	r4, [r7, #36]	@ float
	ldr	r3, .L387
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	ldr	r1, .L387+4
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r4, r0
	ldr	r8, [r7, #40]	@ float
	ldr	r3, .L387
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r8
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	mov	r1, #1107296256
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r3, r0
	mov	r0, r6
	mov	r1, r5
	mov	r2, r4
	bl	setline
	.loc 1 1816 0
	ldr	r4, [r7, #52]	@ float
	ldr	r3, .L387
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	ldr	r1, .L387+4
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r6, r0
	ldr	r4, [r7, #56]	@ float
	ldr	r3, .L387
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	mov	r1, #1107296256
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r5, r0
	ldr	r4, [r7, #28]	@ float
	ldr	r3, .L387
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	ldr	r1, .L387+4
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r4, r0
	ldr	r8, [r7, #32]	@ float
	ldr	r3, .L387
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r8
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	mov	r1, #1107296256
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r3, r0
	mov	r0, r6
	mov	r1, r5
	mov	r2, r4
	bl	setline
	.loc 1 1817 0
	ldr	r4, [r7, #52]	@ float
	ldr	r3, .L387
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	ldr	r1, .L387+4
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r6, r0
	ldr	r4, [r7, #56]	@ float
	ldr	r3, .L387
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	mov	r1, #1107296256
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r5, r0
	ldr	r4, [r7, #20]	@ float
	ldr	r3, .L387
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	b	.L388
.L389:
	.align	2
.L387:
	.word	zoomlevel
	.word	1111490560
.L388:
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	ldr	r1, .L390
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r4, r0
	ldr	r8, [r7, #24]	@ float
	ldr	r3, .L390+4
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r8
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	mov	r1, #1107296256
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r3, r0
	mov	r0, r6
	mov	r1, r5
	mov	r2, r4
	bl	setline
	.loc 1 1818 0
	ldr	r4, [r7, #52]	@ float
	ldr	r3, .L390+4
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	ldr	r1, .L390
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r6, r0
	ldr	r4, [r7, #56]	@ float
	ldr	r3, .L390+4
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	mov	r1, #1107296256
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r5, r0
	ldr	r4, [r7, #12]	@ float
	ldr	r3, .L390+4
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	ldr	r1, .L390
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r4, r0
	ldr	r8, [r7, #16]	@ float
	ldr	r3, .L390+4
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r8
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	mov	r1, #1107296256
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r3, r0
	mov	r0, r6
	mov	r1, r5
	mov	r2, r4
	bl	setline
	.loc 1 1819 0
	ldr	r4, [r7, #52]	@ float
	ldr	r3, .L390+4
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	ldr	r1, .L390
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r6, r0
	ldr	r4, [r7, #56]	@ float
	ldr	r3, .L390+4
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	mov	r1, #1107296256
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r5, r0
	ldr	r4, [r7, #4]	@ float
	ldr	r3, .L390+4
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	ldr	r1, .L390
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r4, r0
	ldr	r8, [r7, #8]	@ float
	ldr	r3, .L390+4
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r8
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	mov	r1, #1107296256
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r3, r0
	mov	r0, r6
	mov	r1, r5
	mov	r2, r4
	bl	setline
	.loc 1 1821 0
	ldr	r4, [r7, #44]	@ float
	ldr	r3, .L390+4
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	ldr	r1, .L390
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r6, r0
	ldr	r4, [r7, #48]	@ float
	ldr	r3, .L390+4
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	mov	r1, #1107296256
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r5, r0
	ldr	r4, [r7, #36]	@ float
	ldr	r3, .L390+4
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	ldr	r1, .L390
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r4, r0
	ldr	r8, [r7, #40]	@ float
	ldr	r3, .L390+4
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r8
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	mov	r1, #1107296256
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r3, r0
	mov	r0, r6
	mov	r1, r5
	mov	r2, r4
	bl	setline
	.loc 1 1822 0
	ldr	r4, [r7, #44]	@ float
	ldr	r3, .L390+4
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	b	.L391
.L392:
	.align	2
.L390:
	.word	1111490560
	.word	zoomlevel
.L391:
	ldr	r1, .L393
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r6, r0
	ldr	r4, [r7, #48]	@ float
	ldr	r3, .L393+4
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	mov	r1, #1107296256
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r5, r0
	ldr	r4, [r7, #28]	@ float
	ldr	r3, .L393+4
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	ldr	r1, .L393
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r4, r0
	ldr	r8, [r7, #32]	@ float
	ldr	r3, .L393+4
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r8
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	mov	r1, #1107296256
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r3, r0
	mov	r0, r6
	mov	r1, r5
	mov	r2, r4
	bl	setline
	.loc 1 1823 0
	ldr	r4, [r7, #44]	@ float
	ldr	r3, .L393+4
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	ldr	r1, .L393
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r6, r0
	ldr	r4, [r7, #48]	@ float
	ldr	r3, .L393+4
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	mov	r1, #1107296256
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r5, r0
	ldr	r4, [r7, #20]	@ float
	ldr	r3, .L393+4
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	ldr	r1, .L393
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r4, r0
	ldr	r8, [r7, #24]	@ float
	ldr	r3, .L393+4
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r8
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	mov	r1, #1107296256
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r3, r0
	mov	r0, r6
	mov	r1, r5
	mov	r2, r4
	bl	setline
	.loc 1 1824 0
	ldr	r4, [r7, #44]	@ float
	ldr	r3, .L393+4
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	ldr	r1, .L393
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r6, r0
	ldr	r4, [r7, #48]	@ float
	ldr	r3, .L393+4
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	mov	r1, #1107296256
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r5, r0
	ldr	r4, [r7, #12]	@ float
	ldr	r3, .L393+4
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	ldr	r1, .L393
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r4, r0
	ldr	r8, [r7, #16]	@ float
	ldr	r3, .L393+4
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r8
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	mov	r1, #1107296256
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r3, r0
	mov	r0, r6
	mov	r1, r5
	mov	r2, r4
	bl	setline
	.loc 1 1825 0
	ldr	r4, [r7, #44]	@ float
	ldr	r3, .L393+4
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	ldr	r1, .L393
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r6, r0
	ldr	r4, [r7, #48]	@ float
	ldr	r3, .L393+4
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	mov	r1, #1107296256
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r5, r0
	ldr	r4, [r7, #4]	@ float
	ldr	r3, .L393+4
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	ldr	r1, .L393
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	b	.L394
.L395:
	.align	2
.L393:
	.word	1111490560
	.word	zoomlevel
.L394:
	bl	__aeabi_f2iz
	mov	r4, r0
	ldr	r8, [r7, #8]	@ float
	ldr	r3, .L396
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r8
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	mov	r1, #1107296256
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r3, r0
	mov	r0, r6
	mov	r1, r5
	mov	r2, r4
	bl	setline
	.loc 1 1827 0
	ldr	r4, [r7, #36]	@ float
	ldr	r3, .L396
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	ldr	r1, .L396+4
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r6, r0
	ldr	r4, [r7, #40]	@ float
	ldr	r3, .L396
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	mov	r1, #1107296256
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r5, r0
	ldr	r4, [r7, #28]	@ float
	ldr	r3, .L396
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	ldr	r1, .L396+4
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r4, r0
	ldr	r8, [r7, #32]	@ float
	ldr	r3, .L396
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r8
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	mov	r1, #1107296256
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r3, r0
	mov	r0, r6
	mov	r1, r5
	mov	r2, r4
	bl	setline
	.loc 1 1828 0
	ldr	r4, [r7, #36]	@ float
	ldr	r3, .L396
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	ldr	r1, .L396+4
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r6, r0
	ldr	r4, [r7, #40]	@ float
	ldr	r3, .L396
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	mov	r1, #1107296256
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r5, r0
	ldr	r4, [r7, #20]	@ float
	ldr	r3, .L396
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	ldr	r1, .L396+4
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r4, r0
	ldr	r8, [r7, #24]	@ float
	ldr	r3, .L396
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r8
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	mov	r1, #1107296256
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r3, r0
	mov	r0, r6
	mov	r1, r5
	mov	r2, r4
	bl	setline
	.loc 1 1829 0
	ldr	r4, [r7, #36]	@ float
	ldr	r3, .L396
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	ldr	r1, .L396+4
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r6, r0
	ldr	r4, [r7, #40]	@ float
	ldr	r3, .L396
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	mov	r1, #1107296256
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r5, r0
	ldr	r4, [r7, #12]	@ float
	ldr	r3, .L396
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	ldr	r1, .L396+4
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r4, r0
	ldr	r8, [r7, #16]	@ float
	ldr	r3, .L396
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r8
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	mov	r1, #1107296256
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r3, r0
	mov	r0, r6
	mov	r1, r5
	mov	r2, r4
	bl	setline
	.loc 1 1830 0
	ldr	r4, [r7, #36]	@ float
	ldr	r3, .L396
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	ldr	r1, .L396+4
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r6, r0
	ldr	r4, [r7, #40]	@ float
	b	.L397
.L398:
	.align	2
.L396:
	.word	zoomlevel
	.word	1111490560
.L397:
	ldr	r3, .L399
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	mov	r1, #1107296256
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r5, r0
	ldr	r4, [r7, #4]	@ float
	ldr	r3, .L399
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	ldr	r1, .L399+4
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r4, r0
	ldr	r8, [r7, #8]	@ float
	ldr	r3, .L399
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r8
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	mov	r1, #1107296256
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r3, r0
	mov	r0, r6
	mov	r1, r5
	mov	r2, r4
	bl	setline
	.loc 1 1832 0
	ldr	r4, [r7, #28]	@ float
	ldr	r3, .L399
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	ldr	r1, .L399+4
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r6, r0
	ldr	r4, [r7, #32]	@ float
	ldr	r3, .L399
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	mov	r1, #1107296256
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r5, r0
	ldr	r4, [r7, #20]	@ float
	ldr	r3, .L399
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	ldr	r1, .L399+4
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r4, r0
	ldr	r8, [r7, #24]	@ float
	ldr	r3, .L399
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r8
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	mov	r1, #1107296256
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r3, r0
	mov	r0, r6
	mov	r1, r5
	mov	r2, r4
	bl	setline
	.loc 1 1833 0
	ldr	r4, [r7, #28]	@ float
	ldr	r3, .L399
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	ldr	r1, .L399+4
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r6, r0
	ldr	r4, [r7, #32]	@ float
	ldr	r3, .L399
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	mov	r1, #1107296256
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r5, r0
	ldr	r4, [r7, #12]	@ float
	ldr	r3, .L399
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	ldr	r1, .L399+4
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r4, r0
	ldr	r8, [r7, #16]	@ float
	ldr	r3, .L399
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r8
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	mov	r1, #1107296256
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r3, r0
	mov	r0, r6
	mov	r1, r5
	mov	r2, r4
	bl	setline
	.loc 1 1834 0
	ldr	r4, [r7, #28]	@ float
	ldr	r3, .L399
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	ldr	r1, .L399+4
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r6, r0
	ldr	r4, [r7, #32]	@ float
	ldr	r3, .L399
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	mov	r1, #1107296256
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r5, r0
	ldr	r4, [r7, #4]	@ float
	ldr	r3, .L399
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	ldr	r1, .L399+4
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r4, r0
	ldr	r8, [r7, #8]	@ float
	ldr	r3, .L399
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	b	.L400
.L401:
	.align	2
.L399:
	.word	zoomlevel
	.word	1111490560
.L400:
	mov	r3, r0
	mov	r0, r8
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	mov	r1, #1107296256
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r3, r0
	mov	r0, r6
	mov	r1, r5
	mov	r2, r4
	bl	setline
	.loc 1 1836 0
	ldr	r4, [r7, #20]	@ float
	ldr	r3, .L402
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	ldr	r1, .L402+4
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r6, r0
	ldr	r4, [r7, #24]	@ float
	ldr	r3, .L402
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	mov	r1, #1107296256
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r5, r0
	ldr	r4, [r7, #12]	@ float
	ldr	r3, .L402
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	ldr	r1, .L402+4
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r4, r0
	ldr	r8, [r7, #16]	@ float
	ldr	r3, .L402
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r8
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	mov	r1, #1107296256
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r3, r0
	mov	r0, r6
	mov	r1, r5
	mov	r2, r4
	bl	setline
	.loc 1 1837 0
	ldr	r4, [r7, #20]	@ float
	ldr	r3, .L402
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	ldr	r1, .L402+4
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r6, r0
	ldr	r4, [r7, #24]	@ float
	ldr	r3, .L402
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	mov	r1, #1107296256
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r5, r0
	ldr	r4, [r7, #4]	@ float
	ldr	r3, .L402
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	ldr	r1, .L402+4
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r4, r0
	ldr	r8, [r7, #8]	@ float
	ldr	r3, .L402
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r8
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	mov	r1, #1107296256
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r3, r0
	mov	r0, r6
	mov	r1, r5
	mov	r2, r4
	bl	setline
	.loc 1 1839 0
	ldr	r4, [r7, #12]	@ float
	ldr	r3, .L402
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	ldr	r1, .L402+4
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r6, r0
	ldr	r4, [r7, #16]	@ float
	ldr	r3, .L402
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	mov	r1, #1107296256
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r5, r0
	ldr	r4, [r7, #4]	@ float
	ldr	r3, .L402
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	ldr	r1, .L402+4
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r4, r0
	ldr	r8, [r7, #8]	@ float
	ldr	r3, .L402
	ldr	r3, [r3]
	mov	r0, r3
	bl	__aeabi_i2f
	mov	r3, r0
	mov	r0, r8
	mov	r1, r3
	bl	__aeabi_fdiv
	mov	r3, r0
	mov	r0, r3
	mov	r1, #1107296256
	bl	__aeabi_fadd
	mov	r3, r0
	mov	r0, r3
	bl	__aeabi_f2iz
	mov	r3, r0
	mov	r0, r6
	mov	r1, r5
	mov	r2, r4
	bl	setline
	.loc 1 1843 0
	bl	update_lcd
	.loc 1 1844 0
	ldr	r3, .L402+8
	mov	r2, #32768
	strh	r2, [r3, #26]	@ movhi
	.loc 1 1845 0
	movs	r0, #0
	bl	transfer_data
	.loc 1 1846 0
	ldr	r3, .L402+8
	mov	r2, #32768
	strh	r2, [r3, #24]	@ movhi
.LBE56:
	.loc 1 1877 0
	b	.L374
.L403:
	.align	2
.L402:
	.word	zoomlevel
	.word	1111490560
	.word	1073875968
.LFE160:
	.size	main, .-main
	.section	.debug_frame,"",%progbits
.Lframe0:
	.4byte	.LECIE0-.LSCIE0
.LSCIE0:
	.4byte	0xffffffff
	.byte	0x3
	.ascii	"\000"
	.uleb128 0x1
	.sleb128 -4
	.uleb128 0xe
	.byte	0xc
	.uleb128 0xd
	.uleb128 0
	.align	2
.LECIE0:
.LSFDE0:
	.4byte	.LEFDE0-.LASFDE0
.LASFDE0:
	.4byte	.Lframe0
	.4byte	.LFB112
	.4byte	.LFE112-.LFB112
	.byte	0x4
	.4byte	.LCFI0-.LFB112
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI1-.LCFI0
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE0:
.LSFDE2:
	.4byte	.LEFDE2-.LASFDE2
.LASFDE2:
	.4byte	.Lframe0
	.4byte	.LFB113
	.4byte	.LFE113-.LFB113
	.byte	0x4
	.4byte	.LCFI2-.LFB113
	.byte	0xe
	.uleb128 0x4
	.byte	0x87
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI3-.LCFI2
	.byte	0xe
	.uleb128 0x28
	.byte	0x4
	.4byte	.LCFI4-.LCFI3
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE2:
.LSFDE4:
	.4byte	.LEFDE4-.LASFDE4
.LASFDE4:
	.4byte	.Lframe0
	.4byte	.LFB114
	.4byte	.LFE114-.LFB114
	.byte	0x4
	.4byte	.LCFI5-.LFB114
	.byte	0xe
	.uleb128 0x4
	.byte	0x87
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI6-.LCFI5
	.byte	0xe
	.uleb128 0x18
	.byte	0x4
	.4byte	.LCFI7-.LCFI6
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE4:
.LSFDE6:
	.4byte	.LEFDE6-.LASFDE6
.LASFDE6:
	.4byte	.Lframe0
	.4byte	.LFB115
	.4byte	.LFE115-.LFB115
	.byte	0x4
	.4byte	.LCFI8-.LFB115
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI9-.LCFI8
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE6:
.LSFDE8:
	.4byte	.LEFDE8-.LASFDE8
.LASFDE8:
	.4byte	.Lframe0
	.4byte	.LFB116
	.4byte	.LFE116-.LFB116
	.byte	0x4
	.4byte	.LCFI10-.LFB116
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI11-.LCFI10
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE8:
.LSFDE10:
	.4byte	.LEFDE10-.LASFDE10
.LASFDE10:
	.4byte	.Lframe0
	.4byte	.LFB117
	.4byte	.LFE117-.LFB117
	.byte	0x4
	.4byte	.LCFI12-.LFB117
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI13-.LCFI12
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.4byte	.LCFI14-.LCFI13
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE10:
.LSFDE12:
	.4byte	.LEFDE12-.LASFDE12
.LASFDE12:
	.4byte	.Lframe0
	.4byte	.LFB118
	.4byte	.LFE118-.LFB118
	.byte	0x4
	.4byte	.LCFI15-.LFB118
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI16-.LCFI15
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.4byte	.LCFI17-.LCFI16
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE12:
.LSFDE14:
	.4byte	.LEFDE14-.LASFDE14
.LASFDE14:
	.4byte	.Lframe0
	.4byte	.LFB119
	.4byte	.LFE119-.LFB119
	.byte	0x4
	.4byte	.LCFI18-.LFB119
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI19-.LCFI18
	.byte	0xe
	.uleb128 0x18
	.byte	0x4
	.4byte	.LCFI20-.LCFI19
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE14:
.LSFDE16:
	.4byte	.LEFDE16-.LASFDE16
.LASFDE16:
	.4byte	.Lframe0
	.4byte	.LFB120
	.4byte	.LFE120-.LFB120
	.byte	0x4
	.4byte	.LCFI21-.LFB120
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI22-.LCFI21
	.byte	0xe
	.uleb128 0x18
	.byte	0x4
	.4byte	.LCFI23-.LCFI22
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE16:
.LSFDE18:
	.4byte	.LEFDE18-.LASFDE18
.LASFDE18:
	.4byte	.Lframe0
	.4byte	.LFB121
	.4byte	.LFE121-.LFB121
	.byte	0x4
	.4byte	.LCFI24-.LFB121
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI25-.LCFI24
	.byte	0xe
	.uleb128 0x18
	.byte	0x4
	.4byte	.LCFI26-.LCFI25
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE18:
.LSFDE20:
	.4byte	.LEFDE20-.LASFDE20
.LASFDE20:
	.4byte	.Lframe0
	.4byte	.LFB122
	.4byte	.LFE122-.LFB122
	.byte	0x4
	.4byte	.LCFI27-.LFB122
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI28-.LCFI27
	.byte	0xe
	.uleb128 0x18
	.byte	0x4
	.4byte	.LCFI29-.LCFI28
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE20:
.LSFDE22:
	.4byte	.LEFDE22-.LASFDE22
.LASFDE22:
	.4byte	.Lframe0
	.4byte	.LFB123
	.4byte	.LFE123-.LFB123
	.byte	0x4
	.4byte	.LCFI30-.LFB123
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI31-.LCFI30
	.byte	0xe
	.uleb128 0x18
	.byte	0x4
	.4byte	.LCFI32-.LCFI31
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE22:
.LSFDE24:
	.4byte	.LEFDE24-.LASFDE24
.LASFDE24:
	.4byte	.Lframe0
	.4byte	.LFB124
	.4byte	.LFE124-.LFB124
	.byte	0x4
	.4byte	.LCFI33-.LFB124
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI34-.LCFI33
	.byte	0xe
	.uleb128 0x18
	.byte	0x4
	.4byte	.LCFI35-.LCFI34
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE24:
.LSFDE26:
	.4byte	.LEFDE26-.LASFDE26
.LASFDE26:
	.4byte	.Lframe0
	.4byte	.LFB125
	.4byte	.LFE125-.LFB125
	.byte	0x4
	.4byte	.LCFI36-.LFB125
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI37-.LCFI36
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE26:
.LSFDE28:
	.4byte	.LEFDE28-.LASFDE28
.LASFDE28:
	.4byte	.Lframe0
	.4byte	.LFB126
	.4byte	.LFE126-.LFB126
	.byte	0x4
	.4byte	.LCFI38-.LFB126
	.byte	0xe
	.uleb128 0x4
	.byte	0x87
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI39-.LCFI38
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.4byte	.LCFI40-.LCFI39
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE28:
.LSFDE30:
	.4byte	.LEFDE30-.LASFDE30
.LASFDE30:
	.4byte	.Lframe0
	.4byte	.LFB127
	.4byte	.LFE127-.LFB127
	.byte	0x4
	.4byte	.LCFI41-.LFB127
	.byte	0xe
	.uleb128 0x4
	.byte	0x87
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI42-.LCFI41
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.4byte	.LCFI43-.LCFI42
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE30:
.LSFDE32:
	.4byte	.LEFDE32-.LASFDE32
.LASFDE32:
	.4byte	.Lframe0
	.4byte	.LFB128
	.4byte	.LFE128-.LFB128
	.byte	0x4
	.4byte	.LCFI44-.LFB128
	.byte	0xe
	.uleb128 0x4
	.byte	0x87
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI45-.LCFI44
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.4byte	.LCFI46-.LCFI45
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE32:
.LSFDE34:
	.4byte	.LEFDE34-.LASFDE34
.LASFDE34:
	.4byte	.Lframe0
	.4byte	.LFB129
	.4byte	.LFE129-.LFB129
	.byte	0x4
	.4byte	.LCFI47-.LFB129
	.byte	0xe
	.uleb128 0x4
	.byte	0x87
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI48-.LCFI47
	.byte	0xe
	.uleb128 0x20
	.byte	0x4
	.4byte	.LCFI49-.LCFI48
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE34:
.LSFDE36:
	.4byte	.LEFDE36-.LASFDE36
.LASFDE36:
	.4byte	.Lframe0
	.4byte	.LFB130
	.4byte	.LFE130-.LFB130
	.byte	0x4
	.4byte	.LCFI50-.LFB130
	.byte	0xe
	.uleb128 0x4
	.byte	0x87
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI51-.LCFI50
	.byte	0xe
	.uleb128 0x20
	.byte	0x4
	.4byte	.LCFI52-.LCFI51
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE36:
.LSFDE38:
	.4byte	.LEFDE38-.LASFDE38
.LASFDE38:
	.4byte	.Lframe0
	.4byte	.LFB131
	.4byte	.LFE131-.LFB131
	.byte	0x4
	.4byte	.LCFI53-.LFB131
	.byte	0xe
	.uleb128 0x4
	.byte	0x87
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI54-.LCFI53
	.byte	0xe
	.uleb128 0x20
	.byte	0x4
	.4byte	.LCFI55-.LCFI54
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE38:
.LSFDE40:
	.4byte	.LEFDE40-.LASFDE40
.LASFDE40:
	.4byte	.Lframe0
	.4byte	.LFB132
	.4byte	.LFE132-.LFB132
	.byte	0x4
	.4byte	.LCFI56-.LFB132
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI57-.LCFI56
	.byte	0xe
	.uleb128 0x30
	.byte	0x4
	.4byte	.LCFI58-.LCFI57
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE40:
.LSFDE42:
	.4byte	.LEFDE42-.LASFDE42
.LASFDE42:
	.4byte	.Lframe0
	.4byte	.LFB133
	.4byte	.LFE133-.LFB133
	.byte	0x4
	.4byte	.LCFI59-.LFB133
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI60-.LCFI59
	.byte	0xe
	.uleb128 0x30
	.byte	0x4
	.4byte	.LCFI61-.LCFI60
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE42:
.LSFDE44:
	.4byte	.LEFDE44-.LASFDE44
.LASFDE44:
	.4byte	.Lframe0
	.4byte	.LFB134
	.4byte	.LFE134-.LFB134
	.byte	0x4
	.4byte	.LCFI62-.LFB134
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI63-.LCFI62
	.byte	0xe
	.uleb128 0x30
	.byte	0x4
	.4byte	.LCFI64-.LCFI63
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE44:
.LSFDE46:
	.4byte	.LEFDE46-.LASFDE46
.LASFDE46:
	.4byte	.Lframe0
	.4byte	.LFB135
	.4byte	.LFE135-.LFB135
	.byte	0x4
	.4byte	.LCFI65-.LFB135
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI66-.LCFI65
	.byte	0xe
	.uleb128 0x18
	.byte	0x4
	.4byte	.LCFI67-.LCFI66
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE46:
.LSFDE48:
	.4byte	.LEFDE48-.LASFDE48
.LASFDE48:
	.4byte	.Lframe0
	.4byte	.LFB136
	.4byte	.LFE136-.LFB136
	.byte	0x4
	.4byte	.LCFI68-.LFB136
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI69-.LCFI68
	.byte	0xe
	.uleb128 0x18
	.byte	0x4
	.4byte	.LCFI70-.LCFI69
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE48:
.LSFDE50:
	.4byte	.LEFDE50-.LASFDE50
.LASFDE50:
	.4byte	.Lframe0
	.4byte	.LFB137
	.4byte	.LFE137-.LFB137
	.byte	0x4
	.4byte	.LCFI71-.LFB137
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI72-.LCFI71
	.byte	0xe
	.uleb128 0x18
	.byte	0x4
	.4byte	.LCFI73-.LCFI72
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE50:
.LSFDE52:
	.4byte	.LEFDE52-.LASFDE52
.LASFDE52:
	.4byte	.Lframe0
	.4byte	.LFB138
	.4byte	.LFE138-.LFB138
	.byte	0x4
	.4byte	.LCFI74-.LFB138
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI75-.LCFI74
	.byte	0xe
	.uleb128 0x20
	.byte	0x4
	.4byte	.LCFI76-.LCFI75
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE52:
.LSFDE54:
	.4byte	.LEFDE54-.LASFDE54
.LASFDE54:
	.4byte	.Lframe0
	.4byte	.LFB139
	.4byte	.LFE139-.LFB139
	.byte	0x4
	.4byte	.LCFI77-.LFB139
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI78-.LCFI77
	.byte	0xe
	.uleb128 0x20
	.byte	0x4
	.4byte	.LCFI79-.LCFI78
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE54:
.LSFDE56:
	.4byte	.LEFDE56-.LASFDE56
.LASFDE56:
	.4byte	.Lframe0
	.4byte	.LFB140
	.4byte	.LFE140-.LFB140
	.byte	0x4
	.4byte	.LCFI80-.LFB140
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI81-.LCFI80
	.byte	0xe
	.uleb128 0x20
	.byte	0x4
	.4byte	.LCFI82-.LCFI81
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE56:
.LSFDE58:
	.4byte	.LEFDE58-.LASFDE58
.LASFDE58:
	.4byte	.Lframe0
	.4byte	.LFB141
	.4byte	.LFE141-.LFB141
	.byte	0x4
	.4byte	.LCFI83-.LFB141
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI84-.LCFI83
	.byte	0xe
	.uleb128 0x18
	.byte	0x4
	.4byte	.LCFI85-.LCFI84
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE58:
.LSFDE60:
	.4byte	.LEFDE60-.LASFDE60
.LASFDE60:
	.4byte	.Lframe0
	.4byte	.LFB142
	.4byte	.LFE142-.LFB142
	.byte	0x4
	.4byte	.LCFI86-.LFB142
	.byte	0xe
	.uleb128 0x4
	.byte	0x87
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI87-.LCFI86
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.4byte	.LCFI88-.LCFI87
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE60:
.LSFDE62:
	.4byte	.LEFDE62-.LASFDE62
.LASFDE62:
	.4byte	.Lframe0
	.4byte	.LFB143
	.4byte	.LFE143-.LFB143
	.byte	0x4
	.4byte	.LCFI89-.LFB143
	.byte	0xe
	.uleb128 0x10
	.byte	0x84
	.uleb128 0x4
	.byte	0x85
	.uleb128 0x3
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI90-.LCFI89
	.byte	0xe
	.uleb128 0x50
	.byte	0x4
	.4byte	.LCFI91-.LCFI90
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE62:
.LSFDE64:
	.4byte	.LEFDE64-.LASFDE64
.LASFDE64:
	.4byte	.Lframe0
	.4byte	.LFB144
	.4byte	.LFE144-.LFB144
	.byte	0x4
	.4byte	.LCFI92-.LFB144
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI93-.LCFI92
	.byte	0xe
	.uleb128 0x18
	.byte	0x4
	.4byte	.LCFI94-.LCFI93
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE64:
.LSFDE66:
	.4byte	.LEFDE66-.LASFDE66
.LASFDE66:
	.4byte	.Lframe0
	.4byte	.LFB145
	.4byte	.LFE145-.LFB145
	.byte	0x4
	.4byte	.LCFI95-.LFB145
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI96-.LCFI95
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.4byte	.LCFI97-.LCFI96
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE66:
.LSFDE68:
	.4byte	.LEFDE68-.LASFDE68
.LASFDE68:
	.4byte	.Lframe0
	.4byte	.LFB146
	.4byte	.LFE146-.LFB146
	.byte	0x4
	.4byte	.LCFI98-.LFB146
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI99-.LCFI98
	.byte	0xe
	.uleb128 0x20
	.byte	0x4
	.4byte	.LCFI100-.LCFI99
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE68:
.LSFDE70:
	.4byte	.LEFDE70-.LASFDE70
.LASFDE70:
	.4byte	.Lframe0
	.4byte	.LFB147
	.4byte	.LFE147-.LFB147
	.byte	0x4
	.4byte	.LCFI101-.LFB147
	.byte	0xe
	.uleb128 0x4
	.byte	0x87
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI102-.LCFI101
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE70:
.LSFDE72:
	.4byte	.LEFDE72-.LASFDE72
.LASFDE72:
	.4byte	.Lframe0
	.4byte	.LFB148
	.4byte	.LFE148-.LFB148
	.byte	0x4
	.4byte	.LCFI103-.LFB148
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI104-.LCFI103
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE72:
.LSFDE74:
	.4byte	.LEFDE74-.LASFDE74
.LASFDE74:
	.4byte	.Lframe0
	.4byte	.LFB149
	.4byte	.LFE149-.LFB149
	.byte	0x4
	.4byte	.LCFI105-.LFB149
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI106-.LCFI105
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.4byte	.LCFI107-.LCFI106
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE74:
.LSFDE76:
	.4byte	.LEFDE76-.LASFDE76
.LASFDE76:
	.4byte	.Lframe0
	.4byte	.LFB150
	.4byte	.LFE150-.LFB150
	.byte	0x4
	.4byte	.LCFI108-.LFB150
	.byte	0xe
	.uleb128 0x4
	.byte	0x87
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI109-.LCFI108
	.byte	0xe
	.uleb128 0x20
	.byte	0x4
	.4byte	.LCFI110-.LCFI109
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE76:
.LSFDE78:
	.4byte	.LEFDE78-.LASFDE78
.LASFDE78:
	.4byte	.Lframe0
	.4byte	.LFB151
	.4byte	.LFE151-.LFB151
	.byte	0x4
	.4byte	.LCFI111-.LFB151
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI112-.LCFI111
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE78:
.LSFDE80:
	.4byte	.LEFDE80-.LASFDE80
.LASFDE80:
	.4byte	.Lframe0
	.4byte	.LFB152
	.4byte	.LFE152-.LFB152
	.byte	0x4
	.4byte	.LCFI113-.LFB152
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI114-.LCFI113
	.byte	0xe
	.uleb128 0x18
	.byte	0x4
	.4byte	.LCFI115-.LCFI114
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE80:
.LSFDE82:
	.4byte	.LEFDE82-.LASFDE82
.LASFDE82:
	.4byte	.Lframe0
	.4byte	.LFB153
	.4byte	.LFE153-.LFB153
	.byte	0x4
	.4byte	.LCFI116-.LFB153
	.byte	0xe
	.uleb128 0x10
	.byte	0x84
	.uleb128 0x4
	.byte	0x85
	.uleb128 0x3
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI117-.LCFI116
	.byte	0xe
	.uleb128 0x60
	.byte	0x4
	.4byte	.LCFI118-.LCFI117
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE82:
.LSFDE84:
	.4byte	.LEFDE84-.LASFDE84
.LASFDE84:
	.4byte	.Lframe0
	.4byte	.LFB154
	.4byte	.LFE154-.LFB154
	.byte	0x4
	.4byte	.LCFI119-.LFB154
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI120-.LCFI119
	.byte	0xe
	.uleb128 0x18
	.byte	0x4
	.4byte	.LCFI121-.LCFI120
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE84:
.LSFDE86:
	.4byte	.LEFDE86-.LASFDE86
.LASFDE86:
	.4byte	.Lframe0
	.4byte	.LFB155
	.4byte	.LFE155-.LFB155
	.byte	0x4
	.4byte	.LCFI122-.LFB155
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.4byte	.LCFI123-.LCFI122
	.byte	0xe
	.uleb128 0x18
	.byte	0x87
	.uleb128 0x6
	.byte	0x8e
	.uleb128 0x5
	.byte	0x4
	.4byte	.LCFI124-.LCFI123
	.byte	0xe
	.uleb128 0x28
	.byte	0x4
	.4byte	.LCFI125-.LCFI124
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE86:
.LSFDE88:
	.4byte	.LEFDE88-.LASFDE88
.LASFDE88:
	.4byte	.Lframe0
	.4byte	.LFB156
	.4byte	.LFE156-.LFB156
	.byte	0x4
	.4byte	.LCFI126-.LFB156
	.byte	0xe
	.uleb128 0xc
	.byte	0x84
	.uleb128 0x3
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI127-.LCFI126
	.byte	0xe
	.uleb128 0x28
	.byte	0x4
	.4byte	.LCFI128-.LCFI127
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE88:
.LSFDE90:
	.4byte	.LEFDE90-.LASFDE90
.LASFDE90:
	.4byte	.Lframe0
	.4byte	.LFB157
	.4byte	.LFE157-.LFB157
	.byte	0x4
	.4byte	.LCFI129-.LFB157
	.byte	0xe
	.uleb128 0xc
	.byte	0x84
	.uleb128 0x3
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI130-.LCFI129
	.byte	0xe
	.uleb128 0x28
	.byte	0x4
	.4byte	.LCFI131-.LCFI130
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE90:
.LSFDE92:
	.4byte	.LEFDE92-.LASFDE92
.LASFDE92:
	.4byte	.Lframe0
	.4byte	.LFB158
	.4byte	.LFE158-.LFB158
	.byte	0x4
	.4byte	.LCFI132-.LFB158
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI133-.LCFI132
	.byte	0xe
	.uleb128 0x20
	.byte	0x4
	.4byte	.LCFI134-.LCFI133
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE92:
.LSFDE94:
	.4byte	.LEFDE94-.LASFDE94
.LASFDE94:
	.4byte	.Lframe0
	.4byte	.LFB159
	.4byte	.LFE159-.LFB159
	.byte	0x4
	.4byte	.LCFI135-.LFB159
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI136-.LCFI135
	.byte	0xe
	.uleb128 0x18
	.byte	0x4
	.4byte	.LCFI137-.LCFI136
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE94:
.LSFDE96:
	.4byte	.LEFDE96-.LASFDE96
.LASFDE96:
	.4byte	.Lframe0
	.4byte	.LFB160
	.4byte	.LFE160-.LFB160
	.byte	0x4
	.4byte	.LCFI138-.LFB160
	.byte	0xe
	.uleb128 0x18
	.byte	0x84
	.uleb128 0x6
	.byte	0x85
	.uleb128 0x5
	.byte	0x86
	.uleb128 0x4
	.byte	0x87
	.uleb128 0x3
	.byte	0x88
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI139-.LCFI138
	.byte	0xe
	.uleb128 0x80
	.byte	0x4
	.4byte	.LCFI140-.LCFI139
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x78
	.align	2
.LEFDE96:
	.text
.Letext0:
	.file 2 "/Applications/CrossWorks for ARM 3.1/include/stdint.h"
	.file 3 "/Users/Sean/Documents/CrossWorks Projects/Calchack_F4/stm32f4xx.h"
	.file 4 "/Users/Sean/Documents/CrossWorks Projects/Calchack_F4/stm32f4xx_gpio.h"
	.file 5 "/Users/Sean/Documents/CrossWorks Projects/Calchack_F4/font5x8.h"
	.file 6 "/Users/Sean/Library/Rowley Associates Limited/CrossWorks for ARM/v3/packages/targets/CMSIS_3/CMSIS/Include/core_cm4.h"
	.file 7 "/Users/Sean/Documents/CrossWorks Projects/Calchack_F4/os.h"
	.section	.debug_info,"",%progbits
.Ldebug_info0:
	.4byte	0x1a99
	.2byte	0x4
	.4byte	.Ldebug_abbrev0
	.byte	0x4
	.uleb128 0x1
	.4byte	.LASF192
	.byte	0x1
	.4byte	.LASF193
	.4byte	.Ldebug_ranges0+0
	.4byte	0
	.4byte	.Ldebug_line0
	.uleb128 0x2
	.byte	0x1
	.byte	0x6
	.4byte	.LASF0
	.uleb128 0x3
	.4byte	.LASF3
	.byte	0x2
	.byte	0xf
	.4byte	0x33
	.uleb128 0x2
	.byte	0x1
	.byte	0x8
	.4byte	.LASF1
	.uleb128 0x2
	.byte	0x2
	.byte	0x5
	.4byte	.LASF2
	.uleb128 0x3
	.4byte	.LASF4
	.byte	0x2
	.byte	0x15
	.4byte	0x4c
	.uleb128 0x2
	.byte	0x2
	.byte	0x7
	.4byte	.LASF5
	.uleb128 0x3
	.4byte	.LASF6
	.byte	0x2
	.byte	0x16
	.4byte	0x5e
	.uleb128 0x4
	.byte	0x4
	.byte	0x5
	.ascii	"int\000"
	.uleb128 0x3
	.4byte	.LASF7
	.byte	0x2
	.byte	0x17
	.4byte	0x70
	.uleb128 0x2
	.byte	0x4
	.byte	0x7
	.4byte	.LASF8
	.uleb128 0x2
	.byte	0x8
	.byte	0x5
	.4byte	.LASF9
	.uleb128 0x3
	.4byte	.LASF10
	.byte	0x2
	.byte	0x24
	.4byte	0x89
	.uleb128 0x2
	.byte	0x8
	.byte	0x7
	.4byte	.LASF11
	.uleb128 0x2
	.byte	0x4
	.byte	0x7
	.4byte	.LASF12
	.uleb128 0x5
	.4byte	0x65
	.uleb128 0x6
	.4byte	0x65
	.4byte	0xac
	.uleb128 0x7
	.4byte	0x90
	.byte	0x1
	.byte	0
	.uleb128 0x5
	.4byte	0x41
	.uleb128 0x5
	.4byte	0x53
	.uleb128 0x8
	.byte	0x1
	.byte	0x3
	.2byte	0x1f9
	.4byte	0xcc
	.uleb128 0x9
	.4byte	.LASF13
	.sleb128 0
	.uleb128 0x9
	.4byte	.LASF14
	.sleb128 1
	.byte	0
	.uleb128 0xa
	.byte	0x28
	.byte	0x3
	.2byte	0x3d4
	.4byte	0x158
	.uleb128 0xb
	.4byte	.LASF15
	.byte	0x3
	.2byte	0x3d6
	.4byte	0x97
	.byte	0
	.uleb128 0xb
	.4byte	.LASF16
	.byte	0x3
	.2byte	0x3d7
	.4byte	0x97
	.byte	0x4
	.uleb128 0xb
	.4byte	.LASF17
	.byte	0x3
	.2byte	0x3d8
	.4byte	0x97
	.byte	0x8
	.uleb128 0xb
	.4byte	.LASF18
	.byte	0x3
	.2byte	0x3d9
	.4byte	0x97
	.byte	0xc
	.uleb128 0xc
	.ascii	"IDR\000"
	.byte	0x3
	.2byte	0x3da
	.4byte	0x97
	.byte	0x10
	.uleb128 0xc
	.ascii	"ODR\000"
	.byte	0x3
	.2byte	0x3db
	.4byte	0x97
	.byte	0x14
	.uleb128 0xb
	.4byte	.LASF19
	.byte	0x3
	.2byte	0x3dc
	.4byte	0xac
	.byte	0x18
	.uleb128 0xb
	.4byte	.LASF20
	.byte	0x3
	.2byte	0x3dd
	.4byte	0xac
	.byte	0x1a
	.uleb128 0xb
	.4byte	.LASF21
	.byte	0x3
	.2byte	0x3de
	.4byte	0x97
	.byte	0x1c
	.uleb128 0xc
	.ascii	"AFR\000"
	.byte	0x3
	.2byte	0x3df
	.4byte	0x158
	.byte	0x20
	.byte	0
	.uleb128 0x5
	.4byte	0x9c
	.uleb128 0xd
	.4byte	.LASF22
	.byte	0x3
	.2byte	0x3e0
	.4byte	0xcc
	.uleb128 0xe
	.byte	0x1
	.byte	0x4
	.byte	0x42
	.4byte	0x18a
	.uleb128 0x9
	.4byte	.LASF23
	.sleb128 0
	.uleb128 0x9
	.4byte	.LASF24
	.sleb128 1
	.uleb128 0x9
	.4byte	.LASF25
	.sleb128 2
	.uleb128 0x9
	.4byte	.LASF26
	.sleb128 3
	.byte	0
	.uleb128 0x3
	.4byte	.LASF27
	.byte	0x4
	.byte	0x47
	.4byte	0x169
	.uleb128 0xe
	.byte	0x1
	.byte	0x4
	.byte	0x4f
	.4byte	0x1aa
	.uleb128 0x9
	.4byte	.LASF28
	.sleb128 0
	.uleb128 0x9
	.4byte	.LASF29
	.sleb128 1
	.byte	0
	.uleb128 0x3
	.4byte	.LASF30
	.byte	0x4
	.byte	0x52
	.4byte	0x195
	.uleb128 0xe
	.byte	0x1
	.byte	0x4
	.byte	0x5a
	.4byte	0x1d6
	.uleb128 0x9
	.4byte	.LASF31
	.sleb128 0
	.uleb128 0x9
	.4byte	.LASF32
	.sleb128 1
	.uleb128 0x9
	.4byte	.LASF33
	.sleb128 2
	.uleb128 0x9
	.4byte	.LASF34
	.sleb128 3
	.byte	0
	.uleb128 0x3
	.4byte	.LASF35
	.byte	0x4
	.byte	0x5f
	.4byte	0x1b5
	.uleb128 0xe
	.byte	0x1
	.byte	0x4
	.byte	0x6e
	.4byte	0x1fc
	.uleb128 0x9
	.4byte	.LASF36
	.sleb128 0
	.uleb128 0x9
	.4byte	.LASF37
	.sleb128 1
	.uleb128 0x9
	.4byte	.LASF38
	.sleb128 2
	.byte	0
	.uleb128 0x3
	.4byte	.LASF39
	.byte	0x4
	.byte	0x72
	.4byte	0x1e1
	.uleb128 0xf
	.byte	0x8
	.byte	0x4
	.byte	0x84
	.4byte	0x24c
	.uleb128 0x10
	.4byte	.LASF40
	.byte	0x4
	.byte	0x86
	.4byte	0x65
	.byte	0
	.uleb128 0x10
	.4byte	.LASF41
	.byte	0x4
	.byte	0x89
	.4byte	0x18a
	.byte	0x4
	.uleb128 0x10
	.4byte	.LASF42
	.byte	0x4
	.byte	0x8c
	.4byte	0x1d6
	.byte	0x5
	.uleb128 0x10
	.4byte	.LASF43
	.byte	0x4
	.byte	0x8f
	.4byte	0x1aa
	.byte	0x6
	.uleb128 0x10
	.4byte	.LASF44
	.byte	0x4
	.byte	0x92
	.4byte	0x1fc
	.byte	0x7
	.byte	0
	.uleb128 0x3
	.4byte	.LASF45
	.byte	0x4
	.byte	0x94
	.4byte	0x207
	.uleb128 0x2
	.byte	0x4
	.byte	0x4
	.4byte	.LASF46
	.uleb128 0x2
	.byte	0x8
	.byte	0x4
	.4byte	.LASF47
	.uleb128 0xa
	.byte	0x10
	.byte	0x1
	.2byte	0x107
	.4byte	0x29b
	.uleb128 0xc
	.ascii	"x\000"
	.byte	0x1
	.2byte	0x108
	.4byte	0x257
	.byte	0
	.uleb128 0xc
	.ascii	"y\000"
	.byte	0x1
	.2byte	0x109
	.4byte	0x257
	.byte	0x4
	.uleb128 0xc
	.ascii	"z\000"
	.byte	0x1
	.2byte	0x10a
	.4byte	0x257
	.byte	0x8
	.uleb128 0xc
	.ascii	"w\000"
	.byte	0x1
	.2byte	0x10b
	.4byte	0x5e
	.byte	0xc
	.byte	0
	.uleb128 0xd
	.4byte	.LASF48
	.byte	0x1
	.2byte	0x10c
	.4byte	0x265
	.uleb128 0xa
	.byte	0x8
	.byte	0x1
	.2byte	0x10f
	.4byte	0x2c7
	.uleb128 0xc
	.ascii	"x\000"
	.byte	0x1
	.2byte	0x110
	.4byte	0x257
	.byte	0
	.uleb128 0xc
	.ascii	"y\000"
	.byte	0x1
	.2byte	0x111
	.4byte	0x257
	.byte	0x4
	.byte	0
	.uleb128 0xd
	.4byte	.LASF49
	.byte	0x1
	.2byte	0x112
	.4byte	0x2a7
	.uleb128 0xa
	.byte	0xc
	.byte	0x1
	.2byte	0x115
	.4byte	0x2fe
	.uleb128 0xc
	.ascii	"x\000"
	.byte	0x1
	.2byte	0x116
	.4byte	0x257
	.byte	0
	.uleb128 0xc
	.ascii	"y\000"
	.byte	0x1
	.2byte	0x117
	.4byte	0x257
	.byte	0x4
	.uleb128 0xc
	.ascii	"z\000"
	.byte	0x1
	.2byte	0x118
	.4byte	0x257
	.byte	0x8
	.byte	0
	.uleb128 0xd
	.4byte	.LASF50
	.byte	0x1
	.2byte	0x119
	.4byte	0x2d3
	.uleb128 0x11
	.4byte	.LASF53
	.byte	0x1
	.2byte	0x13e
	.4byte	.LFB112
	.4byte	.LFE112-.LFB112
	.uleb128 0x1
	.byte	0x9c
	.uleb128 0x12
	.4byte	.LASF194
	.byte	0x1
	.2byte	0x14a
	.4byte	.LFB113
	.4byte	.LFE113-.LFB113
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x407
	.uleb128 0x13
	.4byte	.LBB2
	.4byte	.LBE2-.LBB2
	.4byte	0x3ed
	.uleb128 0x14
	.ascii	"i1\000"
	.byte	0x1
	.2byte	0x14c
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x15
	.4byte	.LBB3
	.4byte	.LBE3-.LBB3
	.uleb128 0x14
	.ascii	"i2\000"
	.byte	0x1
	.2byte	0x14e
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -16
	.uleb128 0x15
	.4byte	.LBB4
	.4byte	.LBE4-.LBB4
	.uleb128 0x14
	.ascii	"j\000"
	.byte	0x1
	.2byte	0x151
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x13
	.4byte	.LBB5
	.4byte	.LBE5-.LBB5
	.4byte	0x397
	.uleb128 0x16
	.4byte	.LASF51
	.byte	0x1
	.2byte	0x156
	.4byte	0x407
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x13
	.4byte	.LBB6
	.4byte	.LBE6-.LBB6
	.4byte	0x3b4
	.uleb128 0x16
	.4byte	.LASF51
	.byte	0x1
	.2byte	0x156
	.4byte	0x407
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.byte	0
	.uleb128 0x13
	.4byte	.LBB7
	.4byte	.LBE7-.LBB7
	.4byte	0x3d1
	.uleb128 0x16
	.4byte	.LASF51
	.byte	0x1
	.2byte	0x15a
	.4byte	0x407
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.byte	0
	.uleb128 0x15
	.4byte	.LBB8
	.4byte	.LBE8-.LBB8
	.uleb128 0x16
	.4byte	.LASF51
	.byte	0x1
	.2byte	0x15a
	.4byte	0x407
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x15
	.4byte	.LBB9
	.4byte	.LBE9-.LBB9
	.uleb128 0x16
	.4byte	.LASF51
	.byte	0x1
	.2byte	0x15f
	.4byte	0x407
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.uleb128 0x5
	.4byte	0x5e
	.uleb128 0x17
	.4byte	.LASF55
	.byte	0x1
	.2byte	0x163
	.4byte	.LFB114
	.4byte	.LFE114-.LFB114
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x44a
	.uleb128 0x18
	.ascii	"us\000"
	.byte	0x1
	.2byte	0x163
	.4byte	0x65
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x15
	.4byte	.LBB10
	.4byte	.LBE10-.LBB10
	.uleb128 0x16
	.4byte	.LASF52
	.byte	0x1
	.2byte	0x167
	.4byte	0x97
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.byte	0
	.byte	0
	.uleb128 0x11
	.4byte	.LASF54
	.byte	0x1
	.2byte	0x16d
	.4byte	.LFB115
	.4byte	.LFE115-.LFB115
	.uleb128 0x1
	.byte	0x9c
	.uleb128 0x19
	.4byte	.LASF114
	.byte	0x1
	.2byte	0x18d
	.4byte	0x28
	.4byte	.LFB116
	.4byte	.LFE116-.LFB116
	.uleb128 0x1
	.byte	0x9c
	.uleb128 0x1a
	.4byte	.LASF56
	.byte	0x1
	.2byte	0x1a3
	.4byte	0x41
	.4byte	.LFB117
	.4byte	.LFE117-.LFB117
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x4ba
	.uleb128 0x14
	.ascii	"bit\000"
	.byte	0x1
	.2byte	0x1a5
	.4byte	0x28
	.uleb128 0x2
	.byte	0x91
	.sleb128 -9
	.uleb128 0x16
	.4byte	.LASF57
	.byte	0x1
	.2byte	0x1a6
	.4byte	0x28
	.uleb128 0x2
	.byte	0x91
	.sleb128 -10
	.uleb128 0x16
	.4byte	.LASF58
	.byte	0x1
	.2byte	0x1a7
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -16
	.byte	0
	.uleb128 0x1a
	.4byte	.LASF59
	.byte	0x1
	.2byte	0x1cf
	.4byte	0x28
	.4byte	.LFB118
	.4byte	.LFE118-.LFB118
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x4e4
	.uleb128 0x16
	.4byte	.LASF60
	.byte	0x1
	.2byte	0x1d1
	.4byte	0x41
	.uleb128 0x2
	.byte	0x91
	.sleb128 -10
	.byte	0
	.uleb128 0x1b
	.4byte	.LASF61
	.byte	0x1
	.2byte	0x1d9
	.4byte	.LFB119
	.4byte	.LFE119-.LFB119
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x519
	.uleb128 0x1c
	.4byte	.LASF57
	.byte	0x1
	.2byte	0x1d9
	.4byte	0x28
	.uleb128 0x2
	.byte	0x91
	.sleb128 -17
	.uleb128 0x14
	.ascii	"bit\000"
	.byte	0x1
	.2byte	0x1dc
	.4byte	0x28
	.uleb128 0x2
	.byte	0x91
	.sleb128 -9
	.byte	0
	.uleb128 0x1b
	.4byte	.LASF62
	.byte	0x1
	.2byte	0x1f0
	.4byte	.LFB120
	.4byte	.LFE120-.LFB120
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x55b
	.uleb128 0x1c
	.4byte	.LASF63
	.byte	0x1
	.2byte	0x1f0
	.4byte	0x55b
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x1c
	.4byte	.LASF64
	.byte	0x1
	.2byte	0x1f0
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x14
	.ascii	"i\000"
	.byte	0x1
	.2byte	0x1f2
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.byte	0
	.uleb128 0x1d
	.byte	0x4
	.4byte	0x28
	.uleb128 0x1b
	.4byte	.LASF65
	.byte	0x1
	.2byte	0x1fa
	.4byte	.LFB121
	.4byte	.LFE121-.LFB121
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x5a5
	.uleb128 0x18
	.ascii	"key\000"
	.byte	0x1
	.2byte	0x1fa
	.4byte	0x41
	.uleb128 0x2
	.byte	0x91
	.sleb128 -18
	.uleb128 0x16
	.4byte	.LASF66
	.byte	0x1
	.2byte	0x1fc
	.4byte	0x28
	.uleb128 0x2
	.byte	0x91
	.sleb128 -9
	.uleb128 0x16
	.4byte	.LASF67
	.byte	0x1
	.2byte	0x1fd
	.4byte	0x28
	.uleb128 0x2
	.byte	0x91
	.sleb128 -10
	.byte	0
	.uleb128 0x1b
	.4byte	.LASF68
	.byte	0x1
	.2byte	0x209
	.4byte	.LFB122
	.4byte	.LFE122-.LFB122
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x5f1
	.uleb128 0x1c
	.4byte	.LASF69
	.byte	0x1
	.2byte	0x209
	.4byte	0x5f1
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x1c
	.4byte	.LASF64
	.byte	0x1
	.2byte	0x209
	.4byte	0x41
	.uleb128 0x2
	.byte	0x91
	.sleb128 -22
	.uleb128 0x15
	.4byte	.LBB11
	.4byte	.LBE11-.LBB11
	.uleb128 0x14
	.ascii	"i\000"
	.byte	0x1
	.2byte	0x20b
	.4byte	0x41
	.uleb128 0x2
	.byte	0x91
	.sleb128 -10
	.byte	0
	.byte	0
	.uleb128 0x1d
	.byte	0x4
	.4byte	0x41
	.uleb128 0x1b
	.4byte	.LASF70
	.byte	0x1
	.2byte	0x211
	.4byte	.LFB123
	.4byte	.LFE123-.LFB123
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x69d
	.uleb128 0x1c
	.4byte	.LASF71
	.byte	0x1
	.2byte	0x211
	.4byte	0x28
	.uleb128 0x2
	.byte	0x91
	.sleb128 -17
	.uleb128 0x1c
	.4byte	.LASF64
	.byte	0x1
	.2byte	0x211
	.4byte	0x41
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x1c
	.4byte	.LASF72
	.byte	0x1
	.2byte	0x211
	.4byte	0x55b
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x16
	.4byte	.LASF73
	.byte	0x1
	.2byte	0x213
	.4byte	0x41
	.uleb128 0x2
	.byte	0x91
	.sleb128 -10
	.uleb128 0x16
	.4byte	.LASF66
	.byte	0x1
	.2byte	0x216
	.4byte	0x28
	.uleb128 0x2
	.byte	0x91
	.sleb128 -13
	.uleb128 0x16
	.4byte	.LASF67
	.byte	0x1
	.2byte	0x217
	.4byte	0x28
	.uleb128 0x2
	.byte	0x91
	.sleb128 -14
	.uleb128 0x16
	.4byte	.LASF74
	.byte	0x1
	.2byte	0x21f
	.4byte	0x28
	.uleb128 0x2
	.byte	0x91
	.sleb128 -15
	.uleb128 0x16
	.4byte	.LASF75
	.byte	0x1
	.2byte	0x220
	.4byte	0x28
	.uleb128 0x2
	.byte	0x91
	.sleb128 -16
	.uleb128 0x15
	.4byte	.LBB12
	.4byte	.LBE12-.LBB12
	.uleb128 0x14
	.ascii	"i\000"
	.byte	0x1
	.2byte	0x21a
	.4byte	0x41
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.byte	0
	.byte	0
	.uleb128 0x1b
	.4byte	.LASF76
	.byte	0x1
	.2byte	0x225
	.4byte	.LFB124
	.4byte	.LFE124-.LFB124
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x716
	.uleb128 0x1c
	.4byte	.LASF72
	.byte	0x1
	.2byte	0x225
	.4byte	0x55b
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x1c
	.4byte	.LASF64
	.byte	0x1
	.2byte	0x225
	.4byte	0x41
	.uleb128 0x2
	.byte	0x91
	.sleb128 -22
	.uleb128 0x16
	.4byte	.LASF73
	.byte	0x1
	.2byte	0x227
	.4byte	0x41
	.uleb128 0x2
	.byte	0x91
	.sleb128 -10
	.uleb128 0x16
	.4byte	.LASF74
	.byte	0x1
	.2byte	0x22d
	.4byte	0x28
	.uleb128 0x2
	.byte	0x91
	.sleb128 -13
	.uleb128 0x16
	.4byte	.LASF75
	.byte	0x1
	.2byte	0x22e
	.4byte	0x28
	.uleb128 0x2
	.byte	0x91
	.sleb128 -14
	.uleb128 0x15
	.4byte	.LBB13
	.4byte	.LBE13-.LBB13
	.uleb128 0x14
	.ascii	"i\000"
	.byte	0x1
	.2byte	0x228
	.4byte	0x41
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.byte	0
	.byte	0
	.uleb128 0x11
	.4byte	.LASF77
	.byte	0x1
	.2byte	0x234
	.4byte	.LFB125
	.4byte	.LFE125-.LFB125
	.uleb128 0x1
	.byte	0x9c
	.uleb128 0x17
	.4byte	.LASF51
	.byte	0x1
	.2byte	0x24c
	.4byte	.LFB126
	.4byte	.LFE126-.LFB126
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x765
	.uleb128 0x14
	.ascii	"x\000"
	.byte	0x1
	.2byte	0x24e
	.4byte	0x407
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x15
	.4byte	.LBB14
	.4byte	.LBE14-.LBB14
	.uleb128 0x16
	.4byte	.LASF52
	.byte	0x1
	.2byte	0x24f
	.4byte	0x97
	.uleb128 0x2
	.byte	0x91
	.sleb128 -16
	.byte	0
	.byte	0
	.uleb128 0x17
	.4byte	.LASF78
	.byte	0x1
	.2byte	0x253
	.4byte	.LFB127
	.4byte	.LFE127-.LFB127
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x793
	.uleb128 0x15
	.4byte	.LBB15
	.4byte	.LBE15-.LBB15
	.uleb128 0x14
	.ascii	"i\000"
	.byte	0x1
	.2byte	0x255
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.byte	0
	.byte	0
	.uleb128 0x17
	.4byte	.LASF79
	.byte	0x1
	.2byte	0x25a
	.4byte	.LFB128
	.4byte	.LFE128-.LFB128
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x7c1
	.uleb128 0x15
	.4byte	.LBB16
	.4byte	.LBE16-.LBB16
	.uleb128 0x14
	.ascii	"i\000"
	.byte	0x1
	.2byte	0x25c
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.byte	0
	.byte	0
	.uleb128 0x17
	.4byte	.LASF80
	.byte	0x1
	.2byte	0x262
	.4byte	.LFB129
	.4byte	.LFE129-.LFB129
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x829
	.uleb128 0x18
	.ascii	"x\000"
	.byte	0x1
	.2byte	0x262
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x18
	.ascii	"y\000"
	.byte	0x1
	.2byte	0x262
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x15
	.4byte	.LBB17
	.4byte	.LBE17-.LBB17
	.uleb128 0x14
	.ascii	"row\000"
	.byte	0x1
	.2byte	0x269
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x14
	.ascii	"bit\000"
	.byte	0x1
	.2byte	0x26a
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -16
	.uleb128 0x16
	.4byte	.LASF81
	.byte	0x1
	.2byte	0x26b
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.byte	0
	.uleb128 0x17
	.4byte	.LASF82
	.byte	0x1
	.2byte	0x26f
	.4byte	.LFB130
	.4byte	.LFE130-.LFB130
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x891
	.uleb128 0x18
	.ascii	"x\000"
	.byte	0x1
	.2byte	0x26f
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x18
	.ascii	"y\000"
	.byte	0x1
	.2byte	0x26f
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x15
	.4byte	.LBB18
	.4byte	.LBE18-.LBB18
	.uleb128 0x14
	.ascii	"row\000"
	.byte	0x1
	.2byte	0x276
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x14
	.ascii	"bit\000"
	.byte	0x1
	.2byte	0x277
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -16
	.uleb128 0x16
	.4byte	.LASF81
	.byte	0x1
	.2byte	0x278
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.byte	0
	.uleb128 0x17
	.4byte	.LASF83
	.byte	0x1
	.2byte	0x27c
	.4byte	.LFB131
	.4byte	.LFE131-.LFB131
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x8f9
	.uleb128 0x18
	.ascii	"x\000"
	.byte	0x1
	.2byte	0x27c
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x18
	.ascii	"y\000"
	.byte	0x1
	.2byte	0x27c
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x15
	.4byte	.LBB19
	.4byte	.LBE19-.LBB19
	.uleb128 0x14
	.ascii	"row\000"
	.byte	0x1
	.2byte	0x283
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x14
	.ascii	"bit\000"
	.byte	0x1
	.2byte	0x284
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -16
	.uleb128 0x16
	.4byte	.LASF81
	.byte	0x1
	.2byte	0x285
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.byte	0
	.uleb128 0x1b
	.4byte	.LASF84
	.byte	0x1
	.2byte	0x289
	.4byte	.LFB132
	.4byte	.LFE132-.LFB132
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x9af
	.uleb128 0x18
	.ascii	"x0\000"
	.byte	0x1
	.2byte	0x289
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x18
	.ascii	"y0\000"
	.byte	0x1
	.2byte	0x289
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x18
	.ascii	"x1\000"
	.byte	0x1
	.2byte	0x289
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x18
	.ascii	"y1\000"
	.byte	0x1
	.2byte	0x289
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x14
	.ascii	"dx\000"
	.byte	0x1
	.2byte	0x28b
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -16
	.uleb128 0x1e
	.ascii	"abs\000"
	.byte	0x1
	.2byte	0x28b
	.4byte	0x5e
	.4byte	0x967
	.uleb128 0x1f
	.byte	0
	.uleb128 0x14
	.ascii	"sx\000"
	.byte	0x1
	.2byte	0x28b
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x14
	.ascii	"dy\000"
	.byte	0x1
	.2byte	0x28c
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x14
	.ascii	"sy\000"
	.byte	0x1
	.2byte	0x28c
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x14
	.ascii	"err\000"
	.byte	0x1
	.2byte	0x28d
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x14
	.ascii	"e2\000"
	.byte	0x1
	.2byte	0x28d
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.byte	0
	.uleb128 0x1b
	.4byte	.LASF85
	.byte	0x1
	.2byte	0x297
	.4byte	.LFB133
	.4byte	.LFE133-.LFB133
	.uleb128 0x1
	.byte	0x9c
	.4byte	0xa65
	.uleb128 0x18
	.ascii	"x0\000"
	.byte	0x1
	.2byte	0x297
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x18
	.ascii	"y0\000"
	.byte	0x1
	.2byte	0x297
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x18
	.ascii	"x1\000"
	.byte	0x1
	.2byte	0x297
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x18
	.ascii	"y1\000"
	.byte	0x1
	.2byte	0x297
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x14
	.ascii	"dx\000"
	.byte	0x1
	.2byte	0x299
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -16
	.uleb128 0x1e
	.ascii	"abs\000"
	.byte	0x1
	.2byte	0x28b
	.4byte	0x5e
	.4byte	0xa1d
	.uleb128 0x1f
	.byte	0
	.uleb128 0x14
	.ascii	"sx\000"
	.byte	0x1
	.2byte	0x299
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x14
	.ascii	"dy\000"
	.byte	0x1
	.2byte	0x29a
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x14
	.ascii	"sy\000"
	.byte	0x1
	.2byte	0x29a
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x14
	.ascii	"err\000"
	.byte	0x1
	.2byte	0x29b
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x14
	.ascii	"e2\000"
	.byte	0x1
	.2byte	0x29b
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.byte	0
	.uleb128 0x1b
	.4byte	.LASF86
	.byte	0x1
	.2byte	0x2a5
	.4byte	.LFB134
	.4byte	.LFE134-.LFB134
	.uleb128 0x1
	.byte	0x9c
	.4byte	0xb1b
	.uleb128 0x18
	.ascii	"x0\000"
	.byte	0x1
	.2byte	0x2a5
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x18
	.ascii	"y0\000"
	.byte	0x1
	.2byte	0x2a5
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x18
	.ascii	"x1\000"
	.byte	0x1
	.2byte	0x2a5
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x18
	.ascii	"y1\000"
	.byte	0x1
	.2byte	0x2a5
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x14
	.ascii	"dx\000"
	.byte	0x1
	.2byte	0x2a7
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -16
	.uleb128 0x1e
	.ascii	"abs\000"
	.byte	0x1
	.2byte	0x28b
	.4byte	0x5e
	.4byte	0xad3
	.uleb128 0x1f
	.byte	0
	.uleb128 0x14
	.ascii	"sx\000"
	.byte	0x1
	.2byte	0x2a7
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x14
	.ascii	"dy\000"
	.byte	0x1
	.2byte	0x2a8
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x14
	.ascii	"sy\000"
	.byte	0x1
	.2byte	0x2a8
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x14
	.ascii	"err\000"
	.byte	0x1
	.2byte	0x2a9
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x14
	.ascii	"e2\000"
	.byte	0x1
	.2byte	0x2a9
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.byte	0
	.uleb128 0x1b
	.4byte	.LASF87
	.byte	0x1
	.2byte	0x2b3
	.4byte	.LFB135
	.4byte	.LFE135-.LFB135
	.uleb128 0x1
	.byte	0x9c
	.4byte	0xb86
	.uleb128 0x18
	.ascii	"x0\000"
	.byte	0x1
	.2byte	0x2b3
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x18
	.ascii	"y0\000"
	.byte	0x1
	.2byte	0x2b3
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -16
	.uleb128 0x18
	.ascii	"x1\000"
	.byte	0x1
	.2byte	0x2b3
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x18
	.ascii	"y1\000"
	.byte	0x1
	.2byte	0x2b3
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x18
	.ascii	"x2\000"
	.byte	0x1
	.2byte	0x2b3
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x18
	.ascii	"y2\000"
	.byte	0x1
	.2byte	0x2b3
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.byte	0
	.uleb128 0x1b
	.4byte	.LASF88
	.byte	0x1
	.2byte	0x2b9
	.4byte	.LFB136
	.4byte	.LFE136-.LFB136
	.uleb128 0x1
	.byte	0x9c
	.4byte	0xbf1
	.uleb128 0x18
	.ascii	"x0\000"
	.byte	0x1
	.2byte	0x2b9
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x18
	.ascii	"y0\000"
	.byte	0x1
	.2byte	0x2b9
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -16
	.uleb128 0x18
	.ascii	"x1\000"
	.byte	0x1
	.2byte	0x2b9
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x18
	.ascii	"y1\000"
	.byte	0x1
	.2byte	0x2b9
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x18
	.ascii	"x2\000"
	.byte	0x1
	.2byte	0x2b9
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x18
	.ascii	"y2\000"
	.byte	0x1
	.2byte	0x2b9
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.byte	0
	.uleb128 0x1b
	.4byte	.LASF89
	.byte	0x1
	.2byte	0x2bf
	.4byte	.LFB137
	.4byte	.LFE137-.LFB137
	.uleb128 0x1
	.byte	0x9c
	.4byte	0xc5c
	.uleb128 0x18
	.ascii	"x0\000"
	.byte	0x1
	.2byte	0x2bf
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x18
	.ascii	"y0\000"
	.byte	0x1
	.2byte	0x2bf
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -16
	.uleb128 0x18
	.ascii	"x1\000"
	.byte	0x1
	.2byte	0x2bf
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x18
	.ascii	"y1\000"
	.byte	0x1
	.2byte	0x2bf
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x18
	.ascii	"x2\000"
	.byte	0x1
	.2byte	0x2bf
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x18
	.ascii	"y2\000"
	.byte	0x1
	.2byte	0x2bf
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.byte	0
	.uleb128 0x1b
	.4byte	.LASF90
	.byte	0x1
	.2byte	0x2c5
	.4byte	.LFB138
	.4byte	.LFE138-.LFB138
	.uleb128 0x1
	.byte	0x9c
	.4byte	0xcc5
	.uleb128 0x18
	.ascii	"x0\000"
	.byte	0x1
	.2byte	0x2c5
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x18
	.ascii	"y0\000"
	.byte	0x1
	.2byte	0x2c5
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x18
	.ascii	"x1\000"
	.byte	0x1
	.2byte	0x2c5
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x18
	.ascii	"y1\000"
	.byte	0x1
	.2byte	0x2c5
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x14
	.ascii	"i\000"
	.byte	0x1
	.2byte	0x2c8
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x14
	.ascii	"j\000"
	.byte	0x1
	.2byte	0x2c8
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -16
	.byte	0
	.uleb128 0x1b
	.4byte	.LASF91
	.byte	0x1
	.2byte	0x2d1
	.4byte	.LFB139
	.4byte	.LFE139-.LFB139
	.uleb128 0x1
	.byte	0x9c
	.4byte	0xd2e
	.uleb128 0x18
	.ascii	"x0\000"
	.byte	0x1
	.2byte	0x2d1
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x18
	.ascii	"y0\000"
	.byte	0x1
	.2byte	0x2d1
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x18
	.ascii	"x1\000"
	.byte	0x1
	.2byte	0x2d1
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x18
	.ascii	"y1\000"
	.byte	0x1
	.2byte	0x2d1
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x14
	.ascii	"i\000"
	.byte	0x1
	.2byte	0x2d4
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x14
	.ascii	"j\000"
	.byte	0x1
	.2byte	0x2d4
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -16
	.byte	0
	.uleb128 0x1b
	.4byte	.LASF92
	.byte	0x1
	.2byte	0x2dd
	.4byte	.LFB140
	.4byte	.LFE140-.LFB140
	.uleb128 0x1
	.byte	0x9c
	.4byte	0xd97
	.uleb128 0x18
	.ascii	"x0\000"
	.byte	0x1
	.2byte	0x2dd
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x18
	.ascii	"y0\000"
	.byte	0x1
	.2byte	0x2dd
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x18
	.ascii	"x1\000"
	.byte	0x1
	.2byte	0x2dd
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x18
	.ascii	"y1\000"
	.byte	0x1
	.2byte	0x2dd
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x14
	.ascii	"i\000"
	.byte	0x1
	.2byte	0x2e0
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x14
	.ascii	"j\000"
	.byte	0x1
	.2byte	0x2e0
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -16
	.byte	0
	.uleb128 0x1b
	.4byte	.LASF93
	.byte	0x1
	.2byte	0x2ea
	.4byte	.LFB141
	.4byte	.LFE141-.LFB141
	.uleb128 0x1
	.byte	0x9c
	.4byte	0xdcc
	.uleb128 0x1c
	.4byte	.LASF94
	.byte	0x1
	.2byte	0x2ea
	.4byte	0xdcc
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x1c
	.4byte	.LASF50
	.byte	0x1
	.2byte	0x2ea
	.4byte	0x2fe
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x1d
	.byte	0x4
	.4byte	0x29b
	.uleb128 0x17
	.4byte	.LASF95
	.byte	0x1
	.2byte	0x2f0
	.4byte	.LFB142
	.4byte	.LFE142-.LFB142
	.uleb128 0x1
	.byte	0x9c
	.4byte	0xdf8
	.uleb128 0x1c
	.4byte	.LASF51
	.byte	0x1
	.2byte	0x2f0
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.byte	0
	.uleb128 0x1b
	.4byte	.LASF96
	.byte	0x1
	.2byte	0x2f7
	.4byte	.LFB143
	.4byte	.LFE143-.LFB143
	.uleb128 0x1
	.byte	0x9c
	.4byte	0xf95
	.uleb128 0x1c
	.4byte	.LASF97
	.byte	0x1
	.2byte	0x2f7
	.4byte	0x5e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -76
	.uleb128 0x16
	.4byte	.LASF98
	.byte	0x1
	.2byte	0x302
	.4byte	0x41
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x16
	.4byte	.LASF99
	.byte	0x1
	.2byte	0x303
	.4byte	0x41
	.uleb128 0x2
	.byte	0x91
	.sleb128 -38
	.uleb128 0x16
	.4byte	.LASF100
	.byte	0x1
	.2byte	0x304
	.4byte	0x41
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x16
	.4byte	.LASF101
	.byte	0x1
	.2byte	0x305
	.4byte	0x41
	.uleb128 0x2
	.byte	0x91
	.sleb128 -34
	.uleb128 0x14
	.ascii	"i\000"
	.byte	0x1
	.2byte	0x306
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x13
	.4byte	.LBB20
	.4byte	.LBE20-.LBB20
	.4byte	0xe84
	.uleb128 0x16
	.4byte	.LASF52
	.byte	0x1
	.2byte	0x30c
	.4byte	0x97
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.byte	0
	.uleb128 0x13
	.4byte	.LBB21
	.4byte	.LBE21-.LBB21
	.4byte	0xea1
	.uleb128 0x16
	.4byte	.LASF52
	.byte	0x1
	.2byte	0x31d
	.4byte	0x97
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.byte	0
	.uleb128 0x13
	.4byte	.LBB22
	.4byte	.LBE22-.LBB22
	.4byte	0xebe
	.uleb128 0x16
	.4byte	.LASF52
	.byte	0x1
	.2byte	0x31f
	.4byte	0x97
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.byte	0
	.uleb128 0x13
	.4byte	.LBB23
	.4byte	.LBE23-.LBB23
	.4byte	0xedb
	.uleb128 0x16
	.4byte	.LASF52
	.byte	0x1
	.2byte	0x321
	.4byte	0x97
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.byte	0
	.uleb128 0x13
	.4byte	.LBB24
	.4byte	.LBE24-.LBB24
	.4byte	0xef8
	.uleb128 0x16
	.4byte	.LASF52
	.byte	0x1
	.2byte	0x323
	.4byte	0x97
	.uleb128 0x2
	.byte	0x91
	.sleb128 -60
	.byte	0
	.uleb128 0x13
	.4byte	.LBB25
	.4byte	.LBE25-.LBB25
	.4byte	0xf15
	.uleb128 0x16
	.4byte	.LASF52
	.byte	0x1
	.2byte	0x325
	.4byte	0x97
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.byte	0
	.uleb128 0x15
	.4byte	.LBB26
	.4byte	.LBE26-.LBB26
	.uleb128 0x14
	.ascii	"i\000"
	.byte	0x1
	.2byte	0x32c
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x15
	.4byte	.LBB27
	.4byte	.LBE27-.LBB27
	.uleb128 0x16
	.4byte	.LASF60
	.byte	0x1
	.2byte	0x32e
	.4byte	0x28
	.uleb128 0x2
	.byte	0x91
	.sleb128 -25
	.uleb128 0x13
	.4byte	.LBB28
	.4byte	.LBE28-.LBB28
	.4byte	0xf61
	.uleb128 0x16
	.4byte	.LASF52
	.byte	0x1
	.2byte	0x332
	.4byte	0x97
	.uleb128 0x3
	.byte	0x91
	.sleb128 -68
	.byte	0
	.uleb128 0x15
	.4byte	.LBB29
	.4byte	.LBE29-.LBB29
	.uleb128 0x14
	.ascii	"j\000"
	.byte	0x1
	.2byte	0x333
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x15
	.4byte	.LBB30
	.4byte	.LBE30-.LBB30
	.uleb128 0x16
	.4byte	.LASF52
	.byte	0x1
	.2byte	0x33e
	.4byte	0x97
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x1b
	.4byte	.LASF102
	.byte	0x1
	.2byte	0x34d
	.4byte	.LFB144
	.4byte	.LFE144-.LFB144
	.uleb128 0x1
	.byte	0x9c
	.4byte	0xfdd
	.uleb128 0x18
	.ascii	"x\000"
	.byte	0x1
	.2byte	0x34d
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x18
	.ascii	"y\000"
	.byte	0x1
	.2byte	0x34d
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x15
	.4byte	.LBB31
	.4byte	.LBE31-.LBB31
	.uleb128 0x14
	.ascii	"i\000"
	.byte	0x1
	.2byte	0x34f
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.byte	0
	.byte	0
	.uleb128 0x1b
	.4byte	.LASF103
	.byte	0x1
	.2byte	0x374
	.4byte	.LFB145
	.4byte	.LFE145-.LFB145
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x1012
	.uleb128 0x1c
	.4byte	.LASF104
	.byte	0x1
	.2byte	0x374
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x1c
	.4byte	.LASF105
	.byte	0x1
	.2byte	0x374
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -16
	.byte	0
	.uleb128 0x1b
	.4byte	.LASF106
	.byte	0x1
	.2byte	0x37e
	.4byte	.LFB146
	.4byte	.LFE146-.LFB146
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x111c
	.uleb128 0x13
	.4byte	.LBB32
	.4byte	.LBE32-.LBB32
	.4byte	0x1044
	.uleb128 0x20
	.4byte	.LASF107
	.byte	0x1
	.2byte	0x382
	.4byte	0x5e
	.uleb128 0x1f
	.byte	0
	.byte	0
	.uleb128 0x13
	.4byte	.LBB33
	.4byte	.LBE33-.LBB33
	.4byte	0x1060
	.uleb128 0x20
	.4byte	.LASF108
	.byte	0x1
	.2byte	0x386
	.4byte	0x5e
	.uleb128 0x1f
	.byte	0
	.byte	0
	.uleb128 0x13
	.4byte	.LBB34
	.4byte	.LBE34-.LBB34
	.4byte	0x107b
	.uleb128 0x14
	.ascii	"i\000"
	.byte	0x1
	.2byte	0x394
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.byte	0
	.uleb128 0x13
	.4byte	.LBB35
	.4byte	.LBE35-.LBB35
	.4byte	0x1096
	.uleb128 0x14
	.ascii	"i\000"
	.byte	0x1
	.2byte	0x399
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -16
	.byte	0
	.uleb128 0x13
	.4byte	.LBB36
	.4byte	.LBE36-.LBB36
	.4byte	0x10c9
	.uleb128 0x14
	.ascii	"i\000"
	.byte	0x1
	.2byte	0x3a0
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x15
	.4byte	.LBB37
	.4byte	.LBE37-.LBB37
	.uleb128 0x20
	.4byte	.LASF109
	.byte	0x1
	.2byte	0x3a7
	.4byte	0x5e
	.uleb128 0x1f
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x13
	.4byte	.LBB38
	.4byte	.LBE38-.LBB38
	.4byte	0x10e6
	.uleb128 0x16
	.4byte	.LASF110
	.byte	0x1
	.2byte	0x3b6
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x13
	.4byte	.LBB39
	.4byte	.LBE39-.LBB39
	.4byte	0x1103
	.uleb128 0x16
	.4byte	.LASF110
	.byte	0x1
	.2byte	0x3c2
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.byte	0
	.uleb128 0x15
	.4byte	.LBB40
	.4byte	.LBE40-.LBB40
	.uleb128 0x20
	.4byte	.LASF107
	.byte	0x1
	.2byte	0x382
	.4byte	0x5e
	.uleb128 0x1f
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x21
	.4byte	.LASF108
	.byte	0x1
	.2byte	0x3dc
	.4byte	.LFB147
	.4byte	.LFE147-.LFB147
	.uleb128 0x1
	.byte	0x9c
	.uleb128 0x1b
	.4byte	.LASF107
	.byte	0x1
	.2byte	0x3ec
	.4byte	.LFB148
	.4byte	.LFE148-.LFB148
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x1165
	.uleb128 0x22
	.4byte	.LASF111
	.byte	0x1
	.2byte	0x3ee
	.4byte	0x5e
	.4byte	0x1156
	.uleb128 0x1f
	.byte	0
	.uleb128 0x20
	.4byte	.LASF112
	.byte	0x1
	.2byte	0x3f7
	.4byte	0x5e
	.uleb128 0x1f
	.byte	0
	.byte	0
	.uleb128 0x1b
	.4byte	.LASF113
	.byte	0x1
	.2byte	0x3f9
	.4byte	.LFB149
	.4byte	.LFE149-.LFB149
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x1193
	.uleb128 0x15
	.4byte	.LBB41
	.4byte	.LBE41-.LBB41
	.uleb128 0x14
	.ascii	"i\000"
	.byte	0x1
	.2byte	0x3fb
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.byte	0
	.byte	0
	.uleb128 0x17
	.4byte	.LASF112
	.byte	0x1
	.2byte	0x401
	.4byte	.LFB150
	.4byte	.LFE150-.LFB150
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x122d
	.uleb128 0x13
	.4byte	.LBB42
	.4byte	.LBE42-.LBB42
	.4byte	0x11c4
	.uleb128 0x14
	.ascii	"i\000"
	.byte	0x1
	.2byte	0x408
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.byte	0
	.uleb128 0x13
	.4byte	.LBB43
	.4byte	.LBE43-.LBB43
	.4byte	0x11df
	.uleb128 0x14
	.ascii	"i\000"
	.byte	0x1
	.2byte	0x40a
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -16
	.byte	0
	.uleb128 0x13
	.4byte	.LBB44
	.4byte	.LBE44-.LBB44
	.4byte	0x11fa
	.uleb128 0x14
	.ascii	"i\000"
	.byte	0x1
	.2byte	0x410
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0x13
	.4byte	.LBB45
	.4byte	.LBE45-.LBB45
	.4byte	0x1215
	.uleb128 0x14
	.ascii	"i\000"
	.byte	0x1
	.2byte	0x412
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x15
	.4byte	.LBB46
	.4byte	.LBE46-.LBB46
	.uleb128 0x14
	.ascii	"i\000"
	.byte	0x1
	.2byte	0x417
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.byte	0
	.byte	0
	.uleb128 0x23
	.4byte	.LASF115
	.byte	0x1
	.2byte	0x41e
	.4byte	.LFB151
	.4byte	.LFE151-.LFB151
	.uleb128 0x1
	.byte	0x9c
	.uleb128 0x1b
	.4byte	.LASF116
	.byte	0x1
	.2byte	0x429
	.4byte	.LFB152
	.4byte	.LFE152-.LFB152
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x129a
	.uleb128 0x16
	.4byte	.LASF58
	.byte	0x1
	.2byte	0x42b
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x16
	.4byte	.LASF117
	.byte	0x1
	.2byte	0x42c
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -16
	.uleb128 0x16
	.4byte	.LASF60
	.byte	0x1
	.2byte	0x42d
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x15
	.4byte	.LBB47
	.4byte	.LBE47-.LBB47
	.uleb128 0x14
	.ascii	"i\000"
	.byte	0x1
	.2byte	0x42f
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.byte	0
	.uleb128 0x1b
	.4byte	.LASF118
	.byte	0x1
	.2byte	0x4aa
	.4byte	.LFB153
	.4byte	.LFE153-.LFB153
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x1362
	.uleb128 0x16
	.4byte	.LASF119
	.byte	0x1
	.2byte	0x4cb
	.4byte	0x1362
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x16
	.4byte	.LASF120
	.byte	0x1
	.2byte	0x4cc
	.4byte	0x1362
	.uleb128 0x3
	.byte	0x91
	.sleb128 -92
	.uleb128 0x16
	.4byte	.LASF60
	.byte	0x1
	.2byte	0x4f5
	.4byte	0x41
	.uleb128 0x2
	.byte	0x91
	.sleb128 -38
	.uleb128 0x13
	.4byte	.LBB48
	.4byte	.LBE48-.LBB48
	.4byte	0x12f9
	.uleb128 0x14
	.ascii	"i\000"
	.byte	0x1
	.2byte	0x4b5
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0x13
	.4byte	.LBB49
	.4byte	.LBE49-.LBB49
	.4byte	0x1314
	.uleb128 0x14
	.ascii	"i\000"
	.byte	0x1
	.2byte	0x4bd
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x13
	.4byte	.LBB50
	.4byte	.LBE50-.LBB50
	.4byte	0x132f
	.uleb128 0x14
	.ascii	"i\000"
	.byte	0x1
	.2byte	0x4c5
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.byte	0
	.uleb128 0x13
	.4byte	.LBB51
	.4byte	.LBE51-.LBB51
	.4byte	0x134a
	.uleb128 0x14
	.ascii	"i\000"
	.byte	0x1
	.2byte	0x50e
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.byte	0
	.uleb128 0x15
	.4byte	.LBB52
	.4byte	.LBE52-.LBB52
	.uleb128 0x14
	.ascii	"i\000"
	.byte	0x1
	.2byte	0x512
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.byte	0
	.byte	0
	.uleb128 0x6
	.4byte	0x28
	.4byte	0x1372
	.uleb128 0x7
	.4byte	0x90
	.byte	0x19
	.byte	0
	.uleb128 0x24
	.4byte	.LASF121
	.byte	0x1
	.2byte	0x518
	.4byte	0x5e
	.4byte	.LFB154
	.4byte	.LFE154-.LFB154
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x13cc
	.uleb128 0x14
	.ascii	"i\000"
	.byte	0x1
	.2byte	0x525
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x13
	.4byte	.LBB53
	.4byte	.LBE53-.LBB53
	.4byte	0x13b4
	.uleb128 0x14
	.ascii	"i\000"
	.byte	0x1
	.2byte	0x51a
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.byte	0
	.uleb128 0x15
	.4byte	.LBB54
	.4byte	.LBE54-.LBB54
	.uleb128 0x14
	.ascii	"i\000"
	.byte	0x1
	.2byte	0x51d
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -16
	.byte	0
	.byte	0
	.uleb128 0x24
	.4byte	.LASF122
	.byte	0x1
	.2byte	0x531
	.4byte	0x2c7
	.4byte	.LFB155
	.4byte	.LFE155-.LFB155
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x1405
	.uleb128 0x1c
	.4byte	.LASF48
	.byte	0x1
	.2byte	0x531
	.4byte	0x29b
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x16
	.4byte	.LASF49
	.byte	0x1
	.2byte	0x533
	.4byte	0x2c7
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.byte	0
	.uleb128 0x1b
	.4byte	.LASF123
	.byte	0x1
	.2byte	0x539
	.4byte	.LFB156
	.4byte	.LFE156-.LFB156
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x1465
	.uleb128 0x1c
	.4byte	.LASF94
	.byte	0x1
	.2byte	0x539
	.4byte	0xdcc
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x1c
	.4byte	.LASF124
	.byte	0x1
	.2byte	0x539
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x16
	.4byte	.LASF125
	.byte	0x1
	.2byte	0x53b
	.4byte	0x257
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x16
	.4byte	.LASF126
	.byte	0x1
	.2byte	0x53c
	.4byte	0x257
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x14
	.ascii	"y\000"
	.byte	0x1
	.2byte	0x53d
	.4byte	0x257
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.byte	0
	.uleb128 0x1b
	.4byte	.LASF127
	.byte	0x1
	.2byte	0x541
	.4byte	.LFB157
	.4byte	.LFE157-.LFB157
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x14c5
	.uleb128 0x1c
	.4byte	.LASF94
	.byte	0x1
	.2byte	0x541
	.4byte	0xdcc
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x1c
	.4byte	.LASF124
	.byte	0x1
	.2byte	0x541
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x16
	.4byte	.LASF125
	.byte	0x1
	.2byte	0x543
	.4byte	0x257
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x16
	.4byte	.LASF126
	.byte	0x1
	.2byte	0x544
	.4byte	0x257
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x14
	.ascii	"x\000"
	.byte	0x1
	.2byte	0x545
	.4byte	0x257
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.byte	0
	.uleb128 0x1b
	.4byte	.LASF128
	.byte	0x1
	.2byte	0x549
	.4byte	.LFB158
	.4byte	.LFE158-.LFB158
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x152b
	.uleb128 0x18
	.ascii	"x\000"
	.byte	0x1
	.2byte	0x549
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x18
	.ascii	"y\000"
	.byte	0x1
	.2byte	0x549
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1c
	.4byte	.LASF129
	.byte	0x1
	.2byte	0x549
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x16
	.4byte	.LASF117
	.byte	0x1
	.2byte	0x54b
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -16
	.uleb128 0x15
	.4byte	.LBB55
	.4byte	.LBE55-.LBB55
	.uleb128 0x14
	.ascii	"i\000"
	.byte	0x1
	.2byte	0x54c
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.byte	0
	.byte	0
	.uleb128 0x1b
	.4byte	.LASF111
	.byte	0x1
	.2byte	0x558
	.4byte	.LFB159
	.4byte	.LFE159-.LFB159
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x157e
	.uleb128 0x16
	.4byte	.LASF130
	.byte	0x1
	.2byte	0x55a
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x16
	.4byte	.LASF131
	.byte	0x1
	.2byte	0x55b
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -16
	.uleb128 0x16
	.4byte	.LASF132
	.byte	0x1
	.2byte	0x55c
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x16
	.4byte	.LASF133
	.byte	0x1
	.2byte	0x55d
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x24
	.4byte	.LASF134
	.byte	0x1
	.2byte	0x566
	.4byte	0x5e
	.4byte	.LFB160
	.4byte	.LFE160-.LFB160
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x166d
	.uleb128 0x16
	.4byte	.LASF135
	.byte	0x1
	.2byte	0x58c
	.4byte	0x2fe
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x16
	.4byte	.LASF136
	.byte	0x1
	.2byte	0x5a6
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x16
	.4byte	.LASF137
	.byte	0x1
	.2byte	0x5a8
	.4byte	0x65
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x16
	.4byte	.LASF138
	.byte	0x1
	.2byte	0x5a9
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x16
	.4byte	.LASF124
	.byte	0x1
	.2byte	0x5aa
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x15
	.4byte	.LBB56
	.4byte	.LBE56-.LBB56
	.uleb128 0x16
	.4byte	.LASF139
	.byte	0x1
	.2byte	0x6de
	.4byte	0x2c7
	.uleb128 0x2
	.byte	0x91
	.sleb128 -60
	.uleb128 0x16
	.4byte	.LASF140
	.byte	0x1
	.2byte	0x6df
	.4byte	0x2c7
	.uleb128 0x3
	.byte	0x91
	.sleb128 -68
	.uleb128 0x16
	.4byte	.LASF141
	.byte	0x1
	.2byte	0x6e0
	.4byte	0x2c7
	.uleb128 0x3
	.byte	0x91
	.sleb128 -76
	.uleb128 0x16
	.4byte	.LASF142
	.byte	0x1
	.2byte	0x6e1
	.4byte	0x2c7
	.uleb128 0x3
	.byte	0x91
	.sleb128 -84
	.uleb128 0x16
	.4byte	.LASF143
	.byte	0x1
	.2byte	0x6e2
	.4byte	0x2c7
	.uleb128 0x3
	.byte	0x91
	.sleb128 -92
	.uleb128 0x16
	.4byte	.LASF144
	.byte	0x1
	.2byte	0x6e3
	.4byte	0x2c7
	.uleb128 0x3
	.byte	0x91
	.sleb128 -100
	.uleb128 0x16
	.4byte	.LASF145
	.byte	0x1
	.2byte	0x6e4
	.4byte	0x2c7
	.uleb128 0x3
	.byte	0x91
	.sleb128 -108
	.uleb128 0x16
	.4byte	.LASF146
	.byte	0x1
	.2byte	0x6e5
	.4byte	0x2c7
	.uleb128 0x3
	.byte	0x91
	.sleb128 -116
	.byte	0
	.byte	0
	.uleb128 0x6
	.4byte	0x167e
	.4byte	0x167e
	.uleb128 0x25
	.4byte	0x90
	.2byte	0x1df
	.byte	0
	.uleb128 0x2
	.byte	0x1
	.byte	0x8
	.4byte	.LASF147
	.uleb128 0x26
	.4byte	.LASF148
	.byte	0x5
	.byte	0x6
	.4byte	0x1696
	.uleb128 0x5
	.byte	0x3
	.4byte	font5x8
	.uleb128 0x27
	.4byte	0x166d
	.uleb128 0x28
	.4byte	.LASF149
	.byte	0x6
	.2byte	0x6a7
	.4byte	0xb1
	.uleb128 0x6
	.4byte	0x28
	.4byte	0x16b8
	.uleb128 0x25
	.4byte	0x90
	.2byte	0x1e7
	.byte	0
	.uleb128 0x29
	.4byte	.LASF150
	.byte	0x7
	.byte	0x2
	.4byte	0x16a7
	.uleb128 0x5
	.byte	0x3
	.4byte	os_image
	.uleb128 0x29
	.4byte	.LASF151
	.byte	0x1
	.byte	0xb
	.4byte	0x5e
	.uleb128 0x5
	.byte	0x3
	.4byte	lastpressed
	.uleb128 0x29
	.4byte	.LASF152
	.byte	0x1
	.byte	0xc
	.4byte	0x5e
	.uleb128 0x5
	.byte	0x3
	.4byte	zoomlevel
	.uleb128 0x29
	.4byte	.LASF153
	.byte	0x1
	.byte	0xd
	.4byte	0x5e
	.uleb128 0x5
	.byte	0x3
	.4byte	speed
	.uleb128 0x29
	.4byte	.LASF154
	.byte	0x1
	.byte	0xe
	.4byte	0x5e
	.uleb128 0x5
	.byte	0x3
	.4byte	lastscore
	.uleb128 0x29
	.4byte	.LASF155
	.byte	0x1
	.byte	0xf
	.4byte	0x5e
	.uleb128 0x5
	.byte	0x3
	.4byte	quit
	.uleb128 0x6
	.4byte	0x28
	.4byte	0x172e
	.uleb128 0x7
	.4byte	0x90
	.byte	0x63
	.byte	0
	.uleb128 0x2a
	.ascii	"a\000"
	.byte	0x1
	.byte	0x11
	.4byte	0x171e
	.uleb128 0x5
	.byte	0x3
	.4byte	a
	.uleb128 0x6
	.4byte	0x28
	.4byte	0x174d
	.uleb128 0x7
	.4byte	0x90
	.byte	0x1
	.byte	0
	.uleb128 0x29
	.4byte	.LASF156
	.byte	0x1
	.byte	0x13
	.4byte	0x173d
	.uleb128 0x5
	.byte	0x3
	.4byte	empty_array
	.uleb128 0x2a
	.ascii	"it\000"
	.byte	0x1
	.byte	0x15
	.4byte	0x5e
	.uleb128 0x5
	.byte	0x3
	.4byte	it
	.uleb128 0x6
	.4byte	0x65
	.4byte	0x1784
	.uleb128 0x7
	.4byte	0x90
	.byte	0x5
	.uleb128 0x7
	.4byte	0x90
	.byte	0x5
	.byte	0
	.uleb128 0x29
	.4byte	.LASF157
	.byte	0x1
	.byte	0x58
	.4byte	0x176e
	.uleb128 0x5
	.byte	0x3
	.4byte	matrix
	.uleb128 0x29
	.4byte	.LASF158
	.byte	0x1
	.byte	0x5b
	.4byte	0x65
	.uleb128 0x5
	.byte	0x3
	.4byte	color
	.uleb128 0x29
	.4byte	.LASF159
	.byte	0x1
	.byte	0x5d
	.4byte	0x24c
	.uleb128 0x5
	.byte	0x3
	.4byte	WS2812_InitStructure
	.uleb128 0x6
	.4byte	0x28
	.4byte	0x17c7
	.uleb128 0x7
	.4byte	0x90
	.byte	0x8
	.byte	0
	.uleb128 0x29
	.4byte	.LASF160
	.byte	0x1
	.byte	0x5f
	.4byte	0x17b7
	.uleb128 0x5
	.byte	0x3
	.4byte	password_buffer
	.uleb128 0x29
	.4byte	.LASF161
	.byte	0x1
	.byte	0x60
	.4byte	0x17b7
	.uleb128 0x5
	.byte	0x3
	.4byte	password
	.uleb128 0x6
	.4byte	0x28
	.4byte	0x17fa
	.uleb128 0x25
	.4byte	0x90
	.2byte	0x752f
	.byte	0
	.uleb128 0x29
	.4byte	.LASF162
	.byte	0x1
	.byte	0x62
	.4byte	0x17e9
	.uleb128 0x5
	.byte	0x3
	.4byte	backup
	.uleb128 0x6
	.4byte	0x28
	.4byte	0x181b
	.uleb128 0x7
	.4byte	0x90
	.byte	0x10
	.byte	0
	.uleb128 0x29
	.4byte	.LASF163
	.byte	0x1
	.byte	0x63
	.4byte	0x180b
	.uleb128 0x5
	.byte	0x3
	.4byte	request_backup_command
	.uleb128 0x6
	.4byte	0x28
	.4byte	0x183c
	.uleb128 0x7
	.4byte	0x90
	.byte	0xa
	.byte	0
	.uleb128 0x29
	.4byte	.LASF164
	.byte	0x1
	.byte	0x65
	.4byte	0x182c
	.uleb128 0x5
	.byte	0x3
	.4byte	prgm_header
	.uleb128 0x2a
	.ascii	"key\000"
	.byte	0x1
	.byte	0x69
	.4byte	0x7e
	.uleb128 0x5
	.byte	0x3
	.4byte	key
	.uleb128 0x6
	.4byte	0x28
	.4byte	0x186e
	.uleb128 0x7
	.4byte	0x90
	.byte	0x9
	.byte	0
	.uleb128 0x29
	.4byte	.LASF165
	.byte	0x1
	.byte	0x6a
	.4byte	0x185e
	.uleb128 0x5
	.byte	0x3
	.4byte	dada
	.uleb128 0x29
	.4byte	.LASF166
	.byte	0x1
	.byte	0x6b
	.4byte	0x5e
	.uleb128 0x5
	.byte	0x3
	.4byte	calibrate
	.uleb128 0x6
	.4byte	0x28
	.4byte	0x18a1
	.uleb128 0x25
	.4byte	0x90
	.2byte	0x2ff
	.byte	0
	.uleb128 0x29
	.4byte	.LASF167
	.byte	0x1
	.byte	0x6f
	.4byte	0x1890
	.uleb128 0x5
	.byte	0x3
	.4byte	framebuffer_active
	.uleb128 0x29
	.4byte	.LASF168
	.byte	0x1
	.byte	0x71
	.4byte	0x1890
	.uleb128 0x5
	.byte	0x3
	.4byte	framebuffer
	.uleb128 0x29
	.4byte	.LASF169
	.byte	0x1
	.byte	0x73
	.4byte	0x41
	.uleb128 0x5
	.byte	0x3
	.4byte	gamecounter
	.uleb128 0x6
	.4byte	0x5e
	.4byte	0x18ea
	.uleb128 0x7
	.4byte	0x90
	.byte	0x2
	.uleb128 0x7
	.4byte	0x90
	.byte	0x1
	.byte	0
	.uleb128 0x29
	.4byte	.LASF170
	.byte	0x1
	.byte	0x74
	.4byte	0x18d4
	.uleb128 0x5
	.byte	0x3
	.4byte	pipebuffer
	.uleb128 0x29
	.4byte	.LASF171
	.byte	0x1
	.byte	0x75
	.4byte	0x5e
	.uleb128 0x5
	.byte	0x3
	.4byte	birdy
	.uleb128 0x29
	.4byte	.LASF172
	.byte	0x1
	.byte	0x76
	.4byte	0x5e
	.uleb128 0x5
	.byte	0x3
	.4byte	is_bird_dead
	.uleb128 0x29
	.4byte	.LASF173
	.byte	0x1
	.byte	0x77
	.4byte	0x5e
	.uleb128 0x5
	.byte	0x3
	.4byte	score
	.uleb128 0x29
	.4byte	.LASF174
	.byte	0x1
	.byte	0x78
	.4byte	0x5e
	.uleb128 0x5
	.byte	0x3
	.4byte	playermodel
	.uleb128 0x6
	.4byte	0x41
	.4byte	0x194f
	.uleb128 0x7
	.4byte	0x90
	.byte	0x10
	.byte	0
	.uleb128 0x29
	.4byte	.LASF175
	.byte	0x1
	.byte	0x7a
	.4byte	0x193f
	.uleb128 0x5
	.byte	0x3
	.4byte	bird
	.uleb128 0x29
	.4byte	.LASF176
	.byte	0x1
	.byte	0x7b
	.4byte	0x193f
	.uleb128 0x5
	.byte	0x3
	.4byte	bird_1
	.uleb128 0x29
	.4byte	.LASF177
	.byte	0x1
	.byte	0x8d
	.4byte	0x193f
	.uleb128 0x5
	.byte	0x3
	.4byte	bird_2
	.uleb128 0x29
	.4byte	.LASF178
	.byte	0x1
	.byte	0x9f
	.4byte	0x193f
	.uleb128 0x5
	.byte	0x3
	.4byte	bird_sprite_1
	.uleb128 0x29
	.4byte	.LASF179
	.byte	0x1
	.byte	0xb1
	.4byte	0x193f
	.uleb128 0x5
	.byte	0x3
	.4byte	bird_sprite_2
	.uleb128 0x29
	.4byte	.LASF180
	.byte	0x1
	.byte	0xc3
	.4byte	0x193f
	.uleb128 0x5
	.byte	0x3
	.4byte	mu_sprite_1
	.uleb128 0x29
	.4byte	.LASF181
	.byte	0x1
	.byte	0xcf
	.4byte	0x193f
	.uleb128 0x5
	.byte	0x3
	.4byte	mu_sprite_2
	.uleb128 0x6
	.4byte	0x41
	.4byte	0x19d7
	.uleb128 0x25
	.4byte	0x90
	.2byte	0x7cf
	.byte	0
	.uleb128 0x29
	.4byte	.LASF69
	.byte	0x1
	.byte	0xdc
	.4byte	0x19c6
	.uleb128 0x5
	.byte	0x3
	.4byte	key_sequence
	.uleb128 0x2b
	.4byte	.LASF182
	.byte	0x1
	.2byte	0x11b
	.4byte	0x29b
	.uleb128 0x5
	.byte	0x3
	.4byte	activevertice
	.uleb128 0x2b
	.4byte	.LASF183
	.byte	0x1
	.2byte	0x128
	.4byte	0x29b
	.uleb128 0x5
	.byte	0x3
	.4byte	vertice1
	.uleb128 0x2b
	.4byte	.LASF184
	.byte	0x1
	.2byte	0x129
	.4byte	0x29b
	.uleb128 0x5
	.byte	0x3
	.4byte	vertice2
	.uleb128 0x2b
	.4byte	.LASF185
	.byte	0x1
	.2byte	0x12a
	.4byte	0x29b
	.uleb128 0x5
	.byte	0x3
	.4byte	vertice3
	.uleb128 0x2b
	.4byte	.LASF186
	.byte	0x1
	.2byte	0x12b
	.4byte	0x29b
	.uleb128 0x5
	.byte	0x3
	.4byte	vertice4
	.uleb128 0x2b
	.4byte	.LASF187
	.byte	0x1
	.2byte	0x12c
	.4byte	0x29b
	.uleb128 0x5
	.byte	0x3
	.4byte	vertice5
	.uleb128 0x2b
	.4byte	.LASF188
	.byte	0x1
	.2byte	0x12d
	.4byte	0x29b
	.uleb128 0x5
	.byte	0x3
	.4byte	vertice6
	.uleb128 0x2b
	.4byte	.LASF189
	.byte	0x1
	.2byte	0x12e
	.4byte	0x29b
	.uleb128 0x5
	.byte	0x3
	.4byte	vertice7
	.uleb128 0x2b
	.4byte	.LASF190
	.byte	0x1
	.2byte	0x12f
	.4byte	0x29b
	.uleb128 0x5
	.byte	0x3
	.4byte	vertice8
	.uleb128 0x2b
	.4byte	.LASF191
	.byte	0x1
	.2byte	0x133
	.4byte	0x24c
	.uleb128 0x5
	.byte	0x3
	.4byte	LINK_InitStructure
	.byte	0
	.section	.debug_abbrev,"",%progbits
.Ldebug_abbrev0:
	.uleb128 0x1
	.uleb128 0x11
	.byte	0x1
	.uleb128 0x25
	.uleb128 0xe
	.uleb128 0x13
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x55
	.uleb128 0x17
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x10
	.uleb128 0x17
	.byte	0
	.byte	0
	.uleb128 0x2
	.uleb128 0x24
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3e
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0xe
	.byte	0
	.byte	0
	.uleb128 0x3
	.uleb128 0x16
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x4
	.uleb128 0x24
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3e
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0x8
	.byte	0
	.byte	0
	.uleb128 0x5
	.uleb128 0x35
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x6
	.uleb128 0x1
	.byte	0x1
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x7
	.uleb128 0x21
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2f
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x8
	.uleb128 0x4
	.byte	0x1
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x9
	.uleb128 0x28
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x1c
	.uleb128 0xd
	.byte	0
	.byte	0
	.uleb128 0xa
	.uleb128 0x13
	.byte	0x1
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xb
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0xc
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0xd
	.uleb128 0x16
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xe
	.uleb128 0x4
	.byte	0x1
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xf
	.uleb128 0x13
	.byte	0x1
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x10
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x11
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x6
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x12
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x6
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2117
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x13
	.uleb128 0xb
	.byte	0x1
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x6
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x14
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x15
	.uleb128 0xb
	.byte	0x1
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x6
	.byte	0
	.byte	0
	.uleb128 0x16
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x17
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x6
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2117
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x18
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x19
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x6
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x1a
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x6
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x1b
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x6
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x1c
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x1d
	.uleb128 0xf
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x1e
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x1f
	.uleb128 0x18
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x20
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x21
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x6
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2117
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x22
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x23
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x6
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x24
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x6
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x25
	.uleb128 0x21
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2f
	.uleb128 0x5
	.byte	0
	.byte	0
	.uleb128 0x26
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x27
	.uleb128 0x26
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x28
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x29
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x2a
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x2b
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.byte	0
	.section	.debug_aranges,"",%progbits
	.4byte	0x19c
	.2byte	0x2
	.4byte	.Ldebug_info0
	.byte	0x4
	.byte	0
	.2byte	0
	.2byte	0
	.4byte	.LFB112
	.4byte	.LFE112-.LFB112
	.4byte	.LFB113
	.4byte	.LFE113-.LFB113
	.4byte	.LFB114
	.4byte	.LFE114-.LFB114
	.4byte	.LFB115
	.4byte	.LFE115-.LFB115
	.4byte	.LFB116
	.4byte	.LFE116-.LFB116
	.4byte	.LFB117
	.4byte	.LFE117-.LFB117
	.4byte	.LFB118
	.4byte	.LFE118-.LFB118
	.4byte	.LFB119
	.4byte	.LFE119-.LFB119
	.4byte	.LFB120
	.4byte	.LFE120-.LFB120
	.4byte	.LFB121
	.4byte	.LFE121-.LFB121
	.4byte	.LFB122
	.4byte	.LFE122-.LFB122
	.4byte	.LFB123
	.4byte	.LFE123-.LFB123
	.4byte	.LFB124
	.4byte	.LFE124-.LFB124
	.4byte	.LFB125
	.4byte	.LFE125-.LFB125
	.4byte	.LFB126
	.4byte	.LFE126-.LFB126
	.4byte	.LFB127
	.4byte	.LFE127-.LFB127
	.4byte	.LFB128
	.4byte	.LFE128-.LFB128
	.4byte	.LFB129
	.4byte	.LFE129-.LFB129
	.4byte	.LFB130
	.4byte	.LFE130-.LFB130
	.4byte	.LFB131
	.4byte	.LFE131-.LFB131
	.4byte	.LFB132
	.4byte	.LFE132-.LFB132
	.4byte	.LFB133
	.4byte	.LFE133-.LFB133
	.4byte	.LFB134
	.4byte	.LFE134-.LFB134
	.4byte	.LFB135
	.4byte	.LFE135-.LFB135
	.4byte	.LFB136
	.4byte	.LFE136-.LFB136
	.4byte	.LFB137
	.4byte	.LFE137-.LFB137
	.4byte	.LFB138
	.4byte	.LFE138-.LFB138
	.4byte	.LFB139
	.4byte	.LFE139-.LFB139
	.4byte	.LFB140
	.4byte	.LFE140-.LFB140
	.4byte	.LFB141
	.4byte	.LFE141-.LFB141
	.4byte	.LFB142
	.4byte	.LFE142-.LFB142
	.4byte	.LFB143
	.4byte	.LFE143-.LFB143
	.4byte	.LFB144
	.4byte	.LFE144-.LFB144
	.4byte	.LFB145
	.4byte	.LFE145-.LFB145
	.4byte	.LFB146
	.4byte	.LFE146-.LFB146
	.4byte	.LFB147
	.4byte	.LFE147-.LFB147
	.4byte	.LFB148
	.4byte	.LFE148-.LFB148
	.4byte	.LFB149
	.4byte	.LFE149-.LFB149
	.4byte	.LFB150
	.4byte	.LFE150-.LFB150
	.4byte	.LFB151
	.4byte	.LFE151-.LFB151
	.4byte	.LFB152
	.4byte	.LFE152-.LFB152
	.4byte	.LFB153
	.4byte	.LFE153-.LFB153
	.4byte	.LFB154
	.4byte	.LFE154-.LFB154
	.4byte	.LFB155
	.4byte	.LFE155-.LFB155
	.4byte	.LFB156
	.4byte	.LFE156-.LFB156
	.4byte	.LFB157
	.4byte	.LFE157-.LFB157
	.4byte	.LFB158
	.4byte	.LFE158-.LFB158
	.4byte	.LFB159
	.4byte	.LFE159-.LFB159
	.4byte	.LFB160
	.4byte	.LFE160-.LFB160
	.4byte	0
	.4byte	0
	.section	.debug_ranges,"",%progbits
.Ldebug_ranges0:
	.4byte	.LFB112
	.4byte	.LFE112
	.4byte	.LFB113
	.4byte	.LFE113
	.4byte	.LFB114
	.4byte	.LFE114
	.4byte	.LFB115
	.4byte	.LFE115
	.4byte	.LFB116
	.4byte	.LFE116
	.4byte	.LFB117
	.4byte	.LFE117
	.4byte	.LFB118
	.4byte	.LFE118
	.4byte	.LFB119
	.4byte	.LFE119
	.4byte	.LFB120
	.4byte	.LFE120
	.4byte	.LFB121
	.4byte	.LFE121
	.4byte	.LFB122
	.4byte	.LFE122
	.4byte	.LFB123
	.4byte	.LFE123
	.4byte	.LFB124
	.4byte	.LFE124
	.4byte	.LFB125
	.4byte	.LFE125
	.4byte	.LFB126
	.4byte	.LFE126
	.4byte	.LFB127
	.4byte	.LFE127
	.4byte	.LFB128
	.4byte	.LFE128
	.4byte	.LFB129
	.4byte	.LFE129
	.4byte	.LFB130
	.4byte	.LFE130
	.4byte	.LFB131
	.4byte	.LFE131
	.4byte	.LFB132
	.4byte	.LFE132
	.4byte	.LFB133
	.4byte	.LFE133
	.4byte	.LFB134
	.4byte	.LFE134
	.4byte	.LFB135
	.4byte	.LFE135
	.4byte	.LFB136
	.4byte	.LFE136
	.4byte	.LFB137
	.4byte	.LFE137
	.4byte	.LFB138
	.4byte	.LFE138
	.4byte	.LFB139
	.4byte	.LFE139
	.4byte	.LFB140
	.4byte	.LFE140
	.4byte	.LFB141
	.4byte	.LFE141
	.4byte	.LFB142
	.4byte	.LFE142
	.4byte	.LFB143
	.4byte	.LFE143
	.4byte	.LFB144
	.4byte	.LFE144
	.4byte	.LFB145
	.4byte	.LFE145
	.4byte	.LFB146
	.4byte	.LFE146
	.4byte	.LFB147
	.4byte	.LFE147
	.4byte	.LFB148
	.4byte	.LFE148
	.4byte	.LFB149
	.4byte	.LFE149
	.4byte	.LFB150
	.4byte	.LFE150
	.4byte	.LFB151
	.4byte	.LFE151
	.4byte	.LFB152
	.4byte	.LFE152
	.4byte	.LFB153
	.4byte	.LFE153
	.4byte	.LFB154
	.4byte	.LFE154
	.4byte	.LFB155
	.4byte	.LFE155
	.4byte	.LFB156
	.4byte	.LFE156
	.4byte	.LFB157
	.4byte	.LFE157
	.4byte	.LFB158
	.4byte	.LFE158
	.4byte	.LFB159
	.4byte	.LFE159
	.4byte	.LFB160
	.4byte	.LFE160
	.4byte	0
	.4byte	0
	.section	.debug_line,"",%progbits
.Ldebug_line0:
	.section	.debug_str,"MS",%progbits,1
.LASF168:
	.ascii	"framebuffer\000"
.LASF93:
	.ascii	"translate\000"
.LASF105:
	.ascii	"origin_y\000"
.LASF145:
	.ascii	"point7\000"
.LASF87:
	.ascii	"settriangle\000"
.LASF184:
	.ascii	"vertice2\000"
.LASF185:
	.ascii	"vertice3\000"
.LASF186:
	.ascii	"vertice4\000"
.LASF187:
	.ascii	"vertice5\000"
.LASF188:
	.ascii	"vertice6\000"
.LASF189:
	.ascii	"vertice7\000"
.LASF62:
	.ascii	"LINK_send_array\000"
.LASF73:
	.ascii	"checksum\000"
.LASF10:
	.ascii	"uint64_t\000"
.LASF37:
	.ascii	"GPIO_PuPd_UP\000"
.LASF16:
	.ascii	"OTYPER\000"
.LASF28:
	.ascii	"GPIO_OType_PP\000"
.LASF96:
	.ascii	"transfer_data\000"
.LASF110:
	.ascii	"count\000"
.LASF161:
	.ascii	"password\000"
.LASF50:
	.ascii	"vector\000"
.LASF160:
	.ascii	"password_buffer\000"
.LASF194:
	.ascii	"WS2812_update\000"
.LASF15:
	.ascii	"MODER\000"
.LASF11:
	.ascii	"long long unsigned int\000"
.LASF124:
	.ascii	"angle\000"
.LASF25:
	.ascii	"GPIO_Mode_AF\000"
.LASF80:
	.ascii	"setpixel\000"
.LASF18:
	.ascii	"PUPDR\000"
.LASF42:
	.ascii	"GPIO_Speed\000"
.LASF61:
	.ascii	"LINK_send_byte\000"
.LASF97:
	.ascii	"test\000"
.LASF26:
	.ascii	"GPIO_Mode_AN\000"
.LASF31:
	.ascii	"GPIO_Low_Speed\000"
.LASF149:
	.ascii	"ITM_RxBuffer\000"
.LASF66:
	.ascii	"cmd1\000"
.LASF67:
	.ascii	"cmd2\000"
.LASF92:
	.ascii	"invertrectangle\000"
.LASF174:
	.ascii	"playermodel\000"
.LASF48:
	.ascii	"vertice\000"
.LASF135:
	.ascii	"vector3\000"
.LASF9:
	.ascii	"long long int\000"
.LASF0:
	.ascii	"signed char\000"
.LASF121:
	.ascii	"check_password\000"
.LASF83:
	.ascii	"invertpixel\000"
.LASF113:
	.ascii	"drawflappy\000"
.LASF23:
	.ascii	"GPIO_Mode_IN\000"
.LASF140:
	.ascii	"point2\000"
.LASF143:
	.ascii	"point5\000"
.LASF148:
	.ascii	"font5x8\000"
.LASF14:
	.ascii	"ENABLE\000"
.LASF81:
	.ascii	"address\000"
.LASF106:
	.ascii	"tick\000"
.LASF155:
	.ascii	"quit\000"
.LASF4:
	.ascii	"uint16_t\000"
.LASF47:
	.ascii	"double\000"
.LASF126:
	.ascii	"cosangle\000"
.LASF54:
	.ascii	"LINK_init\000"
.LASF180:
	.ascii	"mu_sprite_1\000"
.LASF181:
	.ascii	"mu_sprite_2\000"
.LASF169:
	.ascii	"gamecounter\000"
.LASF63:
	.ascii	"array\000"
.LASF30:
	.ascii	"GPIOOType_TypeDef\000"
.LASF173:
	.ascii	"score\000"
.LASF171:
	.ascii	"birdy\000"
.LASF57:
	.ascii	"byte\000"
.LASF129:
	.ascii	"number\000"
.LASF32:
	.ascii	"GPIO_Medium_Speed\000"
.LASF79:
	.ascii	"update_lcd\000"
.LASF69:
	.ascii	"key_sequence\000"
.LASF89:
	.ascii	"inverttriangle\000"
.LASF35:
	.ascii	"GPIOSpeed_TypeDef\000"
.LASF40:
	.ascii	"GPIO_Pin\000"
.LASF60:
	.ascii	"temp\000"
.LASF156:
	.ascii	"empty_array\000"
.LASF192:
	.ascii	"GNU C 4.8.3 20140228 (release) [ARM/embedded-4_8-br"
	.ascii	"anch revision 208322] -fmessage-length=0 -mtp=soft "
	.ascii	"-mcpu=cortex-m4 -mlittle-endian -mfloat-abi=soft -m"
	.ascii	"thumb -g2 -std=gnu99 -fno-dwarf2-cfi-asm -fno-built"
	.ascii	"in -ffunction-sections -fdata-sections -fno-common\000"
.LASF53:
	.ascii	"WS2812_init\000"
.LASF8:
	.ascii	"unsigned int\000"
.LASF59:
	.ascii	"LINK_wait_for_byte\000"
.LASF44:
	.ascii	"GPIO_PuPd\000"
.LASF132:
	.ascii	"number3\000"
.LASF49:
	.ascii	"point\000"
.LASF65:
	.ascii	"LINK_send_key\000"
.LASF22:
	.ascii	"GPIO_TypeDef\000"
.LASF102:
	.ascii	"drawbird\000"
.LASF109:
	.ascii	"rand\000"
.LASF21:
	.ascii	"LCKR\000"
.LASF176:
	.ascii	"bird_1\000"
.LASF177:
	.ascii	"bird_2\000"
.LASF138:
	.ascii	"switcher\000"
.LASF72:
	.ascii	"data\000"
.LASF85:
	.ascii	"clearline\000"
.LASF164:
	.ascii	"prgm_header\000"
.LASF5:
	.ascii	"short unsigned int\000"
.LASF114:
	.ascii	"LINK_get_bit\000"
.LASF166:
	.ascii	"calibrate\000"
.LASF39:
	.ascii	"GPIOPuPd_TypeDef\000"
.LASF86:
	.ascii	"invertline\000"
.LASF170:
	.ascii	"pipebuffer\000"
.LASF116:
	.ascii	"LINK_get_backup\000"
.LASF70:
	.ascii	"LINK_send_command\000"
.LASF2:
	.ascii	"short int\000"
.LASF77:
	.ascii	"boot\000"
.LASF154:
	.ascii	"lastscore\000"
.LASF55:
	.ascii	"delay_us\000"
.LASF123:
	.ascii	"rotate_x\000"
.LASF127:
	.ascii	"rotate_y\000"
.LASF36:
	.ascii	"GPIO_PuPd_NOPULL\000"
.LASF167:
	.ascii	"framebuffer_active\000"
.LASF182:
	.ascii	"activevertice\000"
.LASF84:
	.ascii	"setline\000"
.LASF76:
	.ascii	"LINK_send_array_with_checksum\000"
.LASF12:
	.ascii	"sizetype\000"
.LASF43:
	.ascii	"GPIO_OType\000"
.LASF152:
	.ascii	"zoomlevel\000"
.LASF134:
	.ascii	"main\000"
.LASF137:
	.ascii	"selected\000"
.LASF45:
	.ascii	"GPIO_InitTypeDef\000"
.LASF130:
	.ascii	"number1\000"
.LASF131:
	.ascii	"number2\000"
.LASF172:
	.ascii	"is_bird_dead\000"
.LASF133:
	.ascii	"number4\000"
.LASF159:
	.ascii	"WS2812_InitStructure\000"
.LASF139:
	.ascii	"point1\000"
.LASF150:
	.ascii	"os_image\000"
.LASF141:
	.ascii	"point3\000"
.LASF142:
	.ascii	"point4\000"
.LASF183:
	.ascii	"vertice1\000"
.LASF68:
	.ascii	"LINK_send_key_sequence\000"
.LASF144:
	.ascii	"point6\000"
.LASF146:
	.ascii	"point8\000"
.LASF112:
	.ascii	"initflappy\000"
.LASF190:
	.ascii	"vertice8\000"
.LASF98:
	.ascii	"pattern0\000"
.LASF99:
	.ascii	"pattern1\000"
.LASF100:
	.ascii	"pattern2\000"
.LASF101:
	.ascii	"pattern3\000"
.LASF6:
	.ascii	"int32_t\000"
.LASF107:
	.ascii	"game_over\000"
.LASF95:
	.ascii	"transferdelay\000"
.LASF51:
	.ascii	"delay\000"
.LASF33:
	.ascii	"GPIO_Fast_Speed\000"
.LASF125:
	.ascii	"sinangle\000"
.LASF13:
	.ascii	"DISABLE\000"
.LASF34:
	.ascii	"GPIO_High_Speed\000"
.LASF94:
	.ascii	"vertice_ptr\000"
.LASF88:
	.ascii	"cleartriangle\000"
.LASF7:
	.ascii	"uint32_t\000"
.LASF191:
	.ascii	"LINK_InitStructure\000"
.LASF78:
	.ascii	"clear_buffer\000"
.LASF104:
	.ascii	"origin_x\000"
.LASF175:
	.ascii	"bird\000"
.LASF162:
	.ascii	"backup\000"
.LASF24:
	.ascii	"GPIO_Mode_OUT\000"
.LASF64:
	.ascii	"length\000"
.LASF158:
	.ascii	"color\000"
.LASF147:
	.ascii	"char\000"
.LASF74:
	.ascii	"chksm1\000"
.LASF75:
	.ascii	"chksm2\000"
.LASF71:
	.ascii	"command_ID\000"
.LASF117:
	.ascii	"index\000"
.LASF178:
	.ascii	"bird_sprite_1\000"
.LASF179:
	.ascii	"bird_sprite_2\000"
.LASF91:
	.ascii	"clearrectangle\000"
.LASF41:
	.ascii	"GPIO_Mode\000"
.LASF82:
	.ascii	"clearpixel\000"
.LASF111:
	.ascii	"drawscore\000"
.LASF1:
	.ascii	"unsigned char\000"
.LASF17:
	.ascii	"OSPEEDR\000"
.LASF122:
	.ascii	"vertice_to_point\000"
.LASF29:
	.ascii	"GPIO_OType_OD\000"
.LASF19:
	.ascii	"BSRRL\000"
.LASF165:
	.ascii	"dada\000"
.LASF52:
	.ascii	"delaycount\000"
.LASF90:
	.ascii	"setrectangle\000"
.LASF20:
	.ascii	"BSRRH\000"
.LASF118:
	.ascii	"send_os\000"
.LASF3:
	.ascii	"uint8_t\000"
.LASF38:
	.ascii	"GPIO_PuPd_DOWN\000"
.LASF46:
	.ascii	"float\000"
.LASF153:
	.ascii	"speed\000"
.LASF193:
	.ascii	"/Users/Sean/Documents/CrossWorks Projects/Calchack_"
	.ascii	"F4/main.c\000"
.LASF56:
	.ascii	"LINK_get_byte\000"
.LASF27:
	.ascii	"GPIOMode_TypeDef\000"
.LASF157:
	.ascii	"matrix\000"
.LASF108:
	.ascii	"cheat\000"
.LASF128:
	.ascii	"drawnumber\000"
.LASF58:
	.ascii	"timeout\000"
.LASF151:
	.ascii	"lastpressed\000"
.LASF115:
	.ascii	"calibrate_clock\000"
.LASF136:
	.ascii	"framecounter\000"
.LASF119:
	.ascii	"character_lookup_1\000"
.LASF120:
	.ascii	"character_lookup_2\000"
.LASF103:
	.ascii	"drawpipe\000"
.LASF163:
	.ascii	"request_backup_command\000"
	.ident	"GCC: (GNU) 4.8.3 20140228 (release) [ARM/embedded-4_8-branch revision 208322]"
